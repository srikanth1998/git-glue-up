var Of=Object.defineProperty;var Ff=(Ie,$,r)=>$ in Ie?Of(Ie,$,{enumerable:!0,configurable:!0,writable:!0,value:r}):Ie[$]=r;var me=(Ie,$,r)=>Ff(Ie,typeof $!="symbol"?$+"":$,r);import{m as xh,a as r_}from"./modelStatusAtom.js";import{c as Df}from"./vanilla.js";var Sn={},i_={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(Ie,$,r)=>{Ie.exports=r.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(Ie,$,r)=>{Ie.exports=r.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(Ie,$,r)=>{r.r($),r.d($,{Environment:()=>st,Interpreter:()=>dt,Template:()=>ht,parse:()=>ye,tokenize:()=>y});var f=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),A=Object.freeze({set:f.Set,for:f.For,in:f.In,is:f.Is,if:f.If,else:f.Else,endif:f.EndIf,elif:f.ElseIf,endfor:f.EndFor,and:f.And,or:f.Or,not:f.Not,"not in":f.NotIn,macro:f.Macro,endmacro:f.EndMacro,true:f.BooleanLiteral,false:f.BooleanLiteral,none:f.NullLiteral,True:f.BooleanLiteral,False:f.BooleanLiteral,None:f.NullLiteral}),j=class{constructor(L,ie){this.value=L,this.type=ie}};function X(L){return/\w/.test(L)}function R(L){return/[0-9]/.test(L)}var g=[["{%",f.OpenStatement],["%}",f.CloseStatement],["{{",f.OpenExpression],["}}",f.CloseExpression],["(",f.OpenParen],[")",f.CloseParen],["{",f.OpenCurlyBracket],["}",f.CloseCurlyBracket],["[",f.OpenSquareBracket],["]",f.CloseSquareBracket],[",",f.Comma],[".",f.Dot],[":",f.Colon],["|",f.Pipe],["<=",f.ComparisonBinaryOperator],[">=",f.ComparisonBinaryOperator],["==",f.ComparisonBinaryOperator],["!=",f.ComparisonBinaryOperator],["<",f.ComparisonBinaryOperator],[">",f.ComparisonBinaryOperator],["+",f.AdditiveBinaryOperator],["-",f.AdditiveBinaryOperator],["*",f.MultiplicativeBinaryOperator],["/",f.MultiplicativeBinaryOperator],["%",f.MultiplicativeBinaryOperator],["=",f.Equals]],v=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function M(L,ie={}){return L.endsWith(`
`)&&(L=L.slice(0,-1)),L=L.replace(/{#.*?#}/gs,"{##}"),ie.lstrip_blocks&&(L=L.replace(/^[ \t]*({[#%])/gm,"$1")),ie.trim_blocks&&(L=L.replace(/([#%]})\n/g,"$1")),L.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function y(L,ie={}){var Je,ut,mt;const H=[],_e=M(L,ie);let $e=0;const We=vt=>{let kt="";for(;vt(_e[$e]);){if(_e[$e]==="\\"){if(++$e,$e>=_e.length)throw new SyntaxError("Unexpected end of input");const It=_e[$e++],os=v.get(It);if(os===void 0)throw new SyntaxError(`Unexpected escaped character: ${It}`);kt+=os;continue}if(kt+=_e[$e++],$e>=_e.length)throw new SyntaxError("Unexpected end of input")}return kt};e:for(;$e<_e.length;){const vt=(Je=H.at(-1))==null?void 0:Je.type;if(vt===void 0||vt===f.CloseStatement||vt===f.CloseExpression){let It="";for(;$e<_e.length&&!(_e[$e]==="{"&&(_e[$e+1]==="%"||_e[$e+1]==="{"));)It+=_e[$e++];if(It.length>0){H.push(new j(It,f.Text));continue}}We(It=>/\s/.test(It));const kt=_e[$e];if(kt==="-"||kt==="+"){const It=(ut=H.at(-1))==null?void 0:ut.type;if(It===f.Text||It===void 0)throw new SyntaxError(`Unexpected character: ${kt}`);switch(It){case f.Identifier:case f.NumericLiteral:case f.BooleanLiteral:case f.NullLiteral:case f.StringLiteral:case f.CloseParen:case f.CloseSquareBracket:break;default:{++$e;const os=We(R);H.push(new j(`${kt}${os}`,os.length>0?f.NumericLiteral:f.UnaryOperator));continue}}}for(const[It,os]of g)if(_e.slice($e,$e+It.length)===It){H.push(new j(It,os)),$e+=It.length;continue e}if(kt==="'"||kt==='"'){++$e;const It=We(os=>os!==kt);H.push(new j(It,f.StringLiteral)),++$e;continue}if(R(kt)){const It=We(R);H.push(new j(It,f.NumericLiteral));continue}if(X(kt)){const It=We(X),os=Object.hasOwn(A,It)?A[It]:f.Identifier;os===f.In&&((mt=H.at(-1))==null?void 0:mt.type)===f.Not?(H.pop(),H.push(new j("not in",f.NotIn))):H.push(new j(It,os));continue}throw new SyntaxError(`Unexpected character: ${kt}`)}return H}var b=class{constructor(){me(this,"type","Statement")}},O=class extends b{constructor(ie){super();me(this,"type","Program");this.body=ie}},K=class extends b{constructor(ie,H,_e){super();me(this,"type","If");this.test=ie,this.body=H,this.alternate=_e}},se=class extends b{constructor(ie,H,_e,$e){super();me(this,"type","For");this.loopvar=ie,this.iterable=H,this.body=_e,this.defaultBlock=$e}},ne=class extends b{constructor(ie,H){super();me(this,"type","Set");this.assignee=ie,this.value=H}},W=class extends b{constructor(ie,H,_e){super();me(this,"type","Macro");this.name=ie,this.args=H,this.body=_e}},U=class extends b{constructor(){super(...arguments);me(this,"type","Expression")}},q=class extends U{constructor(ie,H,_e){super();me(this,"type","MemberExpression");this.object=ie,this.property=H,this.computed=_e}},I=class extends U{constructor(ie,H){super();me(this,"type","CallExpression");this.callee=ie,this.args=H}},S=class extends U{constructor(ie){super();me(this,"type","Identifier");this.value=ie}},w=class extends U{constructor(ie){super();me(this,"type","Literal");this.value=ie}},x=class extends w{constructor(){super(...arguments);me(this,"type","NumericLiteral")}},F=class extends w{constructor(){super(...arguments);me(this,"type","StringLiteral")}},ae=class extends w{constructor(){super(...arguments);me(this,"type","BooleanLiteral")}},oe=class extends w{constructor(){super(...arguments);me(this,"type","NullLiteral")}},ve=class extends w{constructor(){super(...arguments);me(this,"type","ArrayLiteral")}},we=class extends w{constructor(){super(...arguments);me(this,"type","TupleLiteral")}},re=class extends w{constructor(){super(...arguments);me(this,"type","ObjectLiteral")}},xe=class extends U{constructor(ie,H,_e){super();me(this,"type","BinaryExpression");this.operator=ie,this.left=H,this.right=_e}},ce=class extends U{constructor(ie,H){super();me(this,"type","FilterExpression");this.operand=ie,this.filter=H}},ke=class extends U{constructor(ie,H){super();me(this,"type","SelectExpression");this.iterable=ie,this.test=H}},Oe=class extends U{constructor(ie,H,_e){super();me(this,"type","TestExpression");this.operand=ie,this.negate=H,this.test=_e}},Pe=class extends U{constructor(ie,H){super();me(this,"type","UnaryExpression");this.operator=ie,this.argument=H}},tt=class extends U{constructor(ie=void 0,H=void 0,_e=void 0){super();me(this,"type","SliceExpression");this.start=ie,this.stop=H,this.step=_e}},Ge=class extends U{constructor(ie,H){super();me(this,"type","KeywordArgumentExpression");this.key=ie,this.value=H}};function ye(L){const ie=new O([]);let H=0;function _e(ot,Tt){const Dt=L[H++];if(!Dt||Dt.type!==ot)throw new Error(`Parser Error: ${Tt}. ${Dt.type} !== ${ot}.`);return Dt}function $e(){switch(L[H].type){case f.Text:return ut();case f.OpenStatement:return mt();case f.OpenExpression:return vt();default:throw new SyntaxError(`Unexpected token type: ${L[H].type}`)}}function We(...ot){return H+ot.length<=L.length&&ot.some((Tt,Dt)=>Tt!==L[H+Dt].type)}function Je(...ot){return H+ot.length<=L.length&&ot.every((Tt,Dt)=>Tt===L[H+Dt].type)}function ut(){return new F(_e(f.Text,"Expected text token").value)}function mt(){_e(f.OpenStatement,"Expected opening statement token");let ot;switch(L[H].type){case f.Set:++H,ot=kt(),_e(f.CloseStatement,"Expected closing statement token");break;case f.If:++H,ot=It(),_e(f.OpenStatement,"Expected {% token"),_e(f.EndIf,"Expected endif token"),_e(f.CloseStatement,"Expected %} token");break;case f.Macro:++H,ot=os(),_e(f.OpenStatement,"Expected {% token"),_e(f.EndMacro,"Expected endmacro token"),_e(f.CloseStatement,"Expected %} token");break;case f.For:++H,ot=Cs(),_e(f.OpenStatement,"Expected {% token"),_e(f.EndFor,"Expected endfor token"),_e(f.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${L[H].type}`)}return ot}function vt(){_e(f.OpenExpression,"Expected opening expression token");const ot=Ds();return _e(f.CloseExpression,"Expected closing expression token"),ot}function kt(){const ot=Ds();if(Je(f.Equals)){++H;const Tt=kt();return new ne(ot,Tt)}return ot}function It(){var Vs,Nr,Ar,Ms,lr,Os,Er,es;const ot=Ds();_e(f.CloseStatement,"Expected closing statement token");const Tt=[],Dt=[];for(;!(((Vs=L[H])==null?void 0:Vs.type)===f.OpenStatement&&(((Nr=L[H+1])==null?void 0:Nr.type)===f.ElseIf||((Ar=L[H+1])==null?void 0:Ar.type)===f.Else||((Ms=L[H+1])==null?void 0:Ms.type)===f.EndIf));)Tt.push($e());if(((lr=L[H])==null?void 0:lr.type)===f.OpenStatement&&((Os=L[H+1])==null?void 0:Os.type)!==f.EndIf)if(++H,Je(f.ElseIf))_e(f.ElseIf,"Expected elseif token"),Dt.push(It());else for(_e(f.Else,"Expected else token"),_e(f.CloseStatement,"Expected closing statement token");!(((Er=L[H])==null?void 0:Er.type)===f.OpenStatement&&((es=L[H+1])==null?void 0:es.type)===f.EndIf);)Dt.push($e());return new K(ot,Tt,Dt)}function os(){const ot=ar();if(ot.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Tt=$r();_e(f.CloseStatement,"Expected closing statement token");const Dt=[];for(;We(f.OpenStatement,f.EndMacro);)Dt.push($e());return new W(ot,Tt,Dt)}function ys(ot=!1){const Tt=ot?ar:Ds,Dt=[Tt()],Vs=Je(f.Comma);for(;Vs&&(++H,Dt.push(Tt()),!!Je(f.Comma)););return Vs?new we(Dt):Dt[0]}function Cs(){const ot=ys(!0);if(!(ot instanceof S||ot instanceof we))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${ot.type} instead`);_e(f.In,"Expected `in` keyword following loop variable");const Tt=Ds();_e(f.CloseStatement,"Expected closing statement token");const Dt=[];for(;We(f.OpenStatement,f.EndFor)&&We(f.OpenStatement,f.Else);)Dt.push($e());const Vs=[];if(Je(f.OpenStatement,f.Else))for(++H,++H,_e(f.CloseStatement,"Expected closing statement token");We(f.OpenStatement,f.EndFor);)Vs.push($e());return new se(ot,Tt,Dt,Vs)}function Ds(){return sr()}function sr(){const ot=kr();if(Je(f.If)){++H;const Tt=kr();if(Je(f.Else)){++H;const Dt=kr();return new K(Tt,[ot],[Dt])}else return new ke(ot,Tt)}return ot}function kr(){let ot=Qr();for(;Je(f.Or);){const Tt=L[H];++H;const Dt=Qr();ot=new xe(Tt,ot,Dt)}return ot}function Qr(){let ot=Us();for(;Je(f.And);){const Tt=L[H];++H;const Dt=Us();ot=new xe(Tt,ot,Dt)}return ot}function Us(){let ot;for(;Je(f.Not);){const Tt=L[H];++H;const Dt=Us();ot=new Pe(Tt,Dt)}return ot??Tr()}function Tr(){let ot=Nt();for(;Je(f.ComparisonBinaryOperator)||Je(f.In)||Je(f.NotIn);){const Tt=L[H];++H;const Dt=Nt();ot=new xe(Tt,ot,Dt)}return ot}function Nt(){let ot=Ir();for(;Je(f.AdditiveBinaryOperator);){const Tt=L[H];++H;const Dt=Ir();ot=new xe(Tt,ot,Dt)}return ot}function Xr(){const ot=Jr();return Je(f.OpenParen)?Sr(ot):ot}function Sr(ot){let Tt=new I(ot,$r());return Je(f.OpenParen)&&(Tt=Sr(Tt)),Tt}function $r(){_e(f.OpenParen,"Expected opening parenthesis for arguments list");const ot=Yr();return _e(f.CloseParen,"Expected closing parenthesis for arguments list"),ot}function Yr(){const ot=[];for(;!Je(f.CloseParen);){let Tt=Ds();if(Je(f.Equals)){if(++H,!(Tt instanceof S))throw new SyntaxError("Expected identifier for keyword argument");const Dt=Ds();Tt=new Ge(Tt,Dt)}ot.push(Tt),Je(f.Comma)&&++H}return ot}function dr(){const ot=[];let Tt=!1;for(;!Je(f.CloseSquareBracket);)Je(f.Colon)?(ot.push(void 0),++H,Tt=!0):(ot.push(Ds()),Je(f.Colon)&&(++H,Tt=!0));if(ot.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Tt){if(ot.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new tt(...ot)}return ot[0]}function Jr(){let ot=ar();for(;Je(f.Dot)||Je(f.OpenSquareBracket);){const Tt=L[H];++H;let Dt;const Vs=Tt.type!==f.Dot;if(Vs)Dt=dr(),_e(f.CloseSquareBracket,"Expected closing square bracket");else if(Dt=ar(),Dt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");ot=new q(ot,Dt,Vs)}return ot}function Ir(){let ot=Br();for(;Je(f.MultiplicativeBinaryOperator);){const Tt=L[H];++H;const Dt=Br();ot=new xe(Tt,ot,Dt)}return ot}function Br(){let ot=Rr();for(;Je(f.Is);){++H;const Tt=Je(f.Not);Tt&&++H;let Dt=ar();if(Dt instanceof ae?Dt=new S(Dt.value.toString()):Dt instanceof oe&&(Dt=new S("none")),!(Dt instanceof S))throw new SyntaxError("Expected identifier for the test");ot=new Oe(ot,Tt,Dt)}return ot}function Rr(){let ot=Xr();for(;Je(f.Pipe);){++H;let Tt=ar();if(!(Tt instanceof S))throw new SyntaxError("Expected identifier for the filter");Je(f.OpenParen)&&(Tt=Sr(Tt)),ot=new ce(ot,Tt)}return ot}function ar(){const ot=L[H];switch(ot.type){case f.NumericLiteral:return++H,new x(Number(ot.value));case f.StringLiteral:return++H,new F(ot.value);case f.BooleanLiteral:return++H,new ae(ot.value.toLowerCase()==="true");case f.NullLiteral:return++H,new oe(null);case f.Identifier:return++H,new S(ot.value);case f.OpenParen:{++H;const Tt=ys();if(L[H].type!==f.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${L[H].type} instead`);return++H,Tt}case f.OpenSquareBracket:{++H;const Tt=[];for(;!Je(f.CloseSquareBracket);)Tt.push(Ds()),Je(f.Comma)&&++H;return++H,new ve(Tt)}case f.OpenCurlyBracket:{++H;const Tt=new Map;for(;!Je(f.CloseCurlyBracket);){const Dt=Ds();_e(f.Colon,"Expected colon between key and value in object literal");const Vs=Ds();Tt.set(Dt,Vs),Je(f.Comma)&&++H}return++H,new re(Tt)}default:throw new SyntaxError(`Unexpected token: ${ot.type}`)}}for(;H<L.length;)ie.body.push($e());return ie}function J(L,ie,H=1){ie===void 0&&(ie=L,L=0);const _e=[];for(let $e=L;$e<ie;$e+=H)_e.push($e);return _e}function de(L,ie,H,_e=1){const $e=Math.sign(_e);$e>=0?(ie=(ie??(ie=0))<0?Math.max(L.length+ie,0):Math.min(ie,L.length),H=(H??(H=L.length))<0?Math.max(L.length+H,0):Math.min(H,L.length)):(ie=(ie??(ie=L.length-1))<0?Math.max(L.length+ie,-1):Math.min(ie,L.length-1),H=(H??(H=-1))<-1?Math.max(L.length+H,-1):Math.min(H,L.length-1));const We=[];for(let Je=ie;$e*Je<$e*H;Je+=_e)We.push(L[Je]);return We}function Ce(L){return L.replace(/\b\w/g,ie=>ie.toUpperCase())}var Be=class{constructor(L=void 0){me(this,"type","RuntimeValue");me(this,"value");me(this,"builtins",new Map);this.value=L}__bool__(){return new Ke(!!this.value)}},Ze=class extends Be{constructor(){super(...arguments);me(this,"type","NumericValue")}},te=class extends Be{constructor(){super(...arguments);me(this,"type","StringValue");me(this,"builtins",new Map([["upper",new Ve(()=>new te(this.value.toUpperCase()))],["lower",new Ve(()=>new te(this.value.toLowerCase()))],["strip",new Ve(()=>new te(this.value.trim()))],["title",new Ve(()=>new te(Ce(this.value)))],["length",new Ze(this.value.length)],["rstrip",new Ve(()=>new te(this.value.trimEnd()))],["lstrip",new Ve(()=>new te(this.value.trimStart()))]]))}},Ke=class extends Be{constructor(){super(...arguments);me(this,"type","BooleanValue")}},je=class extends Be{constructor(){super(...arguments);me(this,"type","ObjectValue");me(this,"builtins",new Map([["get",new Ve(([ie,H])=>{if(!(ie instanceof te))throw new Error(`Object key must be a string: got ${ie.type}`);return this.value.get(ie.value)??H??new Ne})],["items",new Ve(()=>new Te(Array.from(this.value.entries()).map(([ie,H])=>new Te([new te(ie),H]))))]]))}__bool__(){return new Ke(this.value.size>0)}},le=class extends je{constructor(){super(...arguments);me(this,"type","KeywordArgumentsValue")}},Te=class extends Be{constructor(){super(...arguments);me(this,"type","ArrayValue");me(this,"builtins",new Map([["length",new Ze(this.value.length)]]))}__bool__(){return new Ke(this.value.length>0)}},Ue=class extends Te{constructor(){super(...arguments);me(this,"type","TupleValue")}},Ve=class extends Be{constructor(){super(...arguments);me(this,"type","FunctionValue")}},Ne=class extends Be{constructor(){super(...arguments);me(this,"type","NullValue")}},Re=class extends Be{constructor(){super(...arguments);me(this,"type","UndefinedValue")}},st=class{constructor(L){me(this,"variables",new Map([["namespace",new Ve(L=>{if(L.length===0)return new je(new Map);if(L.length!==1||!(L[0]instanceof je))throw new Error("`namespace` expects either zero arguments or a single object argument");return L[0]})]]));me(this,"tests",new Map([["boolean",L=>L.type==="BooleanValue"],["callable",L=>L instanceof Ve],["odd",L=>{if(L.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${L.type}`);return L.value%2!==0}],["even",L=>{if(L.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${L.type}`);return L.value%2===0}],["false",L=>L.type==="BooleanValue"&&!L.value],["true",L=>L.type==="BooleanValue"&&L.value],["none",L=>L.type==="NullValue"],["string",L=>L.type==="StringValue"],["number",L=>L.type==="NumericValue"],["integer",L=>L.type==="NumericValue"&&Number.isInteger(L.value)],["iterable",L=>L.type==="ArrayValue"||L.type==="StringValue"],["mapping",L=>L.type==="ObjectValue"],["lower",L=>{const ie=L.value;return L.type==="StringValue"&&ie===ie.toLowerCase()}],["upper",L=>{const ie=L.value;return L.type==="StringValue"&&ie===ie.toUpperCase()}],["none",L=>L.type==="NullValue"],["defined",L=>L.type!=="UndefinedValue"],["undefined",L=>L.type==="UndefinedValue"],["equalto",(L,ie)=>L.value===ie.value],["eq",(L,ie)=>L.value===ie.value]]));this.parent=L}set(L,ie){return this.declareVariable(L,ct(ie))}declareVariable(L,ie){if(this.variables.has(L))throw new SyntaxError(`Variable already declared: ${L}`);return this.variables.set(L,ie),ie}setVariable(L,ie){return this.variables.set(L,ie),ie}resolve(L){if(this.variables.has(L))return this;if(this.parent)return this.parent.resolve(L);throw new Error(`Unknown variable: ${L}`)}lookupVariable(L){try{return this.resolve(L).variables.get(L)??new Re}catch{return new Re}}},dt=class{constructor(L){me(this,"global");this.global=L??new st}run(L){return this.evaluate(L,this.global)}evaluateBinaryExpression(L,ie){const H=this.evaluate(L.left,ie);switch(L.operator.value){case"and":return H.__bool__().value?this.evaluate(L.right,ie):H;case"or":return H.__bool__().value?H:this.evaluate(L.right,ie)}const _e=this.evaluate(L.right,ie);switch(L.operator.value){case"==":return new Ke(H.value==_e.value);case"!=":return new Ke(H.value!=_e.value)}if(H instanceof Re||_e instanceof Re)throw new Error("Cannot perform operation on undefined values");if(H instanceof Ne||_e instanceof Ne)throw new Error("Cannot perform operation on null values");if(H instanceof Ze&&_e instanceof Ze)switch(L.operator.value){case"+":return new Ze(H.value+_e.value);case"-":return new Ze(H.value-_e.value);case"*":return new Ze(H.value*_e.value);case"/":return new Ze(H.value/_e.value);case"%":return new Ze(H.value%_e.value);case"<":return new Ke(H.value<_e.value);case">":return new Ke(H.value>_e.value);case">=":return new Ke(H.value>=_e.value);case"<=":return new Ke(H.value<=_e.value)}else if(H instanceof Te&&_e instanceof Te)switch(L.operator.value){case"+":return new Te(H.value.concat(_e.value))}else if(_e instanceof Te){const $e=_e.value.find(We=>We.value===H.value)!==void 0;switch(L.operator.value){case"in":return new Ke($e);case"not in":return new Ke(!$e)}}if(H instanceof te||_e instanceof te)switch(L.operator.value){case"+":return new te(H.value.toString()+_e.value.toString())}if(H instanceof te&&_e instanceof te)switch(L.operator.value){case"in":return new Ke(_e.value.includes(H.value));case"not in":return new Ke(!_e.value.includes(H.value))}if(H instanceof te&&_e instanceof je)switch(L.operator.value){case"in":return new Ke(_e.value.has(H.value));case"not in":return new Ke(!_e.value.has(H.value))}throw new SyntaxError(`Unknown operator "${L.operator.value}" between ${H.type} and ${_e.type}`)}evaluateArguments(L,ie){const H=[],_e=new Map;for(const $e of L)if($e.type==="KeywordArgumentExpression"){const We=$e;_e.set(We.key.value,this.evaluate(We.value,ie))}else{if(_e.size>0)throw new Error("Positional arguments must come before keyword arguments");H.push(this.evaluate($e,ie))}return[H,_e]}evaluateFilterExpression(L,ie){const H=this.evaluate(L.operand,ie);if(L.filter.type==="Identifier"){const _e=L.filter;if(_e.value==="tojson")return new te(lt(H));if(H instanceof Te)switch(_e.value){case"list":return H;case"first":return H.value[0];case"last":return H.value[H.value.length-1];case"length":return new Ze(H.value.length);case"reverse":return new Te(H.value.reverse());case"sort":return new Te(H.value.sort(($e,We)=>{if($e.type!==We.type)throw new Error(`Cannot compare different types: ${$e.type} and ${We.type}`);switch($e.type){case"NumericValue":return $e.value-We.value;case"StringValue":return $e.value.localeCompare(We.value);default:throw new Error(`Cannot compare type: ${$e.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${_e.value}`)}else if(H instanceof te)switch(_e.value){case"length":return new Ze(H.value.length);case"upper":return new te(H.value.toUpperCase());case"lower":return new te(H.value.toLowerCase());case"title":return new te(Ce(H.value));case"capitalize":return new te(H.value.charAt(0).toUpperCase()+H.value.slice(1));case"trim":return new te(H.value.trim());case"indent":return new te(H.value.split(`
`).map(($e,We)=>We===0||$e.length===0?$e:"    "+$e).join(`
`));case"string":return H;default:throw new Error(`Unknown StringValue filter: ${_e.value}`)}else if(H instanceof Ze)switch(_e.value){case"abs":return new Ze(Math.abs(H.value));default:throw new Error(`Unknown NumericValue filter: ${_e.value}`)}else if(H instanceof je)switch(_e.value){case"items":return new Te(Array.from(H.value.entries()).map(([$e,We])=>new Te([new te($e),We])));case"length":return new Ze(H.value.size);default:throw new Error(`Unknown ObjectValue filter: ${_e.value}`)}throw new Error(`Cannot apply filter "${_e.value}" to type: ${H.type}`)}else if(L.filter.type==="CallExpression"){const _e=L.filter;if(_e.callee.type!=="Identifier")throw new Error(`Unknown filter: ${_e.callee.type}`);const $e=_e.callee.value;if($e==="tojson"){const[,We]=this.evaluateArguments(_e.args,ie),Je=We.get("indent")??new Ne;if(!(Je instanceof Ze||Je instanceof Ne))throw new Error("If set, indent must be a number");return new te(lt(H,Je.value))}if(H instanceof Te){switch($e){case"selectattr":case"rejectattr":{const We=$e==="selectattr";if(H.value.some(It=>!(It instanceof je)))throw new Error(`\`${$e}\` can only be applied to array of objects`);if(_e.args.some(It=>It.type!=="StringLiteral"))throw new Error(`arguments of \`${$e}\` must be strings`);const[Je,ut,mt]=_e.args.map(It=>this.evaluate(It,ie));let vt;if(ut){const It=ie.tests.get(ut.value);if(!It)throw new Error(`Unknown test: ${ut.value}`);vt=It}else vt=(...It)=>It[0].__bool__().value;const kt=H.value.filter(It=>{const os=It.value.get(Je.value),ys=os?vt(os,mt):!1;return We?ys:!ys});return new Te(kt)}case"map":{const[,We]=this.evaluateArguments(_e.args,ie);if(We.has("attribute")){const Je=We.get("attribute");if(!(Je instanceof te))throw new Error("attribute must be a string");const ut=We.get("default"),mt=H.value.map(vt=>{if(!(vt instanceof je))throw new Error("items in map must be an object");return vt.value.get(Je.value)??ut??new Re});return new Te(mt)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${$e}`)}else if(H instanceof te){switch($e){case"indent":{const[We,Je]=this.evaluateArguments(_e.args,ie),ut=We.at(0)??Je.get("width")??new Ze(4);if(!(ut instanceof Ze))throw new Error("width must be a number");const mt=We.at(1)??Je.get("first")??new Ke(!1),vt=We.at(2)??Je.get("blank")??new Ke(!1),kt=H.value.split(`
`),It=" ".repeat(ut.value),os=kt.map((ys,Cs)=>!mt.value&&Cs===0||!vt.value&&ys.length===0?ys:It+ys);return new te(os.join(`
`))}}throw new Error(`Unknown StringValue filter: ${$e}`)}else throw new Error(`Cannot apply filter "${$e}" to type: ${H.type}`)}throw new Error(`Unknown filter: ${L.filter.type}`)}evaluateTestExpression(L,ie){const H=this.evaluate(L.operand,ie),_e=ie.tests.get(L.test.value);if(!_e)throw new Error(`Unknown test: ${L.test.value}`);const $e=_e(H);return new Ke(L.negate?!$e:$e)}evaluateUnaryExpression(L,ie){const H=this.evaluate(L.argument,ie);switch(L.operator.value){case"not":return new Ke(!H.value);default:throw new SyntaxError(`Unknown operator: ${L.operator.value}`)}}evalProgram(L,ie){return this.evaluateBlock(L.body,ie)}evaluateBlock(L,ie){let H="";for(const _e of L){const $e=this.evaluate(_e,ie);$e.type!=="NullValue"&&$e.type!=="UndefinedValue"&&(H+=$e.value)}return new te(H)}evaluateIdentifier(L,ie){return ie.lookupVariable(L.value)}evaluateCallExpression(L,ie){const[H,_e]=this.evaluateArguments(L.args,ie);_e.size>0&&H.push(new le(_e));const $e=this.evaluate(L.callee,ie);if($e.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${$e.type}`);return $e.value(H,ie)}evaluateSliceExpression(L,ie,H){if(!(L instanceof Te||L instanceof te))throw new Error("Slice object must be an array or string");const _e=this.evaluate(ie.start,H),$e=this.evaluate(ie.stop,H),We=this.evaluate(ie.step,H);if(!(_e instanceof Ze||_e instanceof Re))throw new Error("Slice start must be numeric or undefined");if(!($e instanceof Ze||$e instanceof Re))throw new Error("Slice stop must be numeric or undefined");if(!(We instanceof Ze||We instanceof Re))throw new Error("Slice step must be numeric or undefined");return L instanceof Te?new Te(de(L.value,_e.value,$e.value,We.value)):new te(de(Array.from(L.value),_e.value,$e.value,We.value).join(""))}evaluateMemberExpression(L,ie){const H=this.evaluate(L.object,ie);let _e;if(L.computed){if(L.property.type==="SliceExpression")return this.evaluateSliceExpression(H,L.property,ie);_e=this.evaluate(L.property,ie)}else _e=new te(L.property.value);let $e;if(H instanceof je){if(!(_e instanceof te))throw new Error(`Cannot access property with non-string: got ${_e.type}`);$e=H.value.get(_e.value)??H.builtins.get(_e.value)}else if(H instanceof Te||H instanceof te)if(_e instanceof Ze)$e=H.value.at(_e.value),H instanceof te&&($e=new te(H.value.at(_e.value)));else if(_e instanceof te)$e=H.builtins.get(_e.value);else throw new Error(`Cannot access property with non-string/non-number: got ${_e.type}`);else{if(!(_e instanceof te))throw new Error(`Cannot access property with non-string: got ${_e.type}`);$e=H.builtins.get(_e.value)}return $e instanceof Be?$e:new Re}evaluateSet(L,ie){const H=this.evaluate(L.value,ie);if(L.assignee.type==="Identifier"){const _e=L.assignee.value;ie.setVariable(_e,H)}else if(L.assignee.type==="MemberExpression"){const _e=L.assignee,$e=this.evaluate(_e.object,ie);if(!($e instanceof je))throw new Error("Cannot assign to member of non-object");if(_e.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");$e.value.set(_e.property.value,H)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(L.assignee)}`);return new Ne}evaluateIf(L,ie){const H=this.evaluate(L.test,ie);return this.evaluateBlock(H.__bool__().value?L.body:L.alternate,ie)}evaluateFor(L,ie){const H=new st(ie);let _e,$e;if(L.iterable.type==="SelectExpression"){const vt=L.iterable;$e=this.evaluate(vt.iterable,H),_e=vt.test}else $e=this.evaluate(L.iterable,H);if(!($e instanceof Te))throw new Error(`Expected iterable type in for loop: got ${$e.type}`);const We=[],Je=[];for(let vt=0;vt<$e.value.length;++vt){const kt=new st(H),It=$e.value[vt];let os;if(L.loopvar.type==="Identifier")os=ys=>ys.setVariable(L.loopvar.value,It);else if(L.loopvar.type==="TupleLiteral"){const ys=L.loopvar;if(It.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${It.type}`);const Cs=It;if(ys.value.length!==Cs.value.length)throw new Error(`Too ${ys.value.length>Cs.value.length?"few":"many"} items to unpack`);os=Ds=>{for(let sr=0;sr<ys.value.length;++sr){if(ys.value[sr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${ys.value[sr].type}`);Ds.setVariable(ys.value[sr].value,Cs.value[sr])}}}else throw new Error(`Invalid loop variable(s): ${L.loopvar.type}`);_e&&(os(kt),!this.evaluate(_e,kt).__bool__().value)||(We.push(It),Je.push(os))}let ut="",mt=!0;for(let vt=0;vt<We.length;++vt){const kt=new Map([["index",new Ze(vt+1)],["index0",new Ze(vt)],["revindex",new Ze(We.length-vt)],["revindex0",new Ze(We.length-vt-1)],["first",new Ke(vt===0)],["last",new Ke(vt===We.length-1)],["length",new Ze(We.length)],["previtem",vt>0?We[vt-1]:new Re],["nextitem",vt<We.length-1?We[vt+1]:new Re]]);H.setVariable("loop",new je(kt)),Je[vt](H);const It=this.evaluateBlock(L.body,H);ut+=It.value,mt=!1}if(mt){const vt=this.evaluateBlock(L.defaultBlock,H);ut+=vt.value}return new te(ut)}evaluateMacro(L,ie){return ie.setVariable(L.name.value,new Ve((H,_e)=>{var Je;const $e=new st(_e);H=H.slice();let We;((Je=H.at(-1))==null?void 0:Je.type)==="KeywordArgumentsValue"&&(We=H.pop());for(let ut=0;ut<L.args.length;++ut){const mt=L.args[ut],vt=H[ut];if(mt.type==="Identifier"){const kt=mt;if(!vt)throw new Error(`Missing positional argument: ${kt.value}`);$e.setVariable(kt.value,vt)}else if(mt.type==="KeywordArgumentExpression"){const kt=mt,It=vt??(We==null?void 0:We.value.get(kt.key.value))??this.evaluate(kt.value,$e);$e.setVariable(kt.key.value,It)}else throw new Error(`Unknown argument type: ${mt.type}`)}return this.evaluateBlock(L.body,$e)})),new Ne}evaluate(L,ie){if(L===void 0)return new Re;switch(L.type){case"Program":return this.evalProgram(L,ie);case"Set":return this.evaluateSet(L,ie);case"If":return this.evaluateIf(L,ie);case"For":return this.evaluateFor(L,ie);case"Macro":return this.evaluateMacro(L,ie);case"NumericLiteral":return new Ze(Number(L.value));case"StringLiteral":return new te(L.value);case"BooleanLiteral":return new Ke(L.value);case"NullLiteral":return new Ne(L.value);case"ArrayLiteral":return new Te(L.value.map(H=>this.evaluate(H,ie)));case"TupleLiteral":return new Ue(L.value.map(H=>this.evaluate(H,ie)));case"ObjectLiteral":{const H=new Map;for(const[_e,$e]of L.value){const We=this.evaluate(_e,ie);if(!(We instanceof te))throw new Error(`Object keys must be strings: got ${We.type}`);H.set(We.value,this.evaluate($e,ie))}return new je(H)}case"Identifier":return this.evaluateIdentifier(L,ie);case"CallExpression":return this.evaluateCallExpression(L,ie);case"MemberExpression":return this.evaluateMemberExpression(L,ie);case"UnaryExpression":return this.evaluateUnaryExpression(L,ie);case"BinaryExpression":return this.evaluateBinaryExpression(L,ie);case"FilterExpression":return this.evaluateFilterExpression(L,ie);case"TestExpression":return this.evaluateTestExpression(L,ie);default:throw new SyntaxError(`Unknown node type: ${L.type}`)}}};function ct(L){switch(typeof L){case"number":return new Ze(L);case"string":return new te(L);case"boolean":return new Ke(L);case"undefined":return new Re;case"object":return L===null?new Ne:Array.isArray(L)?new Te(L.map(ct)):new je(new Map(Object.entries(L).map(([ie,H])=>[ie,ct(H)])));case"function":return new Ve((ie,H)=>{const _e=L(...ie.map($e=>$e.value))??null;return ct(_e)});default:throw new Error(`Cannot convert to runtime value: ${L}`)}}function lt(L,ie,H){const _e=H??0;switch(L.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(L.value);case"ArrayValue":case"ObjectValue":{const $e=ie?" ".repeat(ie):"",We=`
`+$e.repeat(_e),Je=We+$e;if(L.type==="ArrayValue"){const ut=L.value.map(mt=>lt(mt,ie,_e+1));return ie?`[${Je}${ut.join(`,${Je}`)}${We}]`:`[${ut.join(", ")}]`}else{const ut=Array.from(L.value.entries()).map(([mt,vt])=>{const kt=`"${mt}": ${lt(vt,ie,_e+1)}`;return ie?`${Je}${kt}`:kt});return ie?`{${ut.join(",")}${We}}`:`{${ut.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${L.type}`)}}var ht=class{constructor(L){me(this,"parsed");const ie=y(L,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ye(ie)}render(L){const ie=new st;ie.set("false",!1),ie.set("true",!0),ie.set("raise_exception",$e=>{throw new Error($e)}),ie.set("range",J);for(const[$e,We]of Object.entries(L))ie.set($e,We);return new dt(ie).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(Ie,$,r)=>{r.r($),r.d($,{registerBackend:()=>j,resolveBackendAndExecutionProviders:()=>R});const f=new Map,A=[],j=(g,v,M)=>{if(v&&typeof v.init=="function"&&typeof v.createInferenceSessionHandler=="function"){const y=f.get(g);if(y===void 0)f.set(g,{backend:v,priority:M});else{if(y.priority>M)return;if(y.priority===M&&y.backend!==v)throw new Error(`cannot register backend "${g}" using priority ${M}`)}if(M>=0){const b=A.indexOf(g);b!==-1&&A.splice(b,1);for(let O=0;O<A.length;O++)if(f.get(A[O]).priority<=M){A.splice(O,0,g);return}A.push(g)}return}throw new TypeError("not a valid backend")},X=async g=>{const v=f.get(g);if(!v)return"backend not found.";if(v.initialized)return v.backend;if(v.aborted)return v.error;{const M=!!v.initPromise;try{return M||(v.initPromise=v.backend.init(g)),await v.initPromise,v.initialized=!0,v.backend}catch(y){return M||(v.error=`${y}`,v.aborted=!0),v.error}finally{delete v.initPromise}}},R=async g=>{const v=g.executionProviders||[],M=v.map(ne=>typeof ne=="string"?ne:ne.name),y=M.length===0?A:M;let b;const O=[],K=new Set;for(const ne of y){const W=await X(ne);typeof W=="string"?O.push({name:ne,err:W}):(b||(b=W),b===W&&K.add(ne))}if(!b)throw new Error(`no available backend found. ERR: ${O.map(ne=>`[${ne.name}] ${ne.err}`).join(", ")}`);for(const{name:ne,err:W}of O)M.includes(ne)&&console.warn(`removing requested execution provider "${ne}" from session options because it is not available: ${W}`);const se=v.filter(ne=>K.has(typeof ne=="string"?ne:ne.name));return[b,new Proxy(g,{get:(ne,W)=>W==="executionProviders"?se:Reflect.get(ne,W)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(Ie,$,r)=>{r.r($),r.d($,{registerBackend:()=>f.registerBackend});var f=r("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(Ie,$,r)=>{r.r($),r.d($,{env:()=>j});var f=r("./node_modules/onnxruntime-common/dist/esm/version.js");let A="warning";const j={wasm:{},webgl:{},webgpu:{},versions:{common:f.version},set logLevel(X){if(X!==void 0){if(typeof X!="string"||["verbose","info","warning","error","fatal"].indexOf(X)===-1)throw new Error(`Unsupported logging level: ${X}`);A=X}},get logLevel(){return A}};Object.defineProperty(j,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(Ie,$,r)=>{r.r($),r.d($,{env:()=>A});var f=r("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const A=f.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(Ie,$,r)=>{r.r($),r.d($,{InferenceSession:()=>j.InferenceSession,TRACE:()=>R.TRACE,TRACE_FUNC_BEGIN:()=>R.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>R.TRACE_FUNC_END,Tensor:()=>X.Tensor,TrainingSession:()=>g.TrainingSession,env:()=>A.env,registerBackend:()=>f.registerBackend});var f=r("./node_modules/onnxruntime-common/dist/esm/backend.js"),A=r("./node_modules/onnxruntime-common/dist/esm/env.js"),j=r("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),X=r("./node_modules/onnxruntime-common/dist/esm/tensor.js");r("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),r("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var R=r("./node_modules/onnxruntime-common/dist/esm/trace.js");r("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),r("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var g=r("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(Ie,$,r)=>{r.r($),r.d($,{InferenceSession:()=>X});var f=r("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),A=r("./node_modules/onnxruntime-common/dist/esm/tensor.js"),j=r("./node_modules/onnxruntime-common/dist/esm/trace.js");class X{constructor(g){this.handler=g}async run(g,v,M){(0,j.TRACE_FUNC_BEGIN)();const y={};let b={};if(typeof g!="object"||g===null||g instanceof A.Tensor||Array.isArray(g))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let O=!0;if(typeof v=="object"){if(v===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(v instanceof A.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(v)){if(v.length===0)throw new TypeError("'fetches' cannot be an empty array.");O=!1;for(const ne of v){if(typeof ne!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(ne)===-1)throw new RangeError(`'fetches' contains invalid output name: ${ne}.`);y[ne]=null}if(typeof M=="object"&&M!==null)b=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else{let ne=!1;const W=Object.getOwnPropertyNames(v);for(const U of this.outputNames)if(W.indexOf(U)!==-1){const q=v[U];(q===null||q instanceof A.Tensor)&&(ne=!0,O=!1,y[U]=q)}if(ne){if(typeof M=="object"&&M!==null)b=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else b=v}}else if(typeof v<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const ne of this.inputNames)if(typeof g[ne]>"u")throw new Error(`input '${ne}' is missing in 'feeds'.`);if(O)for(const ne of this.outputNames)y[ne]=null;const K=await this.handler.run(g,y,b),se={};for(const ne in K)if(Object.hasOwnProperty.call(K,ne)){const W=K[ne];W instanceof A.Tensor?se[ne]=W:se[ne]=new A.Tensor(W.type,W.data,W.dims)}return(0,j.TRACE_FUNC_END)(),se}async release(){return this.handler.dispose()}static async create(g,v,M,y){(0,j.TRACE_FUNC_BEGIN)();let b,O={};if(typeof g=="string"){if(b=g,typeof v=="object"&&v!==null)O=v;else if(typeof v<"u")throw new TypeError("'options' must be an object.")}else if(g instanceof Uint8Array){if(b=g,typeof v=="object"&&v!==null)O=v;else if(typeof v<"u")throw new TypeError("'options' must be an object.")}else if(g instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&g instanceof SharedArrayBuffer){const W=g;let U=0,q=g.byteLength;if(typeof v=="object"&&v!==null)O=v;else if(typeof v=="number"){if(U=v,!Number.isSafeInteger(U))throw new RangeError("'byteOffset' must be an integer.");if(U<0||U>=W.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${W.byteLength}).`);if(q=g.byteLength-U,typeof M=="number"){if(q=M,!Number.isSafeInteger(q))throw new RangeError("'byteLength' must be an integer.");if(q<=0||U+q>W.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${W.byteLength-U}].`);if(typeof y=="object"&&y!==null)O=y;else if(typeof y<"u")throw new TypeError("'options' must be an object.")}else if(typeof M<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof v<"u")throw new TypeError("'options' must be an object.");b=new Uint8Array(W,U,q)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[K,se]=await(0,f.resolveBackendAndExecutionProviders)(O),ne=await K.createInferenceSessionHandler(b,se);return(0,j.TRACE_FUNC_END)(),new X(ne)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(Ie,$,r)=>{r.r($),r.d($,{InferenceSession:()=>A});var f=r("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const A=f.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(Ie,$,r)=>{r.r($)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(Ie,$,r)=>{r.r($)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(Ie,$,r)=>{r.r($),r.d($,{tensorToDataURL:()=>f,tensorToImageData:()=>A});const f=(j,X)=>{const R=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);R.width=j.dims[3],R.height=j.dims[2];const g=R.getContext("2d");if(g!=null){let v,M;(X==null?void 0:X.tensorLayout)!==void 0&&X.tensorLayout==="NHWC"?(v=j.dims[2],M=j.dims[3]):(v=j.dims[3],M=j.dims[2]);const y=(X==null?void 0:X.format)!==void 0?X.format:"RGB",b=X==null?void 0:X.norm;let O,K;b===void 0||b.mean===void 0?O=[255,255,255,255]:typeof b.mean=="number"?O=[b.mean,b.mean,b.mean,b.mean]:(O=[b.mean[0],b.mean[1],b.mean[2],0],b.mean[3]!==void 0&&(O[3]=b.mean[3])),b===void 0||b.bias===void 0?K=[0,0,0,0]:typeof b.bias=="number"?K=[b.bias,b.bias,b.bias,b.bias]:(K=[b.bias[0],b.bias[1],b.bias[2],0],b.bias[3]!==void 0&&(K[3]=b.bias[3]));const se=M*v;let ne=0,W=se,U=se*2,q=-1;y==="RGBA"?(ne=0,W=se,U=se*2,q=se*3):y==="RGB"?(ne=0,W=se,U=se*2):y==="RBG"&&(ne=0,U=se,W=se*2);for(let I=0;I<M;I++)for(let S=0;S<v;S++){const w=(j.data[ne++]-K[0])*O[0],x=(j.data[W++]-K[1])*O[1],F=(j.data[U++]-K[2])*O[2],ae=q===-1?255:(j.data[q++]-K[3])*O[3];g.fillStyle="rgba("+w+","+x+","+F+","+ae+")",g.fillRect(S,I,1,1)}if("toDataURL"in R)return R.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},A=(j,X)=>{const R=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let g;if(R!=null){let v,M,y;(X==null?void 0:X.tensorLayout)!==void 0&&X.tensorLayout==="NHWC"?(v=j.dims[2],M=j.dims[1],y=j.dims[3]):(v=j.dims[3],M=j.dims[2],y=j.dims[1]);const b=X!==void 0&&X.format!==void 0?X.format:"RGB",O=X==null?void 0:X.norm;let K,se;O===void 0||O.mean===void 0?K=[255,255,255,255]:typeof O.mean=="number"?K=[O.mean,O.mean,O.mean,O.mean]:(K=[O.mean[0],O.mean[1],O.mean[2],255],O.mean[3]!==void 0&&(K[3]=O.mean[3])),O===void 0||O.bias===void 0?se=[0,0,0,0]:typeof O.bias=="number"?se=[O.bias,O.bias,O.bias,O.bias]:(se=[O.bias[0],O.bias[1],O.bias[2],0],O.bias[3]!==void 0&&(se[3]=O.bias[3]));const ne=M*v;if(X!==void 0&&(X.format!==void 0&&y===4&&X.format!=="RGBA"||y===3&&X.format!=="RGB"&&X.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const W=4;let U=0,q=1,I=2,S=3,w=0,x=ne,F=ne*2,ae=-1;b==="RGBA"?(w=0,x=ne,F=ne*2,ae=ne*3):b==="RGB"?(w=0,x=ne,F=ne*2):b==="RBG"&&(w=0,F=ne,x=ne*2),g=R.createImageData(v,M);for(let oe=0;oe<M*v;U+=W,q+=W,I+=W,S+=W,oe++)g.data[U]=(j.data[w++]-se[0])*K[0],g.data[q]=(j.data[x++]-se[1])*K[1],g.data[I]=(j.data[F++]-se[2])*K[2],g.data[S]=ae===-1?255:(j.data[ae++]-se[3])*K[3]}else throw new Error("Can not access image data");return g}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(Ie,$,r)=>{r.r($)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(Ie,$,r)=>{r.r($),r.d($,{bufferToTensor:()=>A,tensorFromGpuBuffer:()=>R,tensorFromImage:()=>j,tensorFromMLTensor:()=>g,tensorFromPinnedBuffer:()=>v,tensorFromTexture:()=>X});var f=r("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const A=(M,y)=>{if(M===void 0)throw new Error("Image buffer must be defined");if(y.height===void 0||y.width===void 0)throw new Error("Image height and width must be defined");if(y.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:b,width:O}=y,K=y.norm??{mean:255,bias:0};let se,ne;typeof K.mean=="number"?se=[K.mean,K.mean,K.mean,K.mean]:se=[K.mean[0],K.mean[1],K.mean[2],K.mean[3]??255],typeof K.bias=="number"?ne=[K.bias,K.bias,K.bias,K.bias]:ne=[K.bias[0],K.bias[1],K.bias[2],K.bias[3]??0];const W=y.format!==void 0?y.format:"RGBA",U=y.tensorFormat!==void 0&&y.tensorFormat!==void 0?y.tensorFormat:"RGB",q=b*O,I=U==="RGBA"?new Float32Array(q*4):new Float32Array(q*3);let S=4,w=0,x=1,F=2,ae=3,oe=0,ve=q,we=q*2,re=-1;W==="RGB"&&(S=3,w=0,x=1,F=2,ae=-1),U==="RGBA"?re=q*3:U==="RBG"?(oe=0,we=q,ve=q*2):U==="BGR"&&(we=0,ve=q,oe=q*2);for(let ce=0;ce<q;ce++,w+=S,F+=S,x+=S,ae+=S)I[oe++]=(M[w]+ne[0])/se[0],I[ve++]=(M[x]+ne[1])/se[1],I[we++]=(M[F]+ne[2])/se[2],re!==-1&&ae!==-1&&(I[re++]=(M[ae]+ne[3])/se[3]);return U==="RGBA"?new f.Tensor("float32",I,[1,4,b,O]):new f.Tensor("float32",I,[1,3,b,O])},j=async(M,y)=>{const b=typeof HTMLImageElement<"u"&&M instanceof HTMLImageElement,O=typeof ImageData<"u"&&M instanceof ImageData,K=typeof ImageBitmap<"u"&&M instanceof ImageBitmap,se=typeof M=="string";let ne,W=y??{};const U=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},q=I=>typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||I instanceof OffscreenCanvas?I.getContext("2d"):null;if(b){const I=U();I.width=M.width,I.height=M.height;const S=q(I);if(S!=null){let w=M.height,x=M.width;if(y!==void 0&&y.resizedHeight!==void 0&&y.resizedWidth!==void 0&&(w=y.resizedHeight,x=y.resizedWidth),y!==void 0){if(W=y,y.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");W.tensorFormat="RGBA",W.height=w,W.width=x}else W.tensorFormat="RGBA",W.height=w,W.width=x;S.drawImage(M,0,0),ne=S.getImageData(0,0,x,w).data}else throw new Error("Can not access image data")}else if(O){let I,S;if(y!==void 0&&y.resizedWidth!==void 0&&y.resizedHeight!==void 0?(I=y.resizedHeight,S=y.resizedWidth):(I=M.height,S=M.width),y!==void 0&&(W=y),W.format="RGBA",W.height=I,W.width=S,y!==void 0){const w=U();w.width=S,w.height=I;const x=q(w);if(x!=null)x.putImageData(M,0,0),ne=x.getImageData(0,0,S,I).data;else throw new Error("Can not access image data")}else ne=M.data}else if(K){if(y===void 0)throw new Error("Please provide image config with format for Imagebitmap");const I=U();I.width=M.width,I.height=M.height;const S=q(I);if(S!=null){const w=M.height,x=M.width;return S.drawImage(M,0,0,x,w),ne=S.getImageData(0,0,x,w).data,W.height=w,W.width=x,A(ne,W)}else throw new Error("Can not access image data")}else{if(se)return new Promise((I,S)=>{const w=U(),x=q(w);if(!M||!x)return S();const F=new Image;F.crossOrigin="Anonymous",F.src=M,F.onload=()=>{w.width=F.width,w.height=F.height,x.drawImage(F,0,0,w.width,w.height);const ae=x.getImageData(0,0,w.width,w.height);W.height=w.height,W.width=w.width,I(A(ae.data,W))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(ne!==void 0)return A(ne,W);throw new Error("Input data provided is not supported - aborted tensor creation")},X=(M,y)=>{const{width:b,height:O,download:K,dispose:se}=y,ne=[1,O,b,4];return new f.Tensor({location:"texture",type:"float32",texture:M,dims:ne,download:K,dispose:se})},R=(M,y)=>{const{dataType:b,dims:O,download:K,dispose:se}=y;return new f.Tensor({location:"gpu-buffer",type:b??"float32",gpuBuffer:M,dims:O,download:K,dispose:se})},g=(M,y)=>{const{dataType:b,dims:O,download:K,dispose:se}=y;return new f.Tensor({location:"ml-tensor",type:b??"float32",mlTensor:M,dims:O,download:K,dispose:se})},v=(M,y,b)=>new f.Tensor({location:"cpu-pinned",type:M,data:y,dims:b??[y.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(Ie,$,r)=>{r.r($)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(Ie,$,r)=>{r.r($),r.d($,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>A,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>f,checkTypedArray:()=>X});const f=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),A=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let j=!1;const X=()=>{if(!j){j=!0;const R=typeof BigInt64Array<"u"&&BigInt64Array.from,g=typeof BigUint64Array<"u"&&BigUint64Array.from,v=typeof Float16Array<"u"&&Float16Array.from;R&&(f.set("int64",BigInt64Array),A.set(BigInt64Array,"int64")),g&&(f.set("uint64",BigUint64Array),A.set(BigUint64Array,"uint64")),v?(f.set("float16",Float16Array),A.set(Float16Array,"float16")):f.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(Ie,$,r)=>{r.r($),r.d($,{Tensor:()=>R});var f=r("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),A=r("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),j=r("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),X=r("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class R{constructor(v,M,y){(0,j.checkTypedArray)();let b,O;if(typeof v=="object"&&"location"in v)switch(this.dataLocation=v.location,b=v.type,O=v.dims,v.location){case"cpu-pinned":{const se=j.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(b);if(!se)throw new TypeError(`unsupported type "${b}" to create tensor from pinned buffer`);if(!(v.data instanceof se))throw new TypeError(`buffer should be of type ${se.name}`);this.cpuData=v.data;break}case"texture":{if(b!=="float32")throw new TypeError(`unsupported type "${b}" to create tensor from texture`);this.gpuTextureData=v.texture,this.downloader=v.download,this.disposer=v.dispose;break}case"gpu-buffer":{if(b!=="float32"&&b!=="float16"&&b!=="int32"&&b!=="int64"&&b!=="uint32"&&b!=="uint8"&&b!=="bool"&&b!=="uint4"&&b!=="int4")throw new TypeError(`unsupported type "${b}" to create tensor from gpu buffer`);this.gpuBufferData=v.gpuBuffer,this.downloader=v.download,this.disposer=v.dispose;break}case"ml-tensor":{if(b!=="float32"&&b!=="float16"&&b!=="int32"&&b!=="int64"&&b!=="uint32"&&b!=="uint64"&&b!=="int8"&&b!=="uint8"&&b!=="bool")throw new TypeError(`unsupported type "${b}" to create tensor from MLTensor`);this.mlTensorData=v.mlTensor,this.downloader=v.download,this.disposer=v.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let se,ne;if(typeof v=="string")if(b=v,ne=y,v==="string"){if(!Array.isArray(M))throw new TypeError("A string tensor's data must be a string array.");se=M}else{const W=j.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(v);if(W===void 0)throw new TypeError(`Unsupported tensor type: ${v}.`);if(Array.isArray(M)){if(v==="float16"&&W===Uint16Array||v==="uint4"||v==="int4")throw new TypeError(`Creating a ${v} tensor from number array is not supported. Please use ${W.name} as data.`);v==="uint64"||v==="int64"?se=W.from(M,BigInt):se=W.from(M)}else if(M instanceof W)se=M;else if(M instanceof Uint8ClampedArray)if(v==="uint8")se=Uint8Array.from(M);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${b} tensor's data must be type of ${W}`)}else if(ne=M,Array.isArray(v)){if(v.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const W=typeof v[0];if(W==="string")b="string",se=v;else if(W==="boolean")b="bool",se=Uint8Array.from(v);else throw new TypeError(`Invalid element type of data array: ${W}.`)}else if(v instanceof Uint8ClampedArray)b="uint8",se=Uint8Array.from(v);else{const W=j.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(v.constructor);if(W===void 0)throw new TypeError(`Unsupported type for tensor data: ${v.constructor}.`);b=W,se=v}if(ne===void 0)ne=[se.length];else if(!Array.isArray(ne))throw new TypeError("A tensor's dims must be a number array");O=ne,this.cpuData=se,this.dataLocation="cpu"}const K=(0,X.calculateSize)(O);if(this.cpuData&&K!==this.cpuData.length&&!((b==="uint4"||b==="int4")&&Math.ceil(K/2)===this.cpuData.length))throw new Error(`Tensor's size(${K}) does not match data length(${this.cpuData.length}).`);this.type=b,this.dims=O,this.size=K}static async fromImage(v,M){return(0,A.tensorFromImage)(v,M)}static fromTexture(v,M){return(0,A.tensorFromTexture)(v,M)}static fromGpuBuffer(v,M){return(0,A.tensorFromGpuBuffer)(v,M)}static fromMLTensor(v,M){return(0,A.tensorFromMLTensor)(v,M)}static fromPinnedBuffer(v,M,y){return(0,A.tensorFromPinnedBuffer)(v,M,y)}toDataURL(v){return(0,f.tensorToDataURL)(this,v)}toImageData(v){return(0,f.tensorToImageData)(this,v)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(v){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const M=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=M,v&&this.disposer&&(this.disposer(),this.disposer=void 0),M}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(v){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,X.tensorReshape)(this,v)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(Ie,$,r)=>{r.r($),r.d($,{calculateSize:()=>A,tensorReshape:()=>j});var f=r("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const A=X=>{let R=1;for(let g=0;g<X.length;g++){const v=X[g];if(typeof v!="number"||!Number.isSafeInteger(v))throw new TypeError(`dims[${g}] must be an integer, got: ${v}`);if(v<0)throw new RangeError(`dims[${g}] must be a non-negative integer, got: ${v}`);R*=v}return R},j=(X,R)=>{switch(X.location){case"cpu":return new f.Tensor(X.type,X.data,R);case"cpu-pinned":return new f.Tensor({location:"cpu-pinned",data:X.data,type:X.type,dims:R});case"texture":return new f.Tensor({location:"texture",texture:X.texture,type:X.type,dims:R});case"gpu-buffer":return new f.Tensor({location:"gpu-buffer",gpuBuffer:X.gpuBuffer,type:X.type,dims:R});case"ml-tensor":return new f.Tensor({location:"ml-tensor",mlTensor:X.mlTensor,type:X.type,dims:R});default:throw new Error(`tensorReshape: tensor location ${X.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(Ie,$,r)=>{r.r($),r.d($,{Tensor:()=>A});var f=r("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const A=f.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(Ie,$,r)=>{r.r($),r.d($,{TRACE:()=>A,TRACE_FUNC_BEGIN:()=>X,TRACE_FUNC_END:()=>R});var f=r("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const A=(g,v)=>{(typeof f.env.trace>"u"?!f.env.wasm.trace:!f.env.trace)||console.timeStamp(`${g}::ORT::${v}`)},j=(g,v)=>{var b;const M=((b=new Error().stack)==null?void 0:b.split(/\r\n|\r|\n/g))||[];let y=!1;for(let O=0;O<M.length;O++){if(y&&!M[O].includes("TRACE_FUNC")){let K=`FUNC_${g}::${M[O].trim().split(" ")[1]}`;v&&(K+=`::${v}`),A("CPU",K);return}M[O].includes("TRACE_FUNC")&&(y=!0)}},X=g=>{(typeof f.env.trace>"u"?!f.env.wasm.trace:!f.env.trace)||j("BEGIN",g)},R=g=>{(typeof f.env.trace>"u"?!f.env.wasm.trace:!f.env.trace)||j("END",g)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(Ie,$,r)=>{r.r($),r.d($,{TrainingSession:()=>X});var f=r("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),A=r("./node_modules/onnxruntime-common/dist/esm/tensor.js");const j="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class X{constructor(g,v,M){this.handler=g,this.hasOptimizerModel=v,this.hasEvalModel=M}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(g,v){const M=g.evalModel||"",y=g.optimizerModel||"",b=v||{},[O,K]=await(0,f.resolveBackendAndExecutionProviders)(b);if(O.createTrainingSessionHandler){const se=await O.createTrainingSessionHandler(g.checkpointState,g.trainModel,M,y,K);return new X(se,!!g.optimizerModel,!!g.evalModel)}else throw new Error(j)}typeNarrowingForRunStep(g,v,M,y,b){const O={};let K={};if(typeof M!="object"||M===null||M instanceof A.Tensor||Array.isArray(M))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let se=!0;if(typeof y=="object"){if(y===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(y instanceof A.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(y)){if(y.length===0)throw new TypeError("'fetches' cannot be an empty array.");se=!1;for(const ne of y){if(typeof ne!="string")throw new TypeError("'fetches' must be a string array or an object.");if(v.indexOf(ne)===-1)throw new RangeError(`'fetches' contains invalid output name: ${ne}.`);O[ne]=null}if(typeof b=="object"&&b!==null)K=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else{let ne=!1;const W=Object.getOwnPropertyNames(y);for(const U of v)if(W.indexOf(U)!==-1){const q=y[U];(q===null||q instanceof A.Tensor)&&(ne=!0,se=!1,O[U]=q)}if(ne){if(typeof b=="object"&&b!==null)K=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else K=y}}else if(typeof y<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const ne of g)if(typeof M[ne]>"u")throw new Error(`input '${ne}' is missing in 'feeds'.`);if(se)for(const ne of v)O[ne]=null;return[O,K]}convertHandlerReturnTypeToMapOfTensors(g){const v={};for(const M in g)if(Object.hasOwnProperty.call(g,M)){const y=g[M];y instanceof A.Tensor?v[M]=y:v[M]=new A.Tensor(y.type,y.data,y.dims)}return v}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(g,v,M){const[y,b]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,g,v,M),O=await this.handler.runTrainStep(g,y,b);return this.convertHandlerReturnTypeToMapOfTensors(O)}async runOptimizerStep(g){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(g||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(g,v,M){if(this.hasEvalModel){const[y,b]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,g,v,M),O=await this.handler.runEvalStep(g,y,b);return this.convertHandlerReturnTypeToMapOfTensors(O)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(g=!0){return this.handler.getParametersSize(g)}async loadParametersBuffer(g,v=!0){const M=await this.getParametersSize(v);if(g.length!==4*M)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(g,v)}async getContiguousParameters(g=!0){return this.handler.getContiguousParameters(g)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(Ie,$,r)=>{r.r($),r.d($,{TrainingSession:()=>A});var f=r("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const A=f.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(Ie,$,r)=>{r.r($),r.d($,{version:()=>f});const f="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(Ie,$,r)=>{r.r($),r.d($,{InferenceSession:()=>lt,TRACE:()=>Ue,TRACE_FUNC_BEGIN:()=>Ne,TRACE_FUNC_END:()=>Re,Tensor:()=>le,default:()=>p_,env:()=>F,registerBackend:()=>K});/*!
 * ONNX Runtime Web v1.21.0-dev.20250114-228dd16893
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var f=Object.defineProperty,A=Object.getOwnPropertyDescriptor,j=Object.getOwnPropertyNames,X=Object.prototype.hasOwnProperty,R=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,s)=>(typeof require<"u"?require:t)[s]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),g=(e,t)=>()=>(e&&(t=e(e=0)),t),v=(e,t)=>{for(var s in t)f(e,s,{get:t[s],enumerable:!0})},M=(e,t,s,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of j(t))!X.call(e,o)&&o!==s&&f(e,o,{get:()=>t[o],enumerable:!(n=A(t,o))||n.enumerable});return e},y=e=>M(f({},"__esModule",{value:!0}),e),b,O,K,se,ne,W=g(()=>{b=new Map,O=[],K=(e,t,s)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=b.get(e);if(n===void 0)b.set(e,{backend:t,priority:s});else{if(n.priority>s)return;if(n.priority===s&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${s}`)}if(s>=0){let o=O.indexOf(e);o!==-1&&O.splice(o,1);for(let a=0;a<O.length;a++)if(b.get(O[a]).priority<=s){O.splice(a,0,e);return}O.push(e)}return}throw new TypeError("not a valid backend")},se=async e=>{let t=b.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let s=!!t.initPromise;try{return s||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return s||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},ne=async e=>{let t=e.executionProviders||[],s=t.map(p=>typeof p=="string"?p:p.name),n=s.length===0?O:s,o,a=[],i=new Set;for(let p of n){let h=await se(p);typeof h=="string"?a.push({name:p,err:h}):(o||(o=h),o===h&&i.add(p))}if(!o)throw new Error(`no available backend found. ERR: ${a.map(p=>`[${p.name}] ${p.err}`).join(", ")}`);for(let{name:p,err:h}of a)s.includes(p)&&console.warn(`removing requested execution provider "${p}" from session options because it is not available: ${h}`);let u=t.filter(p=>i.has(typeof p=="string"?p:p.name));return[o,new Proxy(e,{get:(p,h)=>h==="executionProviders"?u:Reflect.get(p,h)})]}}),U=g(()=>{W()}),q,I=g(()=>{q="1.21.0-dev.20241212-1f88284f96"}),S,w,x=g(()=>{I(),S="warning",w={wasm:{},webgl:{},webgpu:{},versions:{common:q},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);S=e}},get logLevel(){return S}},Object.defineProperty(w,"logLevel",{enumerable:!0})}),F,ae=g(()=>{x(),F=w}),oe,ve,we=g(()=>{oe=(e,t)=>{let s=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=e.dims[3],s.height=e.dims[2];let n=s.getContext("2d");if(n!=null){let o,a;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(o=e.dims[2],a=e.dims[3]):(o=e.dims[3],a=e.dims[2]);let i=(t==null?void 0:t.format)!==void 0?t.format:"RGB",u=t==null?void 0:t.norm,p,h;u===void 0||u.mean===void 0?p=[255,255,255,255]:typeof u.mean=="number"?p=[u.mean,u.mean,u.mean,u.mean]:(p=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(p[3]=u.mean[3])),u===void 0||u.bias===void 0?h=[0,0,0,0]:typeof u.bias=="number"?h=[u.bias,u.bias,u.bias,u.bias]:(h=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(h[3]=u.bias[3]));let k=a*o,C=0,d=k,z=k*2,B=-1;i==="RGBA"?(C=0,d=k,z=k*2,B=k*3):i==="RGB"?(C=0,d=k,z=k*2):i==="RBG"&&(C=0,z=k,d=k*2);for(let V=0;V<a;V++)for(let Z=0;Z<o;Z++){let ee=(e.data[C++]-h[0])*p[0],Y=(e.data[d++]-h[1])*p[1],he=(e.data[z++]-h[2])*p[2],pe=B===-1?255:(e.data[B++]-h[3])*p[3];n.fillStyle="rgba("+ee+","+Y+","+he+","+pe+")",n.fillRect(Z,V,1,1)}if("toDataURL"in s)return s.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ve=(e,t)=>{let s=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(s!=null){let o,a,i;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(o=e.dims[2],a=e.dims[1],i=e.dims[3]):(o=e.dims[3],a=e.dims[2],i=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:"RGB",p=t==null?void 0:t.norm,h,k;p===void 0||p.mean===void 0?h=[255,255,255,255]:typeof p.mean=="number"?h=[p.mean,p.mean,p.mean,p.mean]:(h=[p.mean[0],p.mean[1],p.mean[2],255],p.mean[3]!==void 0&&(h[3]=p.mean[3])),p===void 0||p.bias===void 0?k=[0,0,0,0]:typeof p.bias=="number"?k=[p.bias,p.bias,p.bias,p.bias]:(k=[p.bias[0],p.bias[1],p.bias[2],0],p.bias[3]!==void 0&&(k[3]=p.bias[3]));let C=a*o;if(t!==void 0&&(t.format!==void 0&&i===4&&t.format!=="RGBA"||i===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let d=4,z=0,B=1,V=2,Z=3,ee=0,Y=C,he=C*2,pe=-1;u==="RGBA"?(ee=0,Y=C,he=C*2,pe=C*3):u==="RGB"?(ee=0,Y=C,he=C*2):u==="RBG"&&(ee=0,he=C,Y=C*2),n=s.createImageData(o,a);for(let Me=0;Me<a*o;z+=d,B+=d,V+=d,Z+=d,Me++)n.data[z]=(e.data[ee++]-k[0])*h[0],n.data[B]=(e.data[Y++]-k[1])*h[1],n.data[V]=(e.data[he++]-k[2])*h[2],n.data[Z]=pe===-1?255:(e.data[pe++]-k[3])*h[3]}else throw new Error("Can not access image data");return n}}),re,xe,ce,ke,Oe,Pe,tt=g(()=>{je(),re=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:s,width:n}=t,o=t.norm??{mean:255,bias:0},a,i;typeof o.mean=="number"?a=[o.mean,o.mean,o.mean,o.mean]:a=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?i=[o.bias,o.bias,o.bias,o.bias]:i=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let u=t.format!==void 0?t.format:"RGBA",p=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",h=s*n,k=p==="RGBA"?new Float32Array(h*4):new Float32Array(h*3),C=4,d=0,z=1,B=2,V=3,Z=0,ee=h,Y=h*2,he=-1;u==="RGB"&&(C=3,d=0,z=1,B=2,V=-1),p==="RGBA"?he=h*3:p==="RBG"?(Z=0,Y=h,ee=h*2):p==="BGR"&&(Y=0,ee=h,Z=h*2);for(let pe=0;pe<h;pe++,d+=C,B+=C,z+=C,V+=C)k[Z++]=(e[d]+i[0])/a[0],k[ee++]=(e[z]+i[1])/a[1],k[Y++]=(e[B]+i[2])/a[2],he!==-1&&V!==-1&&(k[he++]=(e[V]+i[3])/a[3]);return p==="RGBA"?new Ke("float32",k,[1,4,s,n]):new Ke("float32",k,[1,3,s,n])},xe=async(e,t)=>{let s=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a=typeof e=="string",i,u=t??{},p=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},h=k=>typeof HTMLCanvasElement<"u"&&k instanceof HTMLCanvasElement||k instanceof OffscreenCanvas?k.getContext("2d"):null;if(s){let k=p();k.width=e.width,k.height=e.height;let C=h(k);if(C!=null){let d=e.height,z=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(d=t.resizedHeight,z=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=d,u.width=z}else u.tensorFormat="RGBA",u.height=d,u.width=z;C.drawImage(e,0,0),i=C.getImageData(0,0,z,d).data}else throw new Error("Can not access image data")}else if(n){let k,C;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(k=t.resizedHeight,C=t.resizedWidth):(k=e.height,C=e.width),t!==void 0&&(u=t),u.format="RGBA",u.height=k,u.width=C,t!==void 0){let d=p();d.width=C,d.height=k;let z=h(d);if(z!=null)z.putImageData(e,0,0),i=z.getImageData(0,0,C,k).data;else throw new Error("Can not access image data")}else i=e.data}else if(o){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let k=p();k.width=e.width,k.height=e.height;let C=h(k);if(C!=null){let d=e.height,z=e.width;return C.drawImage(e,0,0,z,d),i=C.getImageData(0,0,z,d).data,u.height=d,u.width=z,re(i,u)}else throw new Error("Can not access image data")}else{if(a)return new Promise((k,C)=>{let d=p(),z=h(d);if(!e||!z)return C();let B=new Image;B.crossOrigin="Anonymous",B.src=e,B.onload=()=>{d.width=B.width,d.height=B.height,z.drawImage(B,0,0,d.width,d.height);let V=z.getImageData(0,0,d.width,d.height);u.height=d.height,u.width=d.width,k(re(V.data,u))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return re(i,u);throw new Error("Input data provided is not supported - aborted tensor creation")},ce=(e,t)=>{let{width:s,height:n,download:o,dispose:a}=t,i=[1,n,s,4];return new Ke({location:"texture",type:"float32",texture:e,dims:i,download:o,dispose:a})},ke=(e,t)=>{let{dataType:s,dims:n,download:o,dispose:a}=t;return new Ke({location:"gpu-buffer",type:s??"float32",gpuBuffer:e,dims:n,download:o,dispose:a})},Oe=(e,t)=>{let{dataType:s,dims:n,download:o,dispose:a}=t;return new Ke({location:"ml-tensor",type:s??"float32",mlTensor:e,dims:n,download:o,dispose:a})},Pe=(e,t,s)=>new Ke({location:"cpu-pinned",type:e,data:t,dims:s??[t.length]})}),Ge,ye,J,de,Ce=g(()=>{Ge=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),ye=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),J=!1,de=()=>{if(!J){J=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,s=typeof Float16Array<"u"&&Float16Array.from;e&&(Ge.set("int64",BigInt64Array),ye.set(BigInt64Array,"int64")),t&&(Ge.set("uint64",BigUint64Array),ye.set(BigUint64Array,"uint64")),s?(Ge.set("float16",Float16Array),ye.set(Float16Array,"float16")):Ge.set("float16",Uint16Array)}}}),Be,Ze,te=g(()=>{je(),Be=e=>{let t=1;for(let s=0;s<e.length;s++){let n=e[s];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${s}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${s}] must be a non-negative integer, got: ${n}`);t*=n}return t},Ze=(e,t)=>{switch(e.location){case"cpu":return new Ke(e.type,e.data,t);case"cpu-pinned":return new Ke({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Ke({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Ke({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new Ke({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Ke,je=g(()=>{we(),tt(),Ce(),te(),Ke=class{constructor(e,t,s){de();let n,o;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,o=e.dims,e.location){case"cpu-pinned":{let i=Ge.get(n);if(!i)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,u;if(typeof e=="string")if(n=e,u=s,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{let p=Ge.get(e);if(p===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&p===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${p.name} as data.`);e==="uint64"||e==="int64"?i=p.from(t,BigInt):i=p.from(t)}else if(t instanceof p)i=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")i=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${p}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let p=typeof e[0];if(p==="string")n="string",i=e;else if(p==="boolean")n="bool",i=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${p}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",i=Uint8Array.from(e);else{let p=ye.get(e.constructor);if(p===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=p,i=e}if(u===void 0)u=[i.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");o=u,this.cpuData=i,this.dataLocation="cpu"}let a=Be(o);if(this.cpuData&&a!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(a/2)===this.cpuData.length))throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=o,this.size=a}static async fromImage(e,t){return xe(e,t)}static fromTexture(e,t){return ce(e,t)}static fromGpuBuffer(e,t){return ke(e,t)}static fromMLTensor(e,t){return Oe(e,t)}static fromPinnedBuffer(e,t,s){return Pe(e,t,s)}toDataURL(e){return oe(this,e)}toImageData(e){return ve(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Ze(this,e)}}}),le,Te=g(()=>{je(),le=Ke}),Ue,Ve,Ne,Re,st=g(()=>{x(),Ue=(e,t)=>{(typeof w.trace>"u"?!w.wasm.trace:!w.trace)||console.timeStamp(`${e}::ORT::${t}`)},Ve=(e,t)=>{var o;let s=((o=new Error().stack)==null?void 0:o.split(/\r\n|\r|\n/g))||[],n=!1;for(let a=0;a<s.length;a++){if(n&&!s[a].includes("TRACE_FUNC")){let i=`FUNC_${e}::${s[a].trim().split(" ")[1]}`;t&&(i+=`::${t}`),Ue("CPU",i);return}s[a].includes("TRACE_FUNC")&&(n=!0)}},Ne=e=>{(typeof w.trace>"u"?!w.wasm.trace:!w.trace)||Ve("BEGIN",e)},Re=e=>{(typeof w.trace>"u"?!w.wasm.trace:!w.trace)||Ve("END",e)}}),dt,ct=g(()=>{W(),Te(),st(),dt=class a_{constructor(t){this.handler=t}async run(t,s,n){Ne();let o={},a={};if(typeof t!="object"||t===null||t instanceof le||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof s=="object"){if(s===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(s instanceof le)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(s)){if(s.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let h of s){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);o[h]=null}if(typeof n=="object"&&n!==null)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,k=Object.getOwnPropertyNames(s);for(let C of this.outputNames)if(k.indexOf(C)!==-1){let d=s[C];(d===null||d instanceof le)&&(h=!0,i=!1,o[C]=d)}if(h){if(typeof n=="object"&&n!==null)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else a=s}}else if(typeof s<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of this.inputNames)if(typeof t[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(i)for(let h of this.outputNames)o[h]=null;let u=await this.handler.run(t,o,a),p={};for(let h in u)if(Object.hasOwnProperty.call(u,h)){let k=u[h];k instanceof le?p[h]=k:p[h]=new le(k.type,k.data,k.dims)}return Re(),p}async release(){return this.handler.dispose()}static async create(t,s,n,o){Ne();let a,i={};if(typeof t=="string"){if(a=t,typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(a=t,typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let k=t,C=0,d=t.byteLength;if(typeof s=="object"&&s!==null)i=s;else if(typeof s=="number"){if(C=s,!Number.isSafeInteger(C))throw new RangeError("'byteOffset' must be an integer.");if(C<0||C>=k.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${k.byteLength}).`);if(d=t.byteLength-C,typeof n=="number"){if(d=n,!Number.isSafeInteger(d))throw new RangeError("'byteLength' must be an integer.");if(d<=0||C+d>k.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${k.byteLength-C}].`);if(typeof o=="object"&&o!==null)i=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof s<"u")throw new TypeError("'options' must be an object.");a=new Uint8Array(k,C,d)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,p]=await ne(i),h=await u.createInferenceSessionHandler(a,p);return Re(),new a_(h)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),lt,ht=g(()=>{ct(),lt=dt}),L=g(()=>{}),ie=g(()=>{}),H=g(()=>{}),_e=g(()=>{}),$e={};v($e,{InferenceSession:()=>lt,TRACE:()=>Ue,TRACE_FUNC_BEGIN:()=>Ne,TRACE_FUNC_END:()=>Re,Tensor:()=>le,env:()=>F,registerBackend:()=>K});var We=g(()=>{U(),ae(),ht(),Te(),L(),ie(),st(),H(),_e()}),Je=g(()=>{}),ut={};v(ut,{default:()=>kt});var mt,vt,kt,It=g(()=>{var e;Th(),lr(),Rr(),mt="ort-wasm-proxy-worker",vt=((e=globalThis.self)==null?void 0:e.name)===mt,vt&&(self.onmessage=t=>{let{type:s,in:n}=t.data;try{switch(s){case"init-wasm":Ar(n.wasm).then(()=>{Fo(n).then(()=>{postMessage({type:s})},o=>{postMessage({type:s,err:o})})},o=>{postMessage({type:s,err:o})});break;case"init-ep":{let{epName:o,env:a}=n;qn(a,o).then(()=>{postMessage({type:s})},i=>{postMessage({type:s,err:i})});break}case"copy-from":{let{buffer:o}=n,a=Qn(o);postMessage({type:s,out:a});break}case"create":{let{model:o,options:a}=n;Xn(o,a).then(i=>{postMessage({type:s,out:i})},i=>{postMessage({type:s,err:i})});break}case"release":kc(n),postMessage({type:s});break;case"run":{let{sessionId:o,inputIndices:a,inputs:i,outputIndices:u,options:p}=n;$c(o,a,i,u,new Array(u.length).fill(null),p).then(h=>{h.some(k=>k[3]!=="cpu")?postMessage({type:s,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:s,out:h},hr([...i,...h]))},h=>{postMessage({type:s,err:h})});break}case"end-profiling":qr(n),postMessage({type:s});break;default:}}catch(o){postMessage({type:s,err:o})}}),kt=vt?null:t=>new Worker(t??Us,{type:"module",name:mt})}),os={};v(os,{default:()=>Ds});var ys,Cs,Ds,sr=g(()=>{var e;Cs=(ys=import.meta.url,async function(t={}){function s(){return Ft.buffer!=Rt.buffer&&Es(),Rt}function n(){return Ft.buffer!=Rt.buffer&&Es(),fs}function o(){return Ft.buffer!=Rt.buffer&&Es(),it}function a(){return Ft.buffer!=Rt.buffer&&Es(),Pt}function i(){return Ft.buffer!=Rt.buffer&&Es(),ps}function u(){return Ft.buffer!=Rt.buffer&&Es(),Ns}function p(){return Ft.buffer!=Rt.buffer&&Es(),xr}function h(){return Ft.buffer!=Rt.buffer&&Es(),zo}var k,C,d=Object.assign({},t),z=new Promise((l,m)=>{k=l,C=m}),B=typeof window=="object",V=typeof importScripts=="function",Z=V&&self.name=="em-pthread";d.mountExternalData=(l,m)=>{l.startsWith("./")&&(l=l.substring(2)),(d.Fb||(d.Fb=new Map)).set(l,m)},d.unmountExternalData=()=>{delete d.Fb};var ee=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let Y=()=>{let l=(E,D,G)=>(...ge)=>{let Xe=mn,nt=D==null?void 0:D();ge=E(...ge);let wt=D==null?void 0:D();return nt!==wt&&(E=wt,G(nt),D=G=null),mn!=Xe?new Promise((Ct,Wt)=>{_h={resolve:Ct,reject:Wt}}):ge},m=E=>async(...D)=>{var G;try{if(d.Gb)throw Error("Session already started");let ge=d.Gb={hc:D[0],errors:[]},Xe=await E(...D);if(d.Gb!==ge)throw Error("Session mismatch");(G=d.Hb)==null||G.flush();let nt=ge.errors;if(0<nt.length){let wt=await Promise.all(nt);if(wt=wt.filter(Ct=>Ct),0<wt.length)throw Error(wt.join(`
`))}return Xe}finally{d.Gb=null}};d._OrtCreateSession=l(d._OrtCreateSession,()=>d._OrtCreateSession,E=>d._OrtCreateSession=E),d._OrtRun=m(l(d._OrtRun,()=>d._OrtRun,E=>d._OrtRun=E)),d._OrtRunWithBinding=m(l(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,E=>d._OrtRunWithBinding=E)),d._OrtBindInput=l(d._OrtBindInput,()=>d._OrtBindInput,E=>d._OrtBindInput=E),Y=void 0};d.jsepInit=(l,m)=>{if(Y==null||Y(),l==="webgpu"){[d.Hb,d.Vb,d.Zb,d.Ob,d.Yb,d.kb,d.$b,d.cc,d.Wb,d.Xb,d.ac]=m;let E=d.Hb;d.jsepRegisterBuffer=(D,G,ge,Xe)=>E.registerBuffer(D,G,ge,Xe),d.jsepGetBuffer=D=>E.getBuffer(D),d.jsepCreateDownloader=(D,G,ge)=>E.createDownloader(D,G,ge),d.jsepOnCreateSession=D=>{E.onCreateSession(D)},d.jsepOnReleaseSession=D=>{E.onReleaseSession(D)},d.jsepOnRunStart=D=>E.onRunStart(D),d.dc=(D,G)=>{E.upload(D,G)}}else if(l==="webnn"){[d.Hb,d.bc,d.Pb,d.jsepEnsureTensor,d.ec,d.jsepDownloadTensor]=m,d.jsepReleaseTensorId=d.Pb;let E=d.Hb;d.jsepOnRunStart=D=>E.onRunStart(D),d.jsepRegisterMLContext=(D,G)=>{E.registerMLContext(D,G)},d.jsepOnReleaseSession=D=>{E.onReleaseSession(D)},d.jsepCreateMLTensorDownloader=(D,G)=>E.createMLTensorDownloader(D,G),d.jsepRegisterMLTensor=(D,G,ge)=>E.registerMLTensor(D,G,ge),d.jsepCreateMLContext=D=>E.createMLContext(D),d.jsepRegisterMLConstant=(D,G,ge,Xe,nt)=>E.registerMLConstant(D,G,ge,Xe,nt,d.Fb)}};var he,pe,Me=Object.assign({},d),Fe="./this.program",Le=(l,m)=>{throw m},Ye="";(B||V)&&(V?Ye=self.location.href:typeof document<"u"&&document.currentScript&&(Ye=document.currentScript.src),ys&&(Ye=ys),Ye=Ye.startsWith("blob:")?"":Ye.substr(0,Ye.replace(/[?#].*/,"").lastIndexOf("/")+1),V&&(pe=l=>{var m=new XMLHttpRequest;return m.open("GET",l,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),he=(l,m,E)=>{var D=new XMLHttpRequest;D.open("GET",l,!0),D.responseType="arraybuffer",D.onload=()=>{D.status==200||D.status==0&&D.response?m(D.response):E()},D.onerror=E,D.send(null)});var at,Et=console.log.bind(console),Xt=console.error.bind(console),Zt=Et,bt=Xt;if(Object.assign(d,Me),Me=null,Z){let l=function(m){try{var E=m.data,D=E.cmd;if(D==="load"){let G=[];self.onmessage=ge=>G.push(ge),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let ge of G)l(ge);self.onmessage=l};for(let ge of E.handlers)d[ge]&&!d[ge].proxy||(d[ge]=(...Xe)=>{postMessage({Nb:"callHandler",pc:ge,args:Xe})},ge=="print"&&(Zt=d[ge]),ge=="printErr"&&(bt=d[ge]));Ft=E.wasmMemory,Es(),ss(E.wasmModule)}else if(D==="run"){yh(E.pthread_ptr,0,0,1,0,0),hh(E.pthread_ptr),__(),qh(),St||(Gm(),St=!0);try{f_(E.start_routine,E.arg)}catch(G){if(G!="unwind")throw G}}else D==="cancel"?Da()&&jp(-1):E.target!=="setimmediate"&&(D==="checkMailbox"?St&&Ip():D&&(bt(`worker: received unknown command ${D}`),bt(E)))}catch(G){throw Km(),G}};var ss,St=!1;bt=function(...m){m=m.join(" "),console.error(m)},self.alert=function(...m){postMessage({Nb:"alert",text:m.join(" "),rc:Da()})},d.instantiateWasm=(m,E)=>new Promise(D=>{ss=G=>{G=new WebAssembly.Instance(G,Vh()),E(G),D()}}),self.onunhandledrejection=m=>{throw m.reason||m},self.onmessage=l}d.wasmBinary&&(at=d.wasmBinary);var Ft,bs,Ht,Rt,fs,it,Pt,ps,Ns,xr,er,cn,zo,zs=!1;function Es(){var l=Ft.buffer;d.HEAP8=Rt=new Int8Array(l),d.HEAP16=it=new Int16Array(l),d.HEAPU8=fs=new Uint8Array(l),d.HEAPU16=Pt=new Uint16Array(l),d.HEAP32=ps=new Int32Array(l),d.HEAPU32=Ns=new Uint32Array(l),d.HEAPF32=xr=new Float32Array(l),d.HEAPF64=zo=new Float64Array(l),d.HEAP64=er=new BigInt64Array(l),d.HEAPU64=cn=new BigUint64Array(l)}if(!Z){if(!((Ft=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof ee))throw bt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");Es()}var Jn=[],Oc=[],Zp=[],Fc=0,eh=null,Dc=null;function Bh(){if(--Fc==0&&(eh!==null&&(clearInterval(eh),eh=null),Dc)){var l=Dc;Dc=null,l()}}function Zn(l){throw bt(l="Aborted("+l+")"),zs=!0,Ht=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),C(l),l}var th,Rh=l=>l.startsWith("data:application/octet-stream;base64,"),Nh=l=>l.startsWith("file://");function jh(l){if(l==th&&at)return new Uint8Array(at);if(pe)return pe(l);throw"both async and sync fetching of the wasm failed"}function Uh(l,m,E){return function(D){if(!at&&(B||V)){if(typeof fetch=="function"&&!Nh(D))return fetch(D,{credentials:"same-origin"}).then(G=>{if(!G.ok)throw`failed to load wasm binary file at '${D}'`;return G.arrayBuffer()}).catch(()=>jh(D));if(he)return new Promise((G,ge)=>{he(D,Xe=>G(new Uint8Array(Xe)),ge)})}return Promise.resolve().then(()=>jh(D))}(l).then(D=>WebAssembly.instantiate(D,m)).then(E,D=>{bt(`failed to asynchronously prepare wasm: ${D}`),Zn(D)})}function Vh(){return{a:{O:m_,Aa:h_,b:w_,aa:Jh,B:tm,qa:sm,Y:nm,_:om,ra:im,oa:am,ha:lm,na:um,L:dm,Z:cm,W:pm,pa:hm,X:mm,va:y_,F:b_,Q:v_,P:T_,E:P_,u:C_,q:k_,G:S_,A:L_,R:z_,ua:B_,ka:R_,U:N_,ba:j_,H:U_,ja:hh,ta:V_,t:W_,Ba:G_,x:q_,n:Q_,l:Y_,c:ch,o:J_,j:tf,w:sf,p:rf,f:nf,s:of,m:af,e:lf,k:uf,i:df,h:cf,d:pf,ea:hf,fa:mf,ga:_f,ca:km,da:Sm,T:ff,g:gf,D:wf,I:yf,M:Mf,y:bf,sa:vf,V:xf,v:Im,z:Tf,N:Ef,S:Pf,za:Cf,ya:kf,la:Fm,ma:Dm,$:ih,C:Lm,K:zm,ia:Bm,J:Rm,a:Ft,xa:oh,wa:Um,r:If}}}var sh={913700:(l,m,E,D,G)=>{if(d===void 0||!d.Fb)return 1;if((l=Qs(Number(l>>>0))).startsWith("./")&&(l=l.substring(2)),!(l=d.Fb.get(l)))return 2;if(m=Number(m>>>0),E=Number(E>>>0),D=Number(D>>>0),m+E>l.byteLength)return 3;try{let ge=l.subarray(m,m+E);switch(G){case 0:n().set(ge,D>>>0);break;case 1:d.dc(D,ge);break;default:return 4}return 0}catch{return 4}},914415:(l,m,E)=>{d.ec(l,n().subarray(m>>>0,m+E>>>0))},914478:()=>d.bc(),914519:l=>{d.Pb(l)},914555:()=>{d.Wb()},914586:()=>{d.Xb()},914615:()=>{d.ac()},914640:l=>d.Vb(l),914673:l=>d.Zb(l),914705:(l,m,E)=>{d.Ob(Number(l),Number(m),Number(E),!0)},914768:(l,m,E)=>{d.Ob(Number(l),Number(m),Number(E))},914825:()=>typeof wasmOffsetConverter<"u",914882:l=>{d.kb("Abs",l,void 0)},914933:l=>{d.kb("Neg",l,void 0)},914984:l=>{d.kb("Floor",l,void 0)},915037:l=>{d.kb("Ceil",l,void 0)},915089:l=>{d.kb("Reciprocal",l,void 0)},915147:l=>{d.kb("Sqrt",l,void 0)},915199:l=>{d.kb("Exp",l,void 0)},915250:l=>{d.kb("Erf",l,void 0)},915301:l=>{d.kb("Sigmoid",l,void 0)},915356:(l,m,E)=>{d.kb("HardSigmoid",l,{alpha:m,beta:E})},915435:l=>{d.kb("Log",l,void 0)},915486:l=>{d.kb("Sin",l,void 0)},915537:l=>{d.kb("Cos",l,void 0)},915588:l=>{d.kb("Tan",l,void 0)},915639:l=>{d.kb("Asin",l,void 0)},915691:l=>{d.kb("Acos",l,void 0)},915743:l=>{d.kb("Atan",l,void 0)},915795:l=>{d.kb("Sinh",l,void 0)},915847:l=>{d.kb("Cosh",l,void 0)},915899:l=>{d.kb("Asinh",l,void 0)},915952:l=>{d.kb("Acosh",l,void 0)},916005:l=>{d.kb("Atanh",l,void 0)},916058:l=>{d.kb("Tanh",l,void 0)},916110:l=>{d.kb("Not",l,void 0)},916161:(l,m,E)=>{d.kb("Clip",l,{min:m,max:E})},916230:l=>{d.kb("Clip",l,void 0)},916282:(l,m)=>{d.kb("Elu",l,{alpha:m})},916340:l=>{d.kb("Gelu",l,void 0)},916392:l=>{d.kb("Relu",l,void 0)},916444:(l,m)=>{d.kb("LeakyRelu",l,{alpha:m})},916508:(l,m)=>{d.kb("ThresholdedRelu",l,{alpha:m})},916578:(l,m)=>{d.kb("Cast",l,{to:m})},916636:l=>{d.kb("Add",l,void 0)},916687:l=>{d.kb("Sub",l,void 0)},916738:l=>{d.kb("Mul",l,void 0)},916789:l=>{d.kb("Div",l,void 0)},916840:l=>{d.kb("Pow",l,void 0)},916891:l=>{d.kb("Equal",l,void 0)},916944:l=>{d.kb("Greater",l,void 0)},916999:l=>{d.kb("GreaterOrEqual",l,void 0)},917061:l=>{d.kb("Less",l,void 0)},917113:l=>{d.kb("LessOrEqual",l,void 0)},917172:(l,m,E,D,G)=>{d.kb("ReduceMean",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},917347:(l,m,E,D,G)=>{d.kb("ReduceMax",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},917521:(l,m,E,D,G)=>{d.kb("ReduceMin",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},917695:(l,m,E,D,G)=>{d.kb("ReduceProd",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},917870:(l,m,E,D,G)=>{d.kb("ReduceSum",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},918044:(l,m,E,D,G)=>{d.kb("ReduceL1",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},918217:(l,m,E,D,G)=>{d.kb("ReduceL2",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},918390:(l,m,E,D,G)=>{d.kb("ReduceLogSum",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},918567:(l,m,E,D,G)=>{d.kb("ReduceSumSquare",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},918747:(l,m,E,D,G)=>{d.kb("ReduceLogSumExp",l,{keepDims:!!m,noopWithEmptyAxes:!!E,axes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},918927:l=>{d.kb("Where",l,void 0)},918980:(l,m,E)=>{d.kb("Transpose",l,{perm:m?Array.from(i().subarray(Number(m)>>>0,Number(E)>>>0)):[]})},919104:(l,m,E,D)=>{d.kb("DepthToSpace",l,{blocksize:m,mode:Qs(E),format:D?"NHWC":"NCHW"})},919237:(l,m,E,D)=>{d.kb("DepthToSpace",l,{blocksize:m,mode:Qs(E),format:D?"NHWC":"NCHW"})},919370:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He,ls)=>{d.kb("ConvTranspose",l,{format:wt?"NHWC":"NCHW",autoPad:m,dilations:[E],group:D,kernelShape:[G],pads:[ge,Xe],strides:[nt],wIsConst:()=>!!s()[Ct>>>0],outputPadding:Wt?Array.from(i().subarray(Number(Wt)>>>0,Number(hs)>>>0)):[],outputShape:vs?Array.from(i().subarray(Number(vs)>>>0,Number(He)>>>0)):[],activation:Qs(ls)})},919803:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He)=>{d.kb("ConvTranspose",l,{format:nt?"NHWC":"NCHW",autoPad:m,dilations:Array.from(i().subarray(Number(E)>>>0,2+(Number(E)>>>0)>>>0)),group:D,kernelShape:Array.from(i().subarray(Number(G)>>>0,2+(Number(G)>>>0)>>>0)),pads:Array.from(i().subarray(Number(ge)>>>0,4+(Number(ge)>>>0)>>>0)),strides:Array.from(i().subarray(Number(Xe)>>>0,2+(Number(Xe)>>>0)>>>0)),wIsConst:()=>!!s()[wt>>>0],outputPadding:Ct?Array.from(i().subarray(Number(Ct)>>>0,Number(Wt)>>>0)):[],outputShape:hs?Array.from(i().subarray(Number(hs)>>>0,Number(vs)>>>0)):[],activation:Qs(He)})},920464:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He,ls)=>{d.kb("ConvTranspose",l,{format:wt?"NHWC":"NCHW",autoPad:m,dilations:[E],group:D,kernelShape:[G],pads:[ge,Xe],strides:[nt],wIsConst:()=>!!s()[Ct>>>0],outputPadding:Wt?Array.from(i().subarray(Number(Wt)>>>0,Number(hs)>>>0)):[],outputShape:vs?Array.from(i().subarray(Number(vs)>>>0,Number(He)>>>0)):[],activation:Qs(ls)})},920897:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He)=>{d.kb("ConvTranspose",l,{format:nt?"NHWC":"NCHW",autoPad:m,dilations:Array.from(i().subarray(Number(E)>>>0,2+(Number(E)>>>0)>>>0)),group:D,kernelShape:Array.from(i().subarray(Number(G)>>>0,2+(Number(G)>>>0)>>>0)),pads:Array.from(i().subarray(Number(ge)>>>0,4+(Number(ge)>>>0)>>>0)),strides:Array.from(i().subarray(Number(Xe)>>>0,2+(Number(Xe)>>>0)>>>0)),wIsConst:()=>!!s()[wt>>>0],outputPadding:Ct?Array.from(i().subarray(Number(Ct)>>>0,Number(Wt)>>>0)):[],outputShape:hs?Array.from(i().subarray(Number(hs)>>>0,Number(vs)>>>0)):[],activation:Qs(He)})},921558:(l,m)=>{d.kb("GlobalAveragePool",l,{format:m?"NHWC":"NCHW"})},921649:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He)=>{d.kb("AveragePool",l,{format:He?"NHWC":"NCHW",auto_pad:m,ceil_mode:E,count_include_pad:D,storage_order:G,dilations:ge?Array.from(i().subarray(Number(ge)>>>0,Number(Xe)>>>0)):[],kernel_shape:nt?Array.from(i().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],pads:Ct?Array.from(i().subarray(Number(Ct)>>>0,Number(Wt)>>>0)):[],strides:hs?Array.from(i().subarray(Number(hs)>>>0,Number(vs)>>>0)):[]})},922128:(l,m)=>{d.kb("GlobalAveragePool",l,{format:m?"NHWC":"NCHW"})},922219:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He)=>{d.kb("AveragePool",l,{format:He?"NHWC":"NCHW",auto_pad:m,ceil_mode:E,count_include_pad:D,storage_order:G,dilations:ge?Array.from(i().subarray(Number(ge)>>>0,Number(Xe)>>>0)):[],kernel_shape:nt?Array.from(i().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],pads:Ct?Array.from(i().subarray(Number(Ct)>>>0,Number(Wt)>>>0)):[],strides:hs?Array.from(i().subarray(Number(hs)>>>0,Number(vs)>>>0)):[]})},922698:(l,m)=>{d.kb("GlobalMaxPool",l,{format:m?"NHWC":"NCHW"})},922785:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He)=>{d.kb("MaxPool",l,{format:He?"NHWC":"NCHW",auto_pad:m,ceil_mode:E,count_include_pad:D,storage_order:G,dilations:ge?Array.from(i().subarray(Number(ge)>>>0,Number(Xe)>>>0)):[],kernel_shape:nt?Array.from(i().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],pads:Ct?Array.from(i().subarray(Number(Ct)>>>0,Number(Wt)>>>0)):[],strides:hs?Array.from(i().subarray(Number(hs)>>>0,Number(vs)>>>0)):[]})},923260:(l,m)=>{d.kb("GlobalMaxPool",l,{format:m?"NHWC":"NCHW"})},923347:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He)=>{d.kb("MaxPool",l,{format:He?"NHWC":"NCHW",auto_pad:m,ceil_mode:E,count_include_pad:D,storage_order:G,dilations:ge?Array.from(i().subarray(Number(ge)>>>0,Number(Xe)>>>0)):[],kernel_shape:nt?Array.from(i().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],pads:Ct?Array.from(i().subarray(Number(Ct)>>>0,Number(Wt)>>>0)):[],strides:hs?Array.from(i().subarray(Number(hs)>>>0,Number(vs)>>>0)):[]})},923822:(l,m,E,D,G)=>{d.kb("Gemm",l,{alpha:m,beta:E,transA:D,transB:G})},923926:l=>{d.kb("MatMul",l,void 0)},923980:(l,m,E,D)=>{d.kb("ArgMax",l,{keepDims:!!m,selectLastIndex:!!E,axis:D})},924088:(l,m,E,D)=>{d.kb("ArgMin",l,{keepDims:!!m,selectLastIndex:!!E,axis:D})},924196:(l,m)=>{d.kb("Softmax",l,{axis:m})},924259:(l,m)=>{d.kb("Concat",l,{axis:m})},924319:(l,m,E,D,G)=>{d.kb("Split",l,{axis:m,numOutputs:E,splitSizes:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},924475:l=>{d.kb("Expand",l,void 0)},924529:(l,m)=>{d.kb("Gather",l,{axis:Number(m)})},924600:(l,m)=>{d.kb("GatherElements",l,{axis:Number(m)})},924679:(l,m)=>{d.kb("GatherND",l,{batch_dims:Number(m)})},924758:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt)=>{d.kb("Resize",l,{antialias:m,axes:E?Array.from(i().subarray(Number(E)>>>0,Number(D)>>>0)):[],coordinateTransformMode:Qs(G),cubicCoeffA:ge,excludeOutside:Xe,extrapolationValue:nt,keepAspectRatioPolicy:Qs(wt),mode:Qs(Ct),nearestMode:Qs(Wt)})},925120:(l,m,E,D,G,ge,Xe)=>{d.kb("Slice",l,{starts:m?Array.from(i().subarray(Number(m)>>>0,Number(E)>>>0)):[],ends:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[],axes:ge?Array.from(i().subarray(Number(ge)>>>0,Number(Xe)>>>0)):[]})},925384:l=>{d.kb("Tile",l,void 0)},925436:(l,m,E)=>{d.kb("InstanceNormalization",l,{epsilon:m,format:E?"NHWC":"NCHW"})},925550:(l,m,E)=>{d.kb("InstanceNormalization",l,{epsilon:m,format:E?"NHWC":"NCHW"})},925664:l=>{d.kb("Range",l,void 0)},925717:(l,m)=>{d.kb("Einsum",l,{equation:Qs(m)})},925798:(l,m,E,D,G)=>{d.kb("Pad",l,{mode:m,value:E,pads:D?Array.from(i().subarray(Number(D)>>>0,Number(G)>>>0)):[]})},925941:(l,m,E,D,G,ge)=>{d.kb("BatchNormalization",l,{epsilon:m,momentum:E,spatial:!!G,trainingMode:!!D,format:ge?"NHWC":"NCHW"})},926110:(l,m,E,D,G,ge)=>{d.kb("BatchNormalization",l,{epsilon:m,momentum:E,spatial:!!G,trainingMode:!!D,format:ge?"NHWC":"NCHW"})},926279:(l,m,E)=>{d.kb("CumSum",l,{exclusive:Number(m),reverse:Number(E)})},926376:(l,m,E)=>{d.kb("DequantizeLinear",l,{axis:m,blockSize:E})},926466:(l,m,E,D,G)=>{d.kb("GridSample",l,{align_corners:m,mode:Qs(E),padding_mode:Qs(D),format:G?"NHWC":"NCHW"})},926636:(l,m,E,D,G)=>{d.kb("GridSample",l,{align_corners:m,mode:Qs(E),padding_mode:Qs(D),format:G?"NHWC":"NCHW"})},926806:(l,m,E,D,G,ge,Xe,nt,wt)=>{d.kb("Attention",l,{numHeads:m,isUnidirectional:E,maskFilterValue:D,scale:G,doRotary:ge,qkvHiddenSizes:Xe?Array.from(i().subarray(Number(nt)>>>0,Number(nt)+Xe>>>0)):[],pastPresentShareBuffer:!!wt})},927078:l=>{d.kb("BiasAdd",l,void 0)},927133:l=>{d.kb("BiasSplitGelu",l,void 0)},927194:l=>{d.kb("FastGelu",l,void 0)},927250:(l,m,E,D,G,ge,Xe,nt,wt,Ct,Wt,hs,vs,He,ls,js)=>{d.kb("Conv",l,{format:hs?"NHWC":"NCHW",auto_pad:m,dilations:E?Array.from(i().subarray(Number(E)>>>0,Number(D)>>>0)):[],group:G,kernel_shape:ge?Array.from(i().subarray(Number(ge)>>>0,Number(Xe)>>>0)):[],pads:nt?Array.from(i().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],strides:Ct?Array.from(i().subarray(Number(Ct)>>>0,Number(Wt)>>>0)):[],w_is_const:()=>!!s()[Number(vs)>>>0],activation:Qs(He),activation_params:ls?Array.from(p().subarray(Number(ls)>>>0,Number(js)>>>0)):[]})},927834:l=>{d.kb("Gelu",l,void 0)},927886:(l,m,E,D,G,ge,Xe,nt,wt)=>{d.kb("GroupQueryAttention",l,{numHeads:m,kvNumHeads:E,scale:D,softcap:G,doRotary:ge,rotaryInterleaved:Xe,smoothSoftmax:nt,localWindowSize:wt})},928103:(l,m,E,D)=>{d.kb("LayerNormalization",l,{axis:m,epsilon:E,simplified:!!D})},928214:(l,m,E,D)=>{d.kb("LayerNormalization",l,{axis:m,epsilon:E,simplified:!!D})},928325:(l,m,E,D,G,ge)=>{d.kb("MatMulNBits",l,{k:m,n:E,accuracyLevel:D,bits:G,blockSize:ge})},928452:(l,m,E,D,G,ge)=>{d.kb("MultiHeadAttention",l,{numHeads:m,isUnidirectional:E,maskFilterValue:D,scale:G,doRotary:ge})},928611:(l,m)=>{d.kb("QuickGelu",l,{alpha:m})},928675:(l,m,E,D,G)=>{d.kb("RotaryEmbedding",l,{interleaved:!!m,numHeads:E,rotaryEmbeddingDim:D,scale:G})},928814:(l,m,E)=>{d.kb("SkipLayerNormalization",l,{epsilon:m,simplified:!!E})},928916:(l,m,E)=>{d.kb("SkipLayerNormalization",l,{epsilon:m,simplified:!!E})},929018:(l,m,E,D)=>{d.kb("GatherBlockQuantized",l,{gatherAxis:m,quantizeAxis:E,blockSize:D})},929139:l=>{d.$b(l)},929173:(l,m)=>d.cc(Number(l),Number(m),d.Gb.hc,d.Gb.errors)};function h_(l,m,E){return xm(async()=>{await d.Yb(Number(l),Number(m),Number(E))})}function m_(){return typeof wasmOffsetConverter<"u"}function rh(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var nh=l=>{l.terminate(),l.onmessage=()=>{}},Wh=l=>{eo.length==0&&(Xh(),Qh(eo[0]));var m=eo.pop();if(!m)return 6;Ro.push(m),pn[l.Bb]=m,m.Bb=l.Bb;var E={cmd:"run",start_routine:l.ic,arg:l.Rb,pthread_ptr:l.Bb};return m.postMessage(E,l.nc),0},Bo=0,Bs=(l,m,...E)=>{for(var D=2*E.length,G=vh(),ge=bh(8*D),Xe=ge>>>3,nt=0;nt<E.length;nt++){var wt=E[nt];typeof wt=="bigint"?(er[Xe+2*nt]=1n,er[Xe+2*nt+1]=wt):(er[Xe+2*nt]=0n,h()[Xe+2*nt+1>>>0]=wt)}return l=Hm(l,0,D,ge,m),Up(G),l};function oh(l){if(Z)return Bs(0,1,l);if(Ht=l,!(0<Bo)){for(var m of Ro)nh(m);for(m of eo)nh(m);eo=[],Ro=[],pn=[],zs=!0}Le(l,new rh(l))}function Gh(l){if(Z)return Bs(1,0,l);ih(l)}var ih=l=>{if(Ht=l,Z)throw Gh(l),"unwind";oh(l)},eo=[],Ro=[],Kh=[],pn={},Hh=l=>{var m=l.Bb;delete pn[m],eo.push(l),Ro.splice(Ro.indexOf(l),1),l.Bb=0,Mh(m)};function qh(){Kh.forEach(l=>l())}var Qh=l=>new Promise(m=>{l.onmessage=G=>{var ge=(G=G.data).cmd;if(G.targetThread&&G.targetThread!=Da()){var Xe=pn[G.targetThread];Xe?Xe.postMessage(G,G.transferList):bt(`Internal error! Worker sent a message "${ge}" to target pthread ${G.targetThread}, but that thread no longer exists!`)}else ge==="checkMailbox"?Ip():ge==="spawnThread"?Wh(G):ge==="cleanupThread"?Hh(pn[G.thread]):ge==="killThread"?(G=G.thread,ge=pn[G],delete pn[G],nh(ge),Mh(G),Ro.splice(Ro.indexOf(ge),1),ge.Bb=0):ge==="cancelThread"?pn[G.thread].postMessage({cmd:"cancel"}):ge==="loaded"?(l.loaded=!0,m(l)):ge==="alert"?alert(`Thread ${G.threadId}: ${G.text}`):G.target==="setimmediate"?l.postMessage(G):ge==="callHandler"?d[G.handler](...G.args):ge&&bt(`worker sent an unknown command ${ge}`)},l.onerror=G=>{throw bt(`worker sent an error! ${G.filename}:${G.lineno}: ${G.message}`),G};var E,D=[];for(E of[])d.hasOwnProperty(E)&&D.push(E);l.postMessage({cmd:"load",handlers:D,wasmMemory:Ft,wasmModule:bs})});function Xh(){var l=new Worker(import.meta.url.startsWith("file:")?new URL(r("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),r.b):new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});eo.push(l)}var $p=l=>{for(;0<l.length;)l.shift()(d)},__=()=>{var l=Da(),m=u()[l+52>>>2>>>0];l=u()[l+56>>>2>>>0],Qm(m,m-l),Up(m)},f_=(l,m)=>{Bo=0,l=Xm(l,m),0<Bo?Ht=l:jp(l)};class g_{constructor(m){this.Kb=m-24}}function w_(l,m,E){var D=new g_(l>>>=0);throw m>>>=0,E>>>=0,u()[D.Kb+16>>>2>>>0]=0,u()[D.Kb+4>>>2>>>0]=m,u()[D.Kb+8>>>2>>>0]=E,l}function Yh(l,m,E,D){return Z?Bs(2,1,l,m,E,D):Jh(l,m,E,D)}function Jh(l,m,E,D){if(l>>>=0,m>>>=0,E>>>=0,D>>>=0,ee===void 0)return bt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var G=[];return Z&&G.length===0?Yh(l,m,E,D):(l={ic:E,Bb:l,Rb:D,nc:G},Z?(l.Nb="spawnThread",postMessage(l,G),0):Wh(l))}var Zh=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,em=(l,m,E)=>{var D=(m>>>=0)+E;for(E=m;l[E]&&!(E>=D);)++E;if(16<E-m&&l.buffer&&Zh)return Zh.decode(l.buffer instanceof ee?l.slice(m,E):l.subarray(m,E));for(D="";m<E;){var G=l[m++];if(128&G){var ge=63&l[m++];if((224&G)==192)D+=String.fromCharCode((31&G)<<6|ge);else{var Xe=63&l[m++];65536>(G=(240&G)==224?(15&G)<<12|ge<<6|Xe:(7&G)<<18|ge<<12|Xe<<6|63&l[m++])?D+=String.fromCharCode(G):(G-=65536,D+=String.fromCharCode(55296|G>>10,56320|1023&G))}}else D+=String.fromCharCode(G)}return D},Qs=(l,m)=>(l>>>=0)?em(n(),l,m):"";function tm(l,m,E){return Z?Bs(3,1,l,m,E):0}function sm(l,m){if(Z)return Bs(4,1,l,m)}var ah=l=>{for(var m=0,E=0;E<l.length;++E){var D=l.charCodeAt(E);127>=D?m++:2047>=D?m+=2:55296<=D&&57343>=D?(m+=4,++E):m+=3}return m},rm=(l,m,E,D)=>{if(!(0<D))return 0;var G=E>>>=0;D=E+D-1;for(var ge=0;ge<l.length;++ge){var Xe=l.charCodeAt(ge);if(55296<=Xe&&57343>=Xe&&(Xe=65536+((1023&Xe)<<10)|1023&l.charCodeAt(++ge)),127>=Xe){if(E>=D)break;m[E++>>>0]=Xe}else{if(2047>=Xe){if(E+1>=D)break;m[E++>>>0]=192|Xe>>6}else{if(65535>=Xe){if(E+2>=D)break;m[E++>>>0]=224|Xe>>12}else{if(E+3>=D)break;m[E++>>>0]=240|Xe>>18,m[E++>>>0]=128|Xe>>12&63}m[E++>>>0]=128|Xe>>6&63}m[E++>>>0]=128|63&Xe}}return m[E>>>0]=0,E-G},Aa=(l,m,E)=>rm(l,n(),m,E);function nm(l,m){if(Z)return Bs(5,1,l,m)}function om(l,m,E){if(Z)return Bs(6,1,l,m,E)}function im(l,m,E){return Z?Bs(7,1,l,m,E):0}function am(l,m){if(Z)return Bs(8,1,l,m)}function lm(l,m,E){if(Z)return Bs(9,1,l,m,E)}function um(l,m,E,D){if(Z)return Bs(10,1,l,m,E,D)}function dm(l,m,E,D){if(Z)return Bs(11,1,l,m,E,D)}function cm(l,m,E,D){if(Z)return Bs(12,1,l,m,E,D)}function pm(l){if(Z)return Bs(13,1,l)}function hm(l,m){if(Z)return Bs(14,1,l,m)}function mm(l,m,E){if(Z)return Bs(15,1,l,m,E)}var _m,to,y_=()=>{Zn("")},hn=l=>{for(var m="";n()[l>>>0];)m+=_m[n()[l++>>>0]];return m},lh={},uh={},M_={};function Cn(l,m,E={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(D,G,ge={}){var Xe=G.name;if(!D)throw new to(`type "${Xe}" must have a positive integer typeid pointer`);if(uh.hasOwnProperty(D)){if(ge.Tb)return;throw new to(`Cannot register type '${Xe}' twice`)}uh[D]=G,delete M_[D],lh.hasOwnProperty(D)&&(G=lh[D],delete lh[D],G.forEach(nt=>nt()))}(l,m,E)}var fm=(l,m,E)=>{switch(m){case 1:return E?D=>s()[D>>>0]:D=>n()[D>>>0];case 2:return E?D=>o()[D>>>1>>>0]:D=>a()[D>>>1>>>0];case 4:return E?D=>i()[D>>>2>>>0]:D=>u()[D>>>2>>>0];case 8:return E?D=>er[D>>>3]:D=>cn[D>>>3];default:throw new TypeError(`invalid integer width (${m}): ${l}`)}};function b_(l,m,E){E>>>=0,Cn(l>>>=0,{name:m=hn(m>>>0),fromWireType:D=>D,toWireType:function(D,G){if(typeof G!="bigint"&&typeof G!="number")throw G=G===null?"null":(D=typeof G)=="object"||D==="array"||D==="function"?G.toString():""+G,new TypeError(`Cannot convert "${G}" to ${this.name}`);return typeof G=="number"&&(G=BigInt(G)),G},argPackAdvance:so,readValueFromPointer:fm(m,E,m.indexOf("u")==-1),Eb:null})}var so=8;function v_(l,m,E,D){Cn(l>>>=0,{name:m=hn(m>>>0),fromWireType:function(G){return!!G},toWireType:function(G,ge){return ge?E:D},argPackAdvance:so,readValueFromPointer:function(G){return this.fromWireType(n()[G>>>0])},Eb:null})}var dh=[],kn=[];function ch(l){9<(l>>>=0)&&--kn[l+1]==0&&(kn[l]=void 0,dh.push(l))}var Cr=l=>{if(!l)throw new to("Cannot use deleted val. handle = "+l);return kn[l]},zr=l=>{switch(l){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=dh.pop()||kn.length;return kn[m]=l,kn[m+1]=1,m}};function ph(l){return this.fromWireType(u()[l>>>2>>>0])}var x_={name:"emscripten::val",fromWireType:l=>{var m=Cr(l);return ch(l),m},toWireType:(l,m)=>zr(m),argPackAdvance:so,readValueFromPointer:ph,Eb:null};function T_(l){return Cn(l>>>0,x_)}var E_=(l,m)=>{switch(m){case 4:return function(E){return this.fromWireType(p()[E>>>2>>>0])};case 8:return function(E){return this.fromWireType(h()[E>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${l}`)}};function P_(l,m,E){E>>>=0,Cn(l>>>=0,{name:m=hn(m>>>0),fromWireType:D=>D,toWireType:(D,G)=>G,argPackAdvance:so,readValueFromPointer:E_(m,E),Eb:null})}function C_(l,m,E,D,G){if(l>>>=0,E>>>=0,m=hn(m>>>0),G===-1&&(G=4294967295),G=nt=>nt,D===0){var ge=32-8*E;G=nt=>nt<<ge>>>ge}var Xe=m.includes("unsigned")?function(nt,wt){return wt>>>0}:function(nt,wt){return wt};Cn(l,{name:m,fromWireType:G,toWireType:Xe,argPackAdvance:so,readValueFromPointer:fm(m,E,D!==0),Eb:null})}function k_(l,m,E){function D(ge){var Xe=u()[ge>>>2>>>0];return ge=u()[ge+4>>>2>>>0],new G(s().buffer,ge,Xe)}var G=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];Cn(l>>>=0,{name:E=hn(E>>>0),fromWireType:D,argPackAdvance:so,readValueFromPointer:D},{Tb:!0})}function S_(l,m){l>>>=0;var E=(m=hn(m>>>0))==="std::string";Cn(l,{name:m,fromWireType:function(D){var G=u()[D>>>2>>>0],ge=D+4;if(E)for(var Xe=ge,nt=0;nt<=G;++nt){var wt=ge+nt;if(nt==G||n()[wt>>>0]==0){if(Xe=Qs(Xe,wt-Xe),Ct===void 0)var Ct=Xe;else Ct+="\0",Ct+=Xe;Xe=wt+1}}else{for(Ct=Array(G),nt=0;nt<G;++nt)Ct[nt]=String.fromCharCode(n()[ge+nt>>>0]);Ct=Ct.join("")}return _n(D),Ct},toWireType:function(D,G){G instanceof ArrayBuffer&&(G=new Uint8Array(G));var ge=typeof G=="string";if(!(ge||G instanceof Uint8Array||G instanceof Uint8ClampedArray||G instanceof Int8Array))throw new to("Cannot pass non-string to std::string");var Xe=E&&ge?ah(G):G.length,nt=Np(4+Xe+1),wt=nt+4;if(u()[nt>>>2>>>0]=Xe,E&&ge)Aa(G,wt,Xe+1);else if(ge)for(ge=0;ge<Xe;++ge){var Ct=G.charCodeAt(ge);if(255<Ct)throw _n(wt),new to("String has UTF-16 code units that do not fit in 8 bits");n()[wt+ge>>>0]=Ct}else for(ge=0;ge<Xe;++ge)n()[wt+ge>>>0]=G[ge];return D!==null&&D.push(_n,nt),nt},argPackAdvance:so,readValueFromPointer:ph,Eb(D){_n(D)}})}var gm=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,$_=(l,m)=>{for(var E=l>>1,D=E+m/2;!(E>=D)&&a()[E>>>0];)++E;if(32<(E<<=1)-l&&gm)return gm.decode(n().slice(l,E));for(E="",D=0;!(D>=m/2);++D){var G=o()[l+2*D>>>1>>>0];if(G==0)break;E+=String.fromCharCode(G)}return E},I_=(l,m,E)=>{if(E??(E=2147483647),2>E)return 0;var D=m;E=(E-=2)<2*l.length?E/2:l.length;for(var G=0;G<E;++G){var ge=l.charCodeAt(G);o()[m>>>1>>>0]=ge,m+=2}return o()[m>>>1>>>0]=0,m-D},A_=l=>2*l.length,O_=(l,m)=>{for(var E=0,D="";!(E>=m/4);){var G=i()[l+4*E>>>2>>>0];if(G==0)break;++E,65536<=G?(G-=65536,D+=String.fromCharCode(55296|G>>10,56320|1023&G)):D+=String.fromCharCode(G)}return D},F_=(l,m,E)=>{if(m>>>=0,E??(E=2147483647),4>E)return 0;var D=m;E=D+E-4;for(var G=0;G<l.length;++G){var ge=l.charCodeAt(G);if(55296<=ge&&57343>=ge&&(ge=65536+((1023&ge)<<10)|1023&l.charCodeAt(++G)),i()[m>>>2>>>0]=ge,(m+=4)+4>E)break}return i()[m>>>2>>>0]=0,m-D},D_=l=>{for(var m=0,E=0;E<l.length;++E){var D=l.charCodeAt(E);55296<=D&&57343>=D&&++E,m+=4}return m};function L_(l,m,E){if(l>>>=0,m>>>=0,E=hn(E>>>=0),m===2)var D=$_,G=I_,ge=A_,Xe=nt=>a()[nt>>>1>>>0];else m===4&&(D=O_,G=F_,ge=D_,Xe=nt=>u()[nt>>>2>>>0]);Cn(l,{name:E,fromWireType:nt=>{for(var wt,Ct=u()[nt>>>2>>>0],Wt=nt+4,hs=0;hs<=Ct;++hs){var vs=nt+4+hs*m;hs!=Ct&&Xe(vs)!=0||(Wt=D(Wt,vs-Wt),wt===void 0?wt=Wt:(wt+="\0",wt+=Wt),Wt=vs+m)}return _n(nt),wt},toWireType:(nt,wt)=>{if(typeof wt!="string")throw new to(`Cannot pass non-string to C++ string type ${E}`);var Ct=ge(wt),Wt=Np(4+Ct+m);return u()[Wt>>>2>>>0]=Ct/m,G(wt,Wt+4,Ct+m),nt!==null&&nt.push(_n,Wt),Wt},argPackAdvance:so,readValueFromPointer:ph,Eb(nt){_n(nt)}})}function z_(l,m){Cn(l>>>=0,{Ub:!0,name:m=hn(m>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var B_=()=>1;function R_(l){yh(l>>>0,!V,1,!B,131072,!1),qh()}var wm=l=>{if(!zs)try{if(l(),!(0<Bo))try{Z?jp(Ht):ih(Ht)}catch(m){m instanceof rh||m=="unwind"||Le(1,m)}}catch(m){m instanceof rh||m=="unwind"||Le(1,m)}};function hh(l){l>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(i(),l>>>2,l).value.then(Ip),l+=128,Atomics.store(i(),l>>>2,1))}var Ip=()=>{var l=Da();l&&(hh(l),wm(qm))};function N_(l,m){(l>>>=0)==m>>>0?setTimeout(Ip):Z?postMessage({targetThread:l,cmd:"checkMailbox"}):(l=pn[l])&&l.postMessage({cmd:"checkMailbox"})}var mh=[];function j_(l,m,E,D,G){for(m>>>=0,D/=2,mh.length=D,E=G>>>0>>>3,G=0;G<D;G++)mh[G]=er[E+2*G]?er[E+2*G+1]:h()[E+2*G+1>>>0];return(m?sh[m]:Af[l])(...mh)}function U_(l){l>>>=0,Z?postMessage({cmd:"cleanupThread",thread:l}):Hh(pn[l])}function V_(l){}var Ap=(l,m)=>{var E=uh[l];if(E===void 0)throw l=Wm(l),E=hn(l),_n(l),new to(`${m} has unknown type ${E}`);return E},ym=(l,m,E)=>{var D=[];return l=l.toWireType(D,E),D.length&&(u()[m>>>2>>>0]=zr(D)),l};function W_(l,m,E){return m>>>=0,E>>>=0,l=Cr(l>>>0),m=Ap(m,"emval::as"),ym(m,E,l)}function G_(l,m){return m>>>=0,l=Cr(l>>>0),(m=Ap(m,"emval::as")).toWireType(null,l)}var Op=l=>{try{l()}catch(m){Zn(m)}},ro=0,mn=null,Mm=0,Fp=[],bm={},vm={},K_=0,_h=null,H_=[];function xm(l){return function(m){if(!zs){if(ro===0){var E=!1,D=!1;m((G=0)=>{if(!zs&&(Mm=G,E=!0,D)){ro=2,Op(()=>Zm(mn)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),G=!1;try{var ge=function(){var wt=i()[mn+8>>>2>>>0];return wt=Ut[vm[wt]],--Bo,wt()}()}catch(wt){ge=wt,G=!0}var Xe=!1;if(!mn){var nt=_h;nt&&(_h=null,(G?nt.reject:nt.resolve)(ge),Xe=!0)}if(G&&!Xe)throw ge}}),D=!0,E||(ro=1,mn=function(){var G=Np(65548),ge=G+12;u()[G>>>2>>>0]=ge,u()[G+4>>>2>>>0]=ge+65536,ge=Fp[0];var Xe=bm[ge];return Xe===void 0&&(Xe=K_++,bm[ge]=Xe,vm[Xe]=ge),ge=Xe,i()[G+8>>>2>>>0]=ge,G}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),Op(()=>Ym(mn)))}else ro===2?(ro=0,Op(e_),_n(mn),mn=null,H_.forEach(wm)):Zn(`invalid state: ${ro}`);return Mm}}(m=>{l().then(m)})}function q_(l){return l>>>=0,xm(()=>(l=Cr(l)).then(zr))}var Dp=[];function Q_(l,m,E,D){return E>>>=0,D>>>=0,(l=Dp[l>>>0])(null,m=Cr(m>>>0),E,D)}var X_={},Lp=l=>{var m=X_[l];return m===void 0?hn(l):m};function Y_(l,m,E,D,G){return E>>>=0,D>>>=0,G>>>=0,(l=Dp[l>>>0])(m=Cr(m>>>0),m[E=Lp(E)],D,G)}var Tm=()=>typeof globalThis=="object"?globalThis:Function("return this")();function J_(l){return(l>>>=0)==0?zr(Tm()):(l=Lp(l),zr(Tm()[l]))}var Z_=l=>{var m=Dp.length;return Dp.push(l),m},ef=(l,m)=>{for(var E=Array(l),D=0;D<l;++D)E[D]=Ap(u()[m+4*D>>>2>>>0],"parameter "+D);return E},Em=(l,m)=>Object.defineProperty(m,"name",{value:l});function tf(l,m,E){var D=(m=ef(l,m>>>0)).shift();l--;var G=`return function (obj, func, destructorsRef, args) {
`,ge=0,Xe=[];E===0&&Xe.push("obj");for(var nt=["retType"],wt=[D],Ct=0;Ct<l;++Ct)Xe.push("arg"+Ct),nt.push("argType"+Ct),wt.push(m[Ct]),G+=`  var arg${Ct} = argType${Ct}.readValueFromPointer(args${ge?"+"+ge:""});
`,ge+=m[Ct].argPackAdvance;return G+=`  var rv = ${E===1?"new func":"func.call"}(${Xe.join(", ")});
`,D.Ub||(nt.push("emval_returnValue"),wt.push(ym),G+=`  return emval_returnValue(retType, destructorsRef, rv);
`),nt.push(G+`};
`),l=function(Wt){var hs=Function;if(!(hs instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof hs} which is not a function`);var vs=Em(hs.name||"unknownFunctionName",function(){});return vs.prototype=hs.prototype,vs=new vs,(Wt=hs.apply(vs,Wt))instanceof Object?Wt:vs}(nt)(...wt),E=`methodCaller<(${m.map(Wt=>Wt.name).join(", ")}) => ${D.name}>`,Z_(Em(E,l))}function sf(l){return l=Lp(l>>>0),zr(d[l])}function rf(l,m){return m>>>=0,l=Cr(l>>>0),m=Cr(m),zr(l[m])}function nf(l){9<(l>>>=0)&&(kn[l+1]+=1)}function of(){return zr([])}function af(l){l=Cr(l>>>0);for(var m=Array(l.length),E=0;E<l.length;E++)m[E]=l[E];return zr(m)}function lf(l){return zr(Lp(l>>>0))}function uf(){return zr({})}function df(l){for(var m=Cr(l>>>=0);m.length;){var E=m.pop();m.pop()(E)}ch(l)}function cf(l,m,E){m>>>=0,E>>>=0,l=Cr(l>>>0),m=Cr(m),E=Cr(E),l[m]=E}function pf(l,m){return m>>>=0,l=(l=Ap(l>>>0,"_emval_take_value")).readValueFromPointer(m),zr(l)}function hf(l,m){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),m>>>=0,l=new Date(1e3*l),i()[m>>>2>>>0]=l.getUTCSeconds(),i()[m+4>>>2>>>0]=l.getUTCMinutes(),i()[m+8>>>2>>>0]=l.getUTCHours(),i()[m+12>>>2>>>0]=l.getUTCDate(),i()[m+16>>>2>>>0]=l.getUTCMonth(),i()[m+20>>>2>>>0]=l.getUTCFullYear()-1900,i()[m+24>>>2>>>0]=l.getUTCDay(),l=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[m+28>>>2>>>0]=l}var Oa=l=>l%4==0&&(l%100!=0||l%400==0),Pm=[0,31,60,91,121,152,182,213,244,274,305,335],Cm=[0,31,59,90,120,151,181,212,243,273,304,334];function mf(l,m){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),m>>>=0,l=new Date(1e3*l),i()[m>>>2>>>0]=l.getSeconds(),i()[m+4>>>2>>>0]=l.getMinutes(),i()[m+8>>>2>>>0]=l.getHours(),i()[m+12>>>2>>>0]=l.getDate(),i()[m+16>>>2>>>0]=l.getMonth(),i()[m+20>>>2>>>0]=l.getFullYear()-1900,i()[m+24>>>2>>>0]=l.getDay();var E=(Oa(l.getFullYear())?Pm:Cm)[l.getMonth()]+l.getDate()-1|0;i()[m+28>>>2>>>0]=E,i()[m+36>>>2>>>0]=-60*l.getTimezoneOffset(),E=new Date(l.getFullYear(),6,1).getTimezoneOffset();var D=new Date(l.getFullYear(),0,1).getTimezoneOffset();l=0|(E!=D&&l.getTimezoneOffset()==Math.min(D,E)),i()[m+32>>>2>>>0]=l}function _f(l){l>>>=0;var m=new Date(i()[l+20>>>2>>>0]+1900,i()[l+16>>>2>>>0],i()[l+12>>>2>>>0],i()[l+8>>>2>>>0],i()[l+4>>>2>>>0],i()[l>>>2>>>0],0),E=i()[l+32>>>2>>>0],D=m.getTimezoneOffset(),G=new Date(m.getFullYear(),6,1).getTimezoneOffset(),ge=new Date(m.getFullYear(),0,1).getTimezoneOffset(),Xe=Math.min(ge,G);return 0>E?i()[l+32>>>2>>>0]=+(G!=ge&&Xe==D):0<E!=(Xe==D)&&(G=Math.max(ge,G),m.setTime(m.getTime()+6e4*((0<E?Xe:G)-D))),i()[l+24>>>2>>>0]=m.getDay(),E=(Oa(m.getFullYear())?Pm:Cm)[m.getMonth()]+m.getDate()-1|0,i()[l+28>>>2>>>0]=E,i()[l>>>2>>>0]=m.getSeconds(),i()[l+4>>>2>>>0]=m.getMinutes(),i()[l+8>>>2>>>0]=m.getHours(),i()[l+12>>>2>>>0]=m.getDate(),i()[l+16>>>2>>>0]=m.getMonth(),i()[l+20>>>2>>>0]=m.getYear(),l=m.getTime(),BigInt(isNaN(l)?-1:l/1e3)}function km(l,m,E,D,G,ge,Xe){return Z?Bs(16,1,l,m,E,D,G,ge,Xe):-52}function Sm(l,m,E,D,G,ge){if(Z)return Bs(17,1,l,m,E,D,G,ge)}function ff(l,m,E,D){l>>>=0,m>>>=0,E>>>=0,D>>>=0;var G=new Date().getFullYear(),ge=new Date(G,0,1),Xe=new Date(G,6,1);G=ge.getTimezoneOffset();var nt=Xe.getTimezoneOffset(),wt=Math.max(G,nt);u()[l>>>2>>>0]=60*wt,i()[m>>>2>>>0]=+(G!=nt),ge=(l=Ct=>Ct.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(ge),Xe=l(Xe),nt<G?(Aa(ge,E,17),Aa(Xe,D,17)):(Aa(ge,D,17),Aa(Xe,E,17))}var fh=[],$m=(l,m)=>{fh.length=0;for(var E;E=n()[l++>>>0];){var D=E!=105;m+=(D&=E!=112)&&m%8?4:0,fh.push(E==112?u()[m>>>2>>>0]:E==106?er[m>>>3]:E==105?i()[m>>>2>>>0]:h()[m>>>3>>>0]),m+=D?8:4}return fh};function gf(l,m,E){return l>>>=0,m=$m(m>>>0,E>>>0),sh[l](...m)}function wf(l,m,E){return l>>>=0,m=$m(m>>>0,E>>>0),sh[l](...m)}var yf=()=>{},Mf=()=>Date.now();function bf(l,m){return bt(Qs(l>>>0,m>>>0))}var Im,vf=()=>{throw Bo+=1,"unwind"};function xf(){return 4294901760}Im=()=>performance.timeOrigin+performance.now();var Tf=()=>navigator.hardwareConcurrency;function Ef(){return Zn("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Pf(l){l>>>=0;var m=n().length;if(l<=m||4294901760<l)return!1;for(var E=1;4>=E;E*=2){var D=m*(1+.2/E);D=Math.min(D,l+100663296);var G=Math;D=Math.max(l,D);e:{G=(G.min.call(G,4294901760,D+(65536-D%65536)%65536)-Ft.buffer.byteLength+65535)/65536;try{Ft.grow(G),Es();var ge=1;break e}catch{}ge=void 0}if(ge)return!0}return!1}var zp=()=>(Zn("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Fa={},Am=l=>{l.forEach(m=>{var E=zp();E&&(Fa[E]=m)})};function Cf(){var l=Error().stack.toString().split(`
`);return l[0]=="Error"&&l.shift(),Am(l),Fa.Qb=zp(),Fa.fc=l,Fa.Qb}function kf(l,m,E){if(l>>>=0,m>>>=0,Fa.Qb==l)var D=Fa.fc;else(D=Error().stack.toString().split(`
`))[0]=="Error"&&D.shift(),Am(D);for(var G=3;D[G]&&zp()!=l;)++G;for(l=0;l<E&&D[l+G];++l)i()[m+4*l>>>2>>>0]=zp();return l}var gh,wh={},Om=()=>{if(!gh){var l,m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:Fe};for(l in wh)wh[l]===void 0?delete m[l]:m[l]=wh[l];var E=[];for(l in m)E.push(`${l}=${m[l]}`);gh=E}return gh};function Fm(l,m){if(Z)return Bs(18,1,l,m);l>>>=0,m>>>=0;var E=0;return Om().forEach((D,G)=>{var ge=m+E;for(G=u()[l+4*G>>>2>>>0]=ge,ge=0;ge<D.length;++ge)s()[G++>>>0]=D.charCodeAt(ge);s()[G>>>0]=0,E+=D.length+1}),0}function Dm(l,m){if(Z)return Bs(19,1,l,m);l>>>=0,m>>>=0;var E=Om();u()[l>>>2>>>0]=E.length;var D=0;return E.forEach(G=>D+=G.length+1),u()[m>>>2>>>0]=D,0}function Lm(l){return Z?Bs(20,1,l):52}function zm(l,m,E,D){return Z?Bs(21,1,l,m,E,D):52}function Bm(l,m,E,D){return Z?Bs(22,1,l,m,E,D):70}var Sf=[null,[],[]];function Rm(l,m,E,D){if(Z)return Bs(23,1,l,m,E,D);m>>>=0,E>>>=0,D>>>=0;for(var G=0,ge=0;ge<E;ge++){var Xe=u()[m>>>2>>>0],nt=u()[m+4>>>2>>>0];m+=8;for(var wt=0;wt<nt;wt++){var Ct=n()[Xe+wt>>>0],Wt=Sf[l];Ct===0||Ct===10?((l===1?Zt:bt)(em(Wt,0)),Wt.length=0):Wt.push(Ct)}G+=nt}return u()[D>>>2>>>0]=G,0}var Nm=[31,29,31,30,31,30,31,31,30,31,30,31],jm=[31,28,31,30,31,30,31,31,30,31,30,31],$f=(l,m)=>{s().set(l,m>>>0)};function Um(l,m,E,D){function G(He,ls,js){for(He=typeof He=="number"?He.toString():He||"";He.length<ls;)He=js[0]+He;return He}function ge(He,ls){return G(He,ls,"0")}function Xe(He,ls){function js(s_){return 0>s_?-1:0<s_?1:0}var No;return(No=js(He.getFullYear()-ls.getFullYear()))===0&&(No=js(He.getMonth()-ls.getMonth()))===0&&(No=js(He.getDate()-ls.getDate())),No}function nt(He){switch(He.getDay()){case 0:return new Date(He.getFullYear()-1,11,29);case 1:return He;case 2:return new Date(He.getFullYear(),0,3);case 3:return new Date(He.getFullYear(),0,2);case 4:return new Date(He.getFullYear(),0,1);case 5:return new Date(He.getFullYear()-1,11,31);case 6:return new Date(He.getFullYear()-1,11,30)}}function wt(He){var ls=He.Cb;for(He=new Date(new Date(He.Db+1900,0,1).getTime());0<ls;){var js=He.getMonth(),No=(Oa(He.getFullYear())?Nm:jm)[js];if(!(ls>No-He.getDate())){He.setDate(He.getDate()+ls);break}ls-=No-He.getDate()+1,He.setDate(1),11>js?He.setMonth(js+1):(He.setMonth(0),He.setFullYear(He.getFullYear()+1))}return js=new Date(He.getFullYear()+1,0,4),ls=nt(new Date(He.getFullYear(),0,4)),js=nt(js),0>=Xe(ls,He)?0>=Xe(js,He)?He.getFullYear()+1:He.getFullYear():He.getFullYear()-1}l>>>=0,m>>>=0,E>>>=0,D>>>=0;var Ct=u()[D+40>>>2>>>0];for(var Wt in D={lc:i()[D>>>2>>>0],kc:i()[D+4>>>2>>>0],Ib:i()[D+8>>>2>>>0],Mb:i()[D+12>>>2>>>0],Jb:i()[D+16>>>2>>>0],Db:i()[D+20>>>2>>>0],vb:i()[D+24>>>2>>>0],Cb:i()[D+28>>>2>>>0],sc:i()[D+32>>>2>>>0],jc:i()[D+36>>>2>>>0],mc:Ct?Qs(Ct):""},E=Qs(E),Ct={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})E=E.replace(new RegExp(Wt,"g"),Ct[Wt]);var hs="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),vs="January February March April May June July August September October November December".split(" ");for(Wt in Ct={"%a":He=>hs[He.vb].substring(0,3),"%A":He=>hs[He.vb],"%b":He=>vs[He.Jb].substring(0,3),"%B":He=>vs[He.Jb],"%C":He=>ge((He.Db+1900)/100|0,2),"%d":He=>ge(He.Mb,2),"%e":He=>G(He.Mb,2," "),"%g":He=>wt(He).toString().substring(2),"%G":wt,"%H":He=>ge(He.Ib,2),"%I":He=>((He=He.Ib)==0?He=12:12<He&&(He-=12),ge(He,2)),"%j":He=>{for(var ls=0,js=0;js<=He.Jb-1;ls+=(Oa(He.Db+1900)?Nm:jm)[js++]);return ge(He.Mb+ls,3)},"%m":He=>ge(He.Jb+1,2),"%M":He=>ge(He.kc,2),"%n":()=>`
`,"%p":He=>0<=He.Ib&&12>He.Ib?"AM":"PM","%S":He=>ge(He.lc,2),"%t":()=>"	","%u":He=>He.vb||7,"%U":He=>ge(Math.floor((He.Cb+7-He.vb)/7),2),"%V":He=>{var ls=Math.floor((He.Cb+7-(He.vb+6)%7)/7);if(2>=(He.vb+371-He.Cb-2)%7&&ls++,ls)ls==53&&((js=(He.vb+371-He.Cb)%7)==4||js==3&&Oa(He.Db)||(ls=1));else{ls=52;var js=(He.vb+7-He.Cb-1)%7;(js==4||js==5&&Oa(He.Db%400-1))&&ls++}return ge(ls,2)},"%w":He=>He.vb,"%W":He=>ge(Math.floor((He.Cb+7-(He.vb+6)%7)/7),2),"%y":He=>(He.Db+1900).toString().substring(2),"%Y":He=>He.Db+1900,"%z":He=>{var ls=0<=(He=He.jc);return He=Math.abs(He)/60,(ls?"+":"-")+("0000"+(He/60*100+He%60)).slice(-4)},"%Z":He=>He.mc,"%%":()=>"%"},E=E.replace(/%%/g,"\0\0"),Ct)E.includes(Wt)&&(E=E.replace(new RegExp(Wt,"g"),Ct[Wt](D)));return Wt=function(He){var ls=Array(ah(He)+1);return rm(He,ls,0,ls.length),ls}(E=E.replace(/\0\0/g,"%")),Wt.length>m?0:($f(Wt,l),Wt.length-1)}function If(l,m,E,D){return Um(l>>>0,m>>>0,E>>>0,D>>>0)}Z||function(){for(var l=d.numThreads-1;l--;)Xh();Jn.unshift(()=>{Fc++,function(m){Z?m():Promise.all(eo.map(Qh)).then(m)}(()=>Bh())})}();for(var Vm=Array(256),Bp=0;256>Bp;++Bp)Vm[Bp]=String.fromCharCode(Bp);_m=Vm,to=d.BindingError=class extends Error{constructor(l){super(l),this.name="BindingError"}},d.InternalError=class extends Error{constructor(l){super(l),this.name="InternalError"}},kn.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>kn.length/2-5-dh.length;var Af=[oh,Gh,Yh,tm,sm,nm,om,im,am,lm,um,dm,cm,pm,hm,mm,km,Sm,Fm,Dm,Lm,zm,Bm,Rm],Ut=function(){function l(E,D){return Ut=E.exports,Ut=function(){var G=Ut,ge={};for(let[Xe,nt]of Object.entries(G))ge[Xe]=typeof nt=="function"?(...wt)=>{Fp.push(Xe);try{return nt(...wt)}finally{zs||(Fp.pop(),mn&&ro===1&&Fp.length===0&&(ro=0,Bo+=1,Op(Jm),typeof Fibers<"u"&&Fibers.tc()))}}:nt;return ge}(),Ut=function(){var G=Ut,ge=nt=>wt=>nt(wt)>>>0,Xe=nt=>()=>nt()>>>0;return(G=Object.assign({},G)).Da=ge(G.Da),G.gb=Xe(G.gb),G.ib=ge(G.ib),G.emscripten_main_runtime_thread_id=Xe(G.emscripten_main_runtime_thread_id),G.tb=ge(G.tb),G.ub=Xe(G.ub),G}(),Kh.push(Ut.jb),Oc.unshift(Ut.Ca),bs=D,Bh(),Ut}var m=Vh();if(Fc++,d.instantiateWasm)try{return d.instantiateWasm(m,l)}catch(E){bt(`Module.instantiateWasm callback failed with error: ${E}`),C(E)}return th||(th=d.locateFile?Rh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":d.locateFile?d.locateFile("ort-wasm-simd-threaded.jsep.wasm",Ye):Ye+"ort-wasm-simd-threaded.jsep.wasm":new URL(r("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),r.b).href),function(E,D){var G=th;return at||typeof WebAssembly.instantiateStreaming!="function"||Rh(G)||Nh(G)||typeof fetch!="function"?Uh(G,E,D):fetch(G,{credentials:"same-origin"}).then(ge=>WebAssembly.instantiateStreaming(ge,E).then(D,function(Xe){return bt(`wasm streaming compile failed: ${Xe}`),bt("falling back to ArrayBuffer instantiation"),Uh(G,E,D)}))}(m,function(E){l(E.instance,E.module)}).catch(C),{}}(),Wm=l=>(Wm=Ut.Da)(l),Gm=()=>(Gm=Ut.Ea)();d._OrtInit=(l,m)=>(d._OrtInit=Ut.Fa)(l,m),d._OrtGetLastError=(l,m)=>(d._OrtGetLastError=Ut.Ga)(l,m),d._OrtCreateSessionOptions=(l,m,E,D,G,ge,Xe,nt,wt,Ct)=>(d._OrtCreateSessionOptions=Ut.Ha)(l,m,E,D,G,ge,Xe,nt,wt,Ct),d._OrtAppendExecutionProvider=(l,m)=>(d._OrtAppendExecutionProvider=Ut.Ia)(l,m),d._OrtAddFreeDimensionOverride=(l,m,E)=>(d._OrtAddFreeDimensionOverride=Ut.Ja)(l,m,E),d._OrtAddSessionConfigEntry=(l,m,E)=>(d._OrtAddSessionConfigEntry=Ut.Ka)(l,m,E),d._OrtReleaseSessionOptions=l=>(d._OrtReleaseSessionOptions=Ut.La)(l),d._OrtCreateSession=(l,m,E)=>(d._OrtCreateSession=Ut.Ma)(l,m,E),d._OrtReleaseSession=l=>(d._OrtReleaseSession=Ut.Na)(l),d._OrtGetInputOutputCount=(l,m,E)=>(d._OrtGetInputOutputCount=Ut.Oa)(l,m,E),d._OrtGetInputName=(l,m)=>(d._OrtGetInputName=Ut.Pa)(l,m),d._OrtGetOutputName=(l,m)=>(d._OrtGetOutputName=Ut.Qa)(l,m),d._OrtFree=l=>(d._OrtFree=Ut.Ra)(l),d._OrtCreateTensor=(l,m,E,D,G,ge)=>(d._OrtCreateTensor=Ut.Sa)(l,m,E,D,G,ge),d._OrtGetTensorData=(l,m,E,D,G)=>(d._OrtGetTensorData=Ut.Ta)(l,m,E,D,G),d._OrtReleaseTensor=l=>(d._OrtReleaseTensor=Ut.Ua)(l),d._OrtCreateRunOptions=(l,m,E,D)=>(d._OrtCreateRunOptions=Ut.Va)(l,m,E,D),d._OrtAddRunConfigEntry=(l,m,E)=>(d._OrtAddRunConfigEntry=Ut.Wa)(l,m,E),d._OrtReleaseRunOptions=l=>(d._OrtReleaseRunOptions=Ut.Xa)(l),d._OrtCreateBinding=l=>(d._OrtCreateBinding=Ut.Ya)(l),d._OrtBindInput=(l,m,E)=>(d._OrtBindInput=Ut.Za)(l,m,E),d._OrtBindOutput=(l,m,E,D)=>(d._OrtBindOutput=Ut._a)(l,m,E,D),d._OrtClearBoundOutputs=l=>(d._OrtClearBoundOutputs=Ut.$a)(l),d._OrtReleaseBinding=l=>(d._OrtReleaseBinding=Ut.ab)(l),d._OrtRunWithBinding=(l,m,E,D,G)=>(d._OrtRunWithBinding=Ut.bb)(l,m,E,D,G),d._OrtRun=(l,m,E,D,G,ge,Xe,nt)=>(d._OrtRun=Ut.cb)(l,m,E,D,G,ge,Xe,nt),d._OrtEndProfiling=l=>(d._OrtEndProfiling=Ut.db)(l),d._JsepOutput=(l,m,E)=>(d._JsepOutput=Ut.eb)(l,m,E),d._JsepGetNodeName=l=>(d._JsepGetNodeName=Ut.fb)(l);var Rp,Da=()=>(Da=Ut.gb)(),_n=d._free=l=>(_n=d._free=Ut.hb)(l),Np=d._malloc=l=>(Np=d._malloc=Ut.ib)(l),yh=(l,m,E,D,G,ge)=>(yh=Ut.lb)(l,m,E,D,G,ge),Km=()=>(Km=Ut.mb)(),Hm=(l,m,E,D,G)=>(Hm=Ut.nb)(l,m,E,D,G),Mh=l=>(Mh=Ut.ob)(l),jp=l=>(jp=Ut.pb)(l),qm=()=>(qm=Ut.qb)(),Qm=(l,m)=>(Qm=Ut.rb)(l,m),Up=l=>(Up=Ut.sb)(l),bh=l=>(bh=Ut.tb)(l),vh=()=>(vh=Ut.ub)(),Xm=d.dynCall_ii=(l,m)=>(Xm=d.dynCall_ii=Ut.wb)(l,m),Ym=l=>(Ym=Ut.xb)(l),Jm=()=>(Jm=Ut.yb)(),Zm=l=>(Zm=Ut.zb)(l),e_=()=>(e_=Ut.Ab)();function t_(){0<Fc||(Z?(k(d),Z||$p(Oc),startWorker(d)):($p(Jn),0<Fc||Rp||(Rp=!0,d.calledRun=!0,zs||(Z||$p(Oc),k(d),Z||$p(Zp)))))}return d.___start_em_js=929301,d.___stop_em_js=929547,d.stackSave=()=>vh(),d.stackRestore=l=>Up(l),d.stackAlloc=l=>bh(l),d.setValue=function(l,m,E="i8"){switch(E.endsWith("*")&&(E="*"),E){case"i1":case"i8":s()[l>>>0]=m;break;case"i16":o()[l>>>1>>>0]=m;break;case"i32":i()[l>>>2>>>0]=m;break;case"i64":er[l>>>3]=BigInt(m);break;case"float":p()[l>>>2>>>0]=m;break;case"double":h()[l>>>3>>>0]=m;break;case"*":u()[l>>>2>>>0]=m;break;default:Zn(`invalid type for setValue: ${E}`)}},d.getValue=function(l,m="i8"){switch(m.endsWith("*")&&(m="*"),m){case"i1":case"i8":return s()[l>>>0];case"i16":return o()[l>>>1>>>0];case"i32":return i()[l>>>2>>>0];case"i64":return er[l>>>3];case"float":return p()[l>>>2>>>0];case"double":return h()[l>>>3>>>0];case"*":return u()[l>>>2>>>0];default:Zn(`invalid type for getValue: ${m}`)}},d.UTF8ToString=Qs,d.stringToUTF8=Aa,d.lengthBytesUTF8=ah,Dc=function l(){Rp||t_(),Rp||(Dc=l)},t_(),d.PTR_SIZE=4,z}),Ds=Cs,((e=globalThis.self)==null?void 0:e.name)==="em-pthread"&&Cs()}),kr,Qr,Us,Tr,Nt,Xr,Sr,$r,Yr,dr,Jr,Ir,Br,Rr=g(()=>{Je(),kr=typeof location>"u"?void 0:location.origin,Qr=()=>{var e;return(e=import.meta.url)!=null&&e.startsWith("file:")?new URL(new URL(r("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),r.b).href,kr).href:import.meta.url},Us=Qr(),Tr=()=>{if(Us&&!Us.startsWith("blob:"))return Us.substring(0,Us.lastIndexOf("/")+1)},Nt=(e,t)=>{try{let s=t??Us;return(s?new URL(e,s):new URL(e)).origin===kr}catch{return!1}},Xr=(e,t)=>{let s=t??Us;try{return(s?new URL(e,s):new URL(e)).href}catch{return}},Sr=(e,t)=>`${t??"./"}${e}`,$r=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Yr=async e=>(await import(e)).default,dr=(It(),y(ut)).default,Jr=async()=>{if(!Us)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Nt(Us))return[void 0,dr()];let e=await $r(Us);return[e,dr(e)]},Ir=(sr(),y(os)).default,Br=async(e,t,s)=>{if(!e&&!t&&Ir&&Us&&Nt(Us))return[void 0,Ir];{let n="ort-wasm-simd-threaded.jsep.mjs",o=e??Xr(n,t),a=s&&o&&!Nt(o,t),i=a?await $r(o):o??Sr(n,t);return[a?i:void 0,await Yr(i)]}}}),ar,ot,Tt,Dt,Vs,Nr,Ar,Ms,lr=g(()=>{Rr(),ot=!1,Tt=!1,Dt=!1,Vs=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Nr=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ar=async e=>{if(ot)return Promise.resolve();if(Tt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Dt)throw new Error("previous call to 'initializeWebAssembly()' failed.");Tt=!0;let t=e.initTimeout,s=e.numThreads;if(!Nr())throw new Error("WebAssembly SIMD is not supported in the current environment.");let n=Vs();s>1&&!n&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+s+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=s=1);let o=e.wasmPaths,a=typeof o=="string"?o:void 0,i=o==null?void 0:o.mjs,u=(i==null?void 0:i.href)??i,p=o==null?void 0:o.wasm,h=(p==null?void 0:p.href)??p,k=e.wasmBinary,[C,d]=await Br(u,a,s>1),z=!1,B=[];if(t>0&&B.push(new Promise(V=>{setTimeout(()=>{z=!0,V()},t)})),B.push(new Promise((V,Z)=>{let ee={numThreads:s};if(k)ee.wasmBinary=k;else if(h||a)ee.locateFile=Y=>h??a+Y;else if(u&&u.indexOf("blob:")!==0)ee.locateFile=Y=>new URL(Y,u).href;else if(C){let Y=Tr();Y&&(ee.locateFile=he=>Y+he)}d(ee).then(Y=>{Tt=!1,ot=!0,ar=Y,V(),C&&URL.revokeObjectURL(C)},Y=>{Tt=!1,Dt=!0,Z(Y)})})),await Promise.race(B),z)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ms=()=>{if(ot&&ar)return ar;throw new Error("WebAssembly is not initialized yet.")}}),Os,Er,es,fn=g(()=>{lr(),Os=(e,t)=>{let s=Ms(),n=s.lengthBytesUTF8(e)+1,o=s._malloc(n);return s.stringToUTF8(e,o,n),t.push(o),o},Er=(e,t,s,n)=>{if(typeof e=="object"&&e!==null){if(s.has(e))throw new Error("Circular reference in options");s.add(e)}Object.entries(e).forEach(([o,a])=>{let i=t?t+o:o;if(typeof a=="object")Er(a,i+".",s,n);else if(typeof a=="string"||typeof a=="number")n(i,a.toString());else if(typeof a=="boolean")n(i,a?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof a}`)})},es=e=>{let t=Ms(),s=t.stackSave();try{let n=t.PTR_SIZE,o=t.stackAlloc(2*n);t._OrtGetLastError(o,o+n);let a=Number(t.getValue(o,n===4?"i32":"i64")),i=t.getValue(o+n,"*"),u=i?t.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${a}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(s)}}}),jr,no=g(()=>{lr(),fn(),jr=e=>{let t=Ms(),s=0,n=[],o=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)o.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)o.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(o.terminate=!1);let a=0;return(e==null?void 0:e.tag)!==void 0&&(a=Os(e.tag,n)),s=t._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,a),s===0&&es("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&Er(e.extra,"",new WeakSet,(i,u)=>{let p=Os(i,n),h=Os(u,n);t._OrtAddRunConfigEntry(s,p,h)!==0&&es(`Can't set a run config entry: ${i} - ${u}.`)}),[s,n]}catch(a){throw s!==0&&t._OrtReleaseRunOptions(s),n.forEach(i=>t._free(i)),a}}}),In,An,On,Ur,Fn,oo=g(()=>{lr(),fn(),In=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},An=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},On=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(s=>(typeof s=="string"?s:s.name)==="webgpu")&&(e.enableMemPattern=!1)},Ur=(e,t,s)=>{for(let n of t){let o=typeof n=="string"?n:n.name;switch(o){case"webnn":if(o="WEBNN",typeof n!="string"){let i=n==null?void 0:n.deviceType;if(i){let u=Os("deviceType",s),p=Os(i,s);Ms()._OrtAddSessionConfigEntry(e,u,p)!==0&&es(`Can't set a session config entry: 'deviceType' - ${i}.`)}}break;case"webgpu":if(o="JS",typeof n!="string"){let i=n;if(i!=null&&i.preferredLayout){if(i.preferredLayout!=="NCHW"&&i.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);let u=Os("preferredLayout",s),p=Os(i.preferredLayout,s);Ms()._OrtAddSessionConfigEntry(e,u,p)!==0&&es(`Can't set a session config entry: 'preferredLayout' - ${i.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let a=Os(o,s);Ms()._OrtAppendExecutionProvider(e,a)!==0&&es(`Can't append execution provider: ${o}.`)}},Fn=e=>{let t=Ms(),s=0,n=[],o=e||{};On(o);try{let a=In(o.graphOptimizationLevel??"all"),i=An(o.executionMode??"sequential"),u=typeof o.logId=="string"?Os(o.logId,n):0,p=o.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=o.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let k=typeof o.optimizedModelFilePath=="string"?Os(o.optimizedModelFilePath,n):0;if(s=t._OrtCreateSessionOptions(a,!!o.enableCpuMemArena,!!o.enableMemPattern,i,!!o.enableProfiling,0,u,p,h,k),s===0&&es("Can't create session options."),o.executionProviders&&Ur(s,o.executionProviders,n),o.enableGraphCapture!==void 0){if(typeof o.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);let C=Os("enableGraphCapture",n),d=Os(o.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(s,C,d)!==0&&es(`Can't set a session config entry: 'enableGraphCapture' - ${o.enableGraphCapture}.`)}if(o.freeDimensionOverrides)for(let[C,d]of Object.entries(o.freeDimensionOverrides)){if(typeof C!="string")throw new Error(`free dimension override name must be a string: ${C}`);if(typeof d!="number"||!Number.isInteger(d)||d<0)throw new Error(`free dimension override value must be a non-negative integer: ${d}`);let z=Os(C,n);t._OrtAddFreeDimensionOverride(s,z,d)!==0&&es(`Can't set a free dimension override: ${C} - ${d}.`)}return o.extra!==void 0&&Er(o.extra,"",new WeakSet,(C,d)=>{let z=Os(C,n),B=Os(d,n);t._OrtAddSessionConfigEntry(s,z,B)!==0&&es(`Can't set a session config entry: ${C} - ${d}.`)}),[s,n]}catch(a){throw s!==0&&t._OrtReleaseSessionOptions(s)!==0&&es("Can't release session options."),n.forEach(i=>t._free(i)),a}}}),Vr,mr,ur,gn,Zr,wn,yn,Mn,zt=g(()=>{Vr=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},mr=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},ur=(e,t)=>{let s=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t=="number"?t:t.reduce((o,a)=>o*a,1);return s>0?Math.ceil(n*s):void 0},gn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Zr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},wn=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",yn=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Mn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),bn,Dn=g(()=>{Je(),bn=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let s=t.headers.get("Content-Length"),n=s?parseInt(s,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let o=t.body.getReader(),a;try{a=new ArrayBuffer(n)}catch(u){if(u instanceof RangeError){let p=Math.ceil(n/65536);a=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw u}let i=0;for(;;){let{done:u,value:p}=await o.read();if(u)break;let h=p.byteLength;new Uint8Array(a,i,h).set(p),i+=h}return new Uint8Array(a,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Ln,zn,Wr,Bn,vn,Rn,as,Ee=g(()=>{zt(),Ln=["V","I","W","E","F"],zn=(e,t)=>{console.log(`[${Ln[e]},${new Date().toISOString()}]${t}`)},vn=(e,t)=>{Wr=e,Bn=t},Rn=(e,t)=>{let s=Zr(e),n=Zr(Wr);s>=n&&zn(s,typeof t=="function"?t():t)},as=(...e)=>{Bn&&Rn(...e)}}),P,Q=g(()=>{zt(),P=(e,t)=>new(gn(t))(e)}),ue=g(()=>{}),be,Se,Qe,pt,gt,_t,xt,Kt,ms,us=g(()=>{Ee(),ue(),be=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Se=[],Qe=e=>Math.ceil(Number(e)/16)*16,pt=e=>{for(let t=0;t<Se.length;t++){let s=Se[t];if(e<=s)return s}return Math.ceil(e/16)*16},gt=1,_t=()=>gt++,xt=async(e,t,s,n)=>{let o=Qe(s),a=e.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(t,0,a,0,o),e.flush(),await a.mapAsync(GPUMapMode.READ);let u=a.getMappedRange();if(n){let p=n();return p.set(new Uint8Array(u,0,s)),p}else return new Uint8Array(u.slice(0,s))}finally{a.destroy()}},Kt=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of be)Se.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let s=t.buffer,n=t.byteOffset,o=t.byteLength,a=Qe(o),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(Number(i.originalSize)!==o)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${o}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),p=u.getMappedRange();new Uint8Array(p).set(new Uint8Array(s,n,o)),u.unmap();let h=this.backend.device.createCommandEncoder();h.copyBufferToBuffer(u,0,i.gpuData.buffer,0,a),this.backend.device.queue.submit([h.finish()]),u.destroy(),as("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,t){let s=this.storageCache.get(e);if(!s)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(t);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(s.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let o=Qe(s.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(s.gpuData.buffer,0,n.gpuData.buffer,0,o)}registerExternalBuffer(e,t,s){let n;if(s){if(n=s[0],e===s[1])return as("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else n=_t();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),as("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),as("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let s=pt(e),n,o=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(o||a){let u=(o?this.freeBuffers:this.freeUniformBuffers).get(s);u?u.length>0?n=u.pop():n=this.backend.device.createBuffer({size:s,usage:t}):n=this.backend.device.createBuffer({size:s,usage:t})}else n=this.backend.device.createBuffer({size:s,usage:t});let i={id:_t(),type:0,buffer:n};return this.storageCache.set(i.id,{gpuData:i,originalSize:Number(e)}),as("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`),i}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=typeof e=="bigint"?Number(e):e,s=this.storageCache.get(t);if(!s){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return as("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${s.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(s.gpuData.buffer),s.originalSize}async download(e,t){let s=this.storageCache.get(Number(e));if(!s)throw new Error("data does not exist");await xt(this.backend,s.gpuData.buffer,s.originalSize,t)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=be.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let s=this.freeBuffers.get(e.size)||[];t===void 0||s.length>=t?e.destroy():s.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let s=this.freeUniformBuffers.get(e.size)||[];t===void 0||s.length>=t?e.destroy():s.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(s=>{s.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(as("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(s=>{s.gpuData.buffer.destroy()}),this.storageCache=new Map)}},ms=(...e)=>new Kt(...e)}),Fs,Bt,rs=g(()=>{Fs=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Bt=e=>new Fs(e)}),rr,Ws,ze,Js,Or,ks,Xs,Ot=g(()=>{rr=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Ws=class{static calcShape(e,t,s=!1){let n=e.length,o=t.length;if(n===0)return t;if(o===0)return e;let a=Math.max(e.length,t.length),i=new Array(a);if(s){if(n<2||o<2)return;let u=rr.calcMatMulShape([e[n-2],e[n-1]],[t[o-2],t[o-1]]);if(u===void 0)return;[i[a-2],i[a-1]]=u}for(let u=s?3:1;u<=a;u++){let p=n-u<0?1:e[n-u],h=o-u<0?1:t[o-u];if(p!==h&&p>1&&h>1)return;let k=Math.max(p,h);if(p&&h)i[a-u]=Math.max(p,h);else{if(k>1)return;i[a-u]=0}}return i}static isValidBroadcast(e,t){let s=e.length,n=t.length;if(s>n)return!1;for(let o=1;o<=s;o++)if(e[s-o]!==1&&e[s-o]!==t[n-o])return!1;return!0}},ze=class Wp{static size(t){return Wp.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,s=4){let n=t.length;if(n===0)return[];let o=new Array(n),a=n-1;for(;a>=0;){if(t[a]%s===0){o[a]=t[a]/s;break}if(s%t[a]!==0)throw new Error("cannot convert shape");o[a]=1,s/=t[a],a--}for(a--;a>=0;a--)o[a]=t[a];return o}static sizeFromDimension(t,s){if(s<0||s>t.length)throw new Error(`invalid dimension of ${s} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Wp.getSizeFromDimensionRange(t,s,t.length)}static sizeToDimension(t,s){if(s<0||s>t.length)throw new Error(`invalid dimension of ${s} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Wp.getSizeFromDimensionRange(t,0,s)}static getSizeFromDimensionRange(t,s,n){let o=1;for(let a=s;a<n;a++){if(t[a]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=Number(t[a])}return o}static computeStrides(t){let s=t.length;if(s===0)return[];if(s===1)return[1];let n=new Array(s);n[s-1]=1,n[s-2]=t[s-1];for(let o=s-3;o>=0;--o)n[o]=n[o+1]*t[o+1];return n}static normalizeAxis(t,s){if(t<-s&&t>=s)throw new Error("unsupported axis for this operation.");return t<0?t+s:t}static normalizeAxes(t,s){return t.map(n=>this.normalizeAxis(n,s??t.length))}static sortBasedOnPerm(t,s){return s?s.map(n=>t[n]):t.slice().reverse()}static padShape(t,s){let n=t.length;return t.map((o,a)=>o+s[a]+s[a+n])}static areEqual(t,s){return t.length!==s.length?!1:t.every((n,o)=>n===s[o])}},Js=class Lc{static adjustPoolAttributes(t,s,n,o,a,i){if(!t&&n.length!==s.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let u=0;u<s.length-2;u++)u>=n.length?n.push(s[u+2]):n[u]=s[u+2];for(let u=0;u<n.length;u++)if(u<o.length){if(o[u]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let u=0;u<n.length;u++)if(u<a.length){if(a[u]<0)throw new Error("dilations should be greater than or equal to 1")}else a.push(1);for(let u=0;u<n.length*2;u++)if(u<i.length){if(i[u]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let u=0;u<n.length;u++){if(n[u]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[u]>=n[u]||i[u+n.length]>=n[u])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,s,n,o,a,i,u){if(u){if(a.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)Lc.adjustPadAndReturnShape(t[p+(i?1:2)],s[p],n[p],o[p],a,p,p+t.length-2,u)}}static computePoolOutputShape(t,s,n,o,a,i,u){if(s.length<=0)throw new Error("input shape must be of size greater than 0");let p=[s[0],s[1]];return Lc.computeShapeHelper(t,s,p,n,o,a,i,u),p}static computeConvOutputShape(t,s,n,o,a,i,u){if(t.length<=0||s.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],s[0]];return Lc.computeShapeHelper(!1,t,p,n,o,a,i,u),p}static computeShapeHelper(t,s,n,o,a,i,u,p){if(t)for(let h=0;h<s.length-2;h++)n.push(1);else for(let h=0;h<s.length-2;h++)n.push(Lc.adjustPadAndReturnShape(s[h+2],o[h],a[h],i[h],u,h,h+s.length-2,p))}static adjustPadAndReturnShape(t,s,n,o,a,i,u,p){let h=n*(o-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return a[i]=0,a[u]=0,Math.floor((t-h)/s+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let k=((t+s-1)/s-1)*s+o-t;return a[i]=Math.floor(p==="SAME_LOWER"?(k+1)/2:k/2),a[u]=k-a[i],Math.floor((t+k-o)/s+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+a[i]+a[u]-h)/s+1)}},Or=class{static getShapeOfGemmResult(e,t,s,n,o){if(e.length!==2||s.length!==2)throw new Error("shape need to be of size 2");let a,i,u;t?(a=e[1],i=e[0]):(a=e[0],i=e[1]);let p=-1;if(n?(u=s[0],p=1):(u=s[1],p=0),s[p]!==i)throw new Error("dimension mismatch");if(a<=0||u<=0||i<=0)throw new Error("invalid shape specified");if(o&&!Ws.isValidBroadcast(o,[a,u]))throw new Error("gemm: invalid bias shape for broadcast");return[a,u,i]}},ks=-34028234663852886e22,Xs=34028234663852886e22}),or,_r,_s,Ss,yt,qt,Ls,$s,Gs,$t,en,qe,At,La,jo,za,Ba,Yt=g(()=>{zt(),Ot(),or=64,_r=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},_s=(e,t=1)=>{let s=_r(e,t);return typeof s=="string"?s:s[0]},Ss=(e,t=1)=>{let s=_r(e,t);return typeof s=="string"?s:s[1]},yt=(...e)=>{let t=[];return e.forEach(s=>{s.length!==0&&t.push({type:12,data:s},{type:12,data:ze.computeStrides(s)})}),t},qt=e=>e%4===0?4:e%2===0?2:1,Ls=(e="f32",t,s="0")=>!t||t===1?`${e}(${s})`:`vec${t}<${e}>(${s})`,$s=(e,t,s)=>e==="f32"?s:t===1?`f32(${s})`:`vec${t}<f32>(${s})`,Gs=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,$t=(e,t,s,n)=>e.startsWith("uniforms.")&&s>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:s>1?`${e}[${t}]`:e,en=(e,t,s,n,o)=>{let a=typeof s=="number",i=a?s:s.length,u=[...new Array(i).keys()],p=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,h=_r(t,o),k=typeof h=="string"?h:h[1],C=typeof h=="string"?h:h[0],d={indices:p,value:k,storage:C,tensor:t},z=it=>typeof it=="string"?it:`${it}u`,B={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},V=a?"uniforms.":"",Z=`${V}${e}_shape`,ee=`${V}${e}_strides`,Y="";for(let it=0;it<i-1;it++)Y+=`
    let dim${it} = current / ${$t(ee,it,i)};
    let rest${it} = current % ${$t(ee,it,i)};
    indices[${it}] = dim${it};
    current = rest${it};
    `;Y+=`indices[${i-1}] = current;`;let he=i<2?"":`
  fn o2i_${e}(offset: u32) -> ${d.indices} {
    var indices: ${d.indices};
    var current = offset;
    ${Y}
    return indices;
  }`,pe=it=>(B.offsetToIndices=!0,i<2?it:`o2i_${e}(${it})`),Me=[];if(i>=2)for(let it=i-1;it>=0;it--)Me.push(`${$t(ee,it,i)} * (indices[${it}])`);let Fe=i<2?"":`
  fn i2o_${e}(indices: ${d.indices}) -> u32 {
    return ${Me.join("+")};
  }`,Le=it=>(B.indicesToOffset=!0,i<2?it:`i2o_${e}(${it})`),Ye=(...it)=>i===0?"0u":`${d.indices}(${it.map(z).join(",")})`,at=(it,Pt)=>i<2?`${it}`:`${$t(it,Pt,i)}`,Et=(it,Pt,ps)=>i<2?`${it}=${ps};`:`${$t(it,Pt,i)}=${ps};`,Xt={},Zt=(it,Pt)=>{B.broadcastedIndicesToOffset=!0;let ps=`${Pt.name}broadcastedIndicesTo${e}Offset`;if(ps in Xt)return`${ps}(${it})`;let Ns=[];for(let xr=i-1;xr>=0;xr--){let er=Pt.indicesGet("outputIndices",xr+Pt.rank-i);Ns.push(`${at(ee,xr)} * (${er} % ${at(Z,xr)})`)}return Xt[ps]=`fn ${ps}(outputIndices: ${Pt.type.indices}) -> u32 {
             return ${Ns.length>0?Ns.join("+"):"0u"};
           }`,`${ps}(${it})`},bt=(it,Pt)=>(()=>{if(d.storage===d.value)return`${e}[${it}]=${Pt};`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`${e}[${it}]=vec2<u32>(u32(${Pt}), select(0u, 0xFFFFFFFFu, ${Pt} < 0));`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`${e}[${it}]=vec2<u32>(u32(${Pt}), 0u);`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`${e}[${it}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Pt}));`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),ss=it=>(()=>{if(d.storage===d.value)return`${e}[${it}]`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`i32(${e}[${it}].x)`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`u32(${e}[${it}].x)`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${it}] & 0xFFu), bool(${e}[${it}] & 0xFF00u), bool(${e}[${it}] & 0xFF0000u), bool(${e}[${it}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),St=i<2?"":`
  fn get_${e}ByIndices(indices: ${d.indices}) -> ${k} {
    return ${ss(`i2o_${e}(indices)`)};
  }`,Ft=i<2?"":(()=>{let it=u.map(ps=>`d${ps}: u32`).join(", "),Pt=u.map(ps=>`d${ps}`).join(", ");return`
  fn get_${e}(${it}) -> ${k} {
    return get_${e}ByIndices(${Ye(Pt)});
  }`})(),bs=(...it)=>{if(it.length!==i)throw new Error(`indices length must be ${i}`);let Pt=it.map(z).join(",");return i===0?ss("0u"):i===1?ss(Pt[0]):(B.get=!0,B.getByIndices=!0,B.indicesToOffset=!0,`get_${e}(${Pt})`)},Ht=it=>i<2?ss(it):(B.getByIndices=!0,B.indicesToOffset=!0,`get_${e}ByIndices(${it})`),Rt=i<2?"":`
  fn set_${e}ByIndices(indices: ${d.indices}, value: ${k}) {
    ${bt(`i2o_${e}(indices)`,"value")}
  }`,fs=i<2?"":(()=>{let it=u.map(ps=>`d${ps}: u32`).join(", "),Pt=u.map(ps=>`d${ps}`).join(", ");return`
  fn set_${e}(${it}, value: ${k}) {
    set_${e}ByIndices(${Ye(Pt)}, value);
  }`})();return{impl:()=>{let it=[],Pt=!1;return B.offsetToIndices&&(it.push(he),Pt=!0),B.indicesToOffset&&(it.push(Fe),Pt=!0),B.broadcastedIndicesToOffset&&(Object.values(Xt).forEach(ps=>it.push(ps)),Pt=!0),B.set&&(it.push(fs),Pt=!0),B.setByIndices&&(it.push(Rt),Pt=!0),B.get&&(it.push(Ft),Pt=!0),B.getByIndices&&(it.push(St),Pt=!0),!a&&Pt&&it.unshift(`const ${Z} = ${d.indices}(${s.join(",")});`,`const ${ee} = ${d.indices}(${ze.computeStrides(s).join(",")});`),it.join(`
`)},type:d,offsetToIndices:pe,indicesToOffset:Le,broadcastedIndicesToOffset:Zt,indices:Ye,indicesGet:at,indicesSet:Et,set:(...it)=>{if(it.length!==i+1)throw new Error(`indices length must be ${i}`);let Pt=it[i];if(typeof Pt!="string")throw new Error("value must be string");let ps=it.slice(0,i).map(z).join(",");return i===0?bt("0u",Pt):i===1?bt(ps[0],Pt):(B.set=!0,B.setByIndices=!0,B.indicesToOffset=!0,`set_${e}(${ps}, ${Pt})`)},setByOffset:bt,setByIndices:(it,Pt)=>i<2?bt(it,Pt):(B.setByIndices=!0,B.indicesToOffset=!0,`set_${e}ByIndices(${it}, ${Pt});`),get:bs,getByOffset:ss,getByIndices:Ht,usage:n,name:e,strides:ee,shape:Z,rank:i}},qe=(e,t,s,n=1)=>en(e,t,s,"input",n),At=(e,t,s,n=1)=>en(e,t,s,"output",n),La=(e,t,s)=>en(e,t,s,"atomicOutput",1),jo=(e,t,s,n=1)=>en(e,t,s,"internal",n),za=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=or){let t=typeof e=="number"?e:e[0],s=typeof e=="number"?1:e[1],n=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||s>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${s}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*s*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${s}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let o=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=o?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=o?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*s*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${s}, ${n})
  fn main(${a}) {
    ${i}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let s=e.usage==="input"?"read":"read_write",n=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${t}) var<storage, ${s}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,s=1){return this.uniforms.push({name:e,type:t,length:s}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:s,length:n}of this.uniforms)if(n&&n>4)s==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${s}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${s}>, ${Math.ceil(n/4)}>`);else{let o=n==null||n===1?s:`vec${n}<${s}>`;e.push(`${t}:${o}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},Ba=(e,t)=>new za(e,t)}),Ra,Uo,Vo,Na,ja,Wo,cr,Ua,Go,Gr=g(()=>{zt(),Ot(),rs(),Yt(),Ra=(e,t)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(t.length!==0&&t.length!==e[0].dims.length)throw new Error(`perm size ${t.length} does not match input rank ${e[0].dims.length}`)},Uo=(e,t)=>t.length!==0?t:[...new Array(e).keys()].reverse(),Vo=(e,t)=>ze.sortBasedOnPerm(e,Uo(e.length,t)),Na=(e,t,s,n)=>{let o=`fn perm(i: ${n.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`;for(let a=0;a<t;++a)o+=`a[${e[a]}]=i[${a}];`;return o+="return a;}"},ja=(e,t)=>{let s=[],n=[];for(let o=0;o<e.length;++o)e[o]!==1&&s.push(e[o]),e[t[o]]!==1&&n.push(t[o]);return{newShape:s,newPerm:n}},Wo=(e,t)=>{let s=0;for(let n=0;n<e.length;++n)if(t[e[n]]!==1){if(e[n]<s)return!1;s=e[n]}return!0},cr=(e,t)=>{let s=e.dataType,n=e.dims.length,o=Uo(n,t),a=Vo(e.dims,o),i=e.dims,u=a,p=n<2||Wo(o,e.dims),h;if(p)return h=B=>{let V=qe("input",s,i,4),Z=At("output",s,u,4);return`
  ${B.registerUniform("output_size","u32").declareVariables(V,Z)}
  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let B=ze.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(B/64/4)},programUniforms:[{type:12,data:Math.ceil(B/4)}]}},getShaderSource:h};let{newShape:k,newPerm:C}=ja(e.dims,o),d=ze.areEqual(C,[2,3,1]),z=ze.areEqual(C,[3,1,2]);if(k.length===2||d||z){i=d?[k[0],k[1]*k[2]]:z?[k[0]*k[1],k[2]]:k,u=[i[1],i[0]];let B=16;return h=V=>{let Z=qe("a",s,i.length),ee=At("output",s,u.length);return`
  ${V.registerUniform("output_size","u32").declareVariables(Z,ee)}
  var<workgroup> tile : array<array<${ee.type.value}, ${B+1}>, ${B}>;
  ${V.mainStart([B,B,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${B} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${B}u + local_id.x;
    let input_row = workgroup_id_x * ${B}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${Z.getByIndices(`${Z.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${B}u + local_id.x;
    let output_row = workgroup_id_y * ${B}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${ee.setByIndices(`${ee.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let V=ze.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(u[1]/B),y:Math.ceil(u[0]/B)},programUniforms:[{type:12,data:V},...yt(i,u)]}},getShaderSource:h}}return h=B=>{let V=qe("a",s,i.length),Z=At("output",s,u.length);return`
  ${B.registerUniform("output_size","u32").declareVariables(V,Z)}

  ${Na(o,n,V,Z)}

  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${Z.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${Z.setByOffset("global_idx",V.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let B=ze.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:[{type:12,data:B},...yt(i,u)]}},getShaderSource:h}},Ua=(e,t)=>{Ra(e.inputs,t.perm),e.compute(cr(e.inputs[0],t.perm))},Go=e=>Bt({perm:e.perm})}),io,Va,Wa,Ga,Ka,Ha,qa,Qa,Ko,Xa,pr,tn,Ya,Bc,Ja,Rc,Za,Ho,el,tl,sl,Nc=g(()=>{zt(),Ot(),Yt(),uo(),Gr(),io={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Va={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Wa={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Ga={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Ka=(e,t)=>{let s=[];for(let n=t-e;n<t;++n)s.push(n);return s},Ha=(e,t)=>{let s=[],n=e.length;for(let a=0;a<n;a++)t.indexOf(a)===-1&&s.push(e[a]);let o=t.map(a=>e[a]);return[s,o]},qa=(e,t)=>{let s=e.length+t.length,n=[],o=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?n.push(e[o++]):n.push(1);return n},Qa=(e,t)=>{for(let s=0;s<e.length;++s)if(e[e.length-s-1]!==t-1-s)return!1;return!0},Ko=(e,t)=>{let s=[];if(!Qa(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&s.push(n);e.forEach(n=>s.push(n))}return s},Xa=(e,t,s,n,o,a,i)=>{let u=s[0].dims,p=ze.size(a),h=ze.size(i),k=qe("_A",s[0].dataType,u),C=At("output",o,a),d=64;p===1&&(d=256);let z=`
          var<workgroup> aBestValues : array<f32, ${d}>;
       `,B=V=>`
        ${V.registerUniform("reduceSize","u32").declareVariables(k,C)}
        ${z}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${V.mainStart(d)}

          let outputIndex = global_idx / ${d};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Wa[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${d}) {
           let candidate = f32(${k.getByOffset("offset + k")});
           bestValue = ${io[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${d}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Va[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${C.setByOffset("outputIndex",`${n==="mean"?`${C.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${C.type.storage}(${Ga[n]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${t};${d}`,inputDependencies:["type"]},getShaderSource:B,getRunData:()=>({outputs:[{dims:a,dataType:o}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},pr=(e,t,s,n)=>{let o=e.inputs.length===1?s:qo(e.inputs,s),a=o.axes;a.length===0&&!o.noopWithEmptyAxes&&(a=e.inputs[0].dims.map((z,B)=>B));let i=ze.normalizeAxes(a,e.inputs[0].dims.length),u=i,p=e.inputs[0],h=Ko(u,e.inputs[0].dims.length);h.length>0&&(p=e.compute(cr(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],u=Ka(u.length,p.dims.length));let[k,C]=Ha(p.dims,u),d=k;o.keepDims&&(d=qa(k,i)),e.compute(Xa(t,o.cacheKey,[p],n,e.inputs[0].dataType,d,C),{inputs:[p]})},tn=(e,t)=>{pr(e,"ReduceMeanShared",t,"mean")},Ya=(e,t)=>{pr(e,"ReduceL1Shared",t,"l1")},Bc=(e,t)=>{pr(e,"ReduceL2Shared",t,"l2")},Ja=(e,t)=>{pr(e,"ReduceLogSumExpShared",t,"logSumExp")},Rc=(e,t)=>{pr(e,"ReduceMaxShared",t,"max")},Za=(e,t)=>{pr(e,"ReduceMinShared",t,"min")},Ho=(e,t)=>{pr(e,"ReduceProdShared",t,"prod")},el=(e,t)=>{pr(e,"ReduceSumShared",t,"sum")},tl=(e,t)=>{pr(e,"ReduceSumSquareShared",t,"sumSquare")},sl=(e,t)=>{pr(e,"ReduceLogSumShared",t,"logSum")}}),fr,ao,lo,qo,gr,Qo,rl,nl,Xo,ol,il,Yo,al,ll,Jo,wr,ul,Zo,dl,cl,ei,pl,hl,ti,ml,_l,uo=g(()=>{zt(),Ot(),rs(),Yt(),Nc(),fr=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},ao=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],lo=(e,t,s,n,o,a,i=!1,u=!1)=>{let p=[],h=s[0].dims,k=h.length,C=ze.normalizeAxes(o,k),d=!u&&C.length===0;h.forEach((V,Z)=>{d||C.indexOf(Z)>=0?i&&p.push(1):p.push(V)});let z=p.length,B=ze.size(p);return{name:e,shaderCache:t,getShaderSource:V=>{let Z=[],ee=qe("_A",s[0].dataType,k),Y=At("output",a,z),he=n(ee,Y,C),pe=he[2];for(let Me=0,Fe=0;Me<k;Me++)d||C.indexOf(Me)>=0?(i&&Fe++,pe=`for(var j${Me}: u32 = 0; j${Me} < ${h[Me]}; j${Me}++) {
                  ${he[2].includes("last_index")?`let last_index = j${Me};`:""}
                  ${ee.indicesSet("input_indices",Me,`j${Me}`)}
                  ${pe}
                }`):(Z.push(`${ee.indicesSet("input_indices",Me,Y.indicesGet("output_indices",Fe))};`),Fe++);return`

        ${V.registerUniform("output_size","u32").declareVariables(ee,Y)}

        ${V.mainStart()}
          ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${ee.type.indices};
          let output_indices = ${Y.offsetToIndices("global_idx")};

          ${Z.join(`
`)}
          ${he[0]}       // init ops for reduce max/min
          ${he[1]}
          ${pe}
          ${he[3]}
          ${he.length===4?Y.setByOffset("global_idx","value"):he.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:[{type:12,data:B},...yt(h,p)]})}},qo=(e,t)=>{let s=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>s.push(Number(n))),Bt({axes:s,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},gr=(e,t,s,n)=>{let o=e.inputs,a=o.length===1?s:qo(o,s);e.compute(lo(t,{hint:a.cacheKey,inputDependencies:["rank"]},[o[0]],a.noopWithEmptyAxes&&a.axes.length===0?ao:n,a.axes,o[0].dataType,a.keepDims,a.noopWithEmptyAxes),{inputs:[0]})},Qo=(e,t)=>{fr(e.inputs),gr(e,"ReduceLogSum",t,(s,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${s.getByIndices("input_indices")};`,"value = log(value);"])},rl=(e,t)=>{fr(e.inputs),gr(e,"ReduceL1",t,(s,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${s.getByIndices("input_indices")});`,""])},nl=(e,t)=>{fr(e.inputs),gr(e,"ReduceL2",t,(s,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${s.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Xo=(e,t)=>{fr(e.inputs),gr(e,"ReduceLogSumExp",t,(s,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${s.getByIndices("input_indices")});`,"value = log(value);"])},ol=(e,t)=>{fr(e.inputs),gr(e,"ReduceMax",t,(s,n,o)=>{let a=[];for(let i=0;i<s.rank;i++)(o.indexOf(i)>=0||o.length===0)&&a.push(s.indicesSet("input_indices",i,0));return[`${a.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};`,`value = max(value, ${s.getByIndices("input_indices")});`,""]})},il=(e,t)=>{fr(e.inputs),gr(e,"ReduceMean",t,(s,n,o)=>{let a=1;for(let i=0;i<s.rank;i++)(o.indexOf(i)>=0||o.length===0)&&(a*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${s.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${a});`]})},Yo=(e,t)=>{fr(e.inputs),gr(e,"ReduceMin",t,(s,n,o)=>{let a=[];for(let i=0;i<s.rank;i++)(o.indexOf(i)>=0||o.length===0)&&a.push(`input_indices[${i}] = 0;`);return[`${a.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};`,`value = min(value, ${s.getByIndices("input_indices")});`,""]})},al=(e,t)=>{fr(e.inputs),gr(e,"ReduceProd",t,(s,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${s.getByIndices("input_indices")};`,""])},ll=(e,t)=>{fr(e.inputs),gr(e,"ReduceSum",t,(s,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${s.getByIndices("input_indices")};`,""])},Jo=(e,t)=>{fr(e.inputs),gr(e,"ReduceSumSquare",t,(s,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${s.getByIndices("input_indices")}; value += t * t;`,""])},wr=(e,t,s)=>{if(t.length===0)return s;let n=1,o=1;for(let a=0;a<t.length;a++)t.indexOf(a)===-1?n*=e[a]:o*=e[a];return o<32&&n>1024},ul=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?il(e,t):tn(e,t)},Zo=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?rl(e,t):Ya(e,t)},dl=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?nl(e,t):Bc(e,t)},cl=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Xo(e,t):Ja(e,t)},ei=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ol(e,t):Rc(e,t)},pl=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yo(e,t):Za(e,t)},hl=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?al(e,t):Ho(e,t)},ti=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ll(e,t):el(e,t)},ml=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Jo(e,t):tl(e,t)},_l=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Qo(e,t):sl(e,t)}}),si,fl,ri,ni,jc=g(()=>{zt(),rs(),uo(),si=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},fl=(e,t)=>{si(e.inputs);let s=(n,o,a)=>{let i=[];for(let u=0;u<n.rank;u++)(a.indexOf(u)>=0||a.length===0)&&i.push(`input_indices[${u}] = 0;`);return[`${i.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};e.compute(lo("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],s,[t.axis],7,t.keepDims),{inputs:[0]})},ri=(e,t)=>{si(e.inputs);let s=(n,o,a)=>{let i=[];for(let u=0;u<n.rank;u++)(a.indexOf(u)>=0||a.length===0)&&i.push(`input_indices[${u}] = 0;`);return[`${i.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};e.compute(lo("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],s,[t.axis],7,t.keepDims),{inputs:[0]})},ni=e=>Bt(e)}),oi,co,gl,ii,wl,Nn,ai,yl,li=g(()=>{zt(),Ot(),ue(),Yt(),oi=(e,t)=>{let s=e[0],n=e[1],o=e[2],a=e[3],i=e[4],u=e[5];if(i&&u)throw new Error("Attention cannot have both past and attention_bias");if(s.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let p=s.dims[0],h=s.dims[1],k=s.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==k)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let C=o.dims[0]/3,d=C,z=d;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let he of t.qkvHiddenSizes)if(he%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");C=t.qkvHiddenSizes[0],d=t.qkvHiddenSizes[1],z=t.qkvHiddenSizes[2]}let B=h;if(C!==d)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==C+d+z)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let V=0;if(i){if(d!==z)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==p)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==d/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(V=i.dims[3])}let Z=B+V,ee=-1,Y=0;if(a)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(u){if(u.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(u.dims[0]!==p||u.dims[1]!==t.numHeads||u.dims[2]!==h||u.dims[3]!==Z)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:h,pastSequenceLength:V,kvSequenceLength:B,totalSequenceLength:Z,maxSequenceLength:ee,inputHiddenSize:k,hiddenSize:C,vHiddenSize:z,headSize:Math.floor(C/t.numHeads),vHeadSize:Math.floor(z/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:Y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},co=(e,t,s)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${s?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,gl=(e,t,s,n,o,a,i,u)=>{let p=qt(i?1:a),h=64,k=a/p;k<h&&(h=32);let C=Math.ceil(a/p/h),d=[{type:12,data:t},{type:12,data:s},{type:12,data:n},{type:12,data:o},{type:12,data:k},{type:12,data:C}],z=_s(e.dataType,p),B=Ss(1,p),V=["type"];i&&V.push("type"),u&&V.push("type");let Z=ee=>{let Y=At("x",e.dataType,e.dims,p),he=[Y],pe=i?qe("seq_lens",i.dataType,i.dims):void 0;pe&&he.push(pe);let Me=u?qe("total_sequence_length_input",u.dataType,u.dims):void 0;Me&&he.push(Me);let Fe=Ss(e.dataType),Le=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${h}>;
  var<workgroup> thread_sum: array<f32, ${h}>;
  ${ee.registerUniforms(Le).declareVariables(...he)}
  ${ee.mainStart([h,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${co(pe,Me,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${h}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${i?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${B}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${B}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(p){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${p}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${h}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${B}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${B}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(p){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${p}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${h}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${Y.type.value}(${Fe}(1.0) / ${Fe}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${B}(x[offset + i]);
        x[offset + i] = ${Y.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${i?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${Y.type.value}(${Fe}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${h};${z};${p}`,inputDependencies:V},getShaderSource:Z,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(a/h),y:o,z:t*s},programUniforms:d})}},ii=(e,t,s,n,o,a,i,u,p)=>{let h=i+a.kvSequenceLength,k=[a.batchSize,a.numHeads,a.sequenceLength,h],C=e>1&&n,d=a.kvNumHeads?a.kvNumHeads:a.numHeads,z=C?[a.batchSize,d,h,a.headSize]:void 0,B=a.nReps?a.nReps:1,V=a.scale===0?1/Math.sqrt(a.headSize):a.scale,Z=qt(a.headSize),ee=a.headSize/Z,Y=12,he={x:Math.ceil(h/Y),y:Math.ceil(a.sequenceLength/Y),z:a.batchSize*a.numHeads},pe=[{type:12,data:a.sequenceLength},{type:12,data:ee},{type:12,data:h},{type:12,data:a.numHeads},{type:12,data:a.headSize},{type:1,data:V},{type:12,data:i},{type:12,data:a.kvSequenceLength},{type:12,data:B}],Me=C&&n&&ze.size(n.dims)>0,Fe=["type","type"];Me&&Fe.push("type"),o&&Fe.push("type"),u&&Fe.push("type"),p&&Fe.push("type");let Le=[{dims:k,dataType:t.dataType,gpuDataType:0}];C&&Le.push({dims:z,dataType:t.dataType,gpuDataType:0});let Ye=at=>{let Et=qe("q",t.dataType,t.dims,Z),Xt=qe("key",s.dataType,s.dims,Z),Zt=[Et,Xt];if(Me){let Rt=qe("past_key",n.dataType,n.dims,Z);Zt.push(Rt)}o&&Zt.push(qe("attention_bias",o.dataType,o.dims));let bt=u?qe("seq_lens",u.dataType,u.dims):void 0;bt&&Zt.push(bt);let ss=p?qe("total_sequence_length_input",p.dataType,p.dims):void 0;ss&&Zt.push(ss);let St=At("output",t.dataType,k),Ft=[St];C&&Ft.push(At("present_key",t.dataType,z,Z));let bs=Ss(1,Z),Ht=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${Y}u;

  var<workgroup> tileQ: array<${Et.type.storage}, ${Y*Y}>;
  var<workgroup> tileK: array<${Et.type.storage}, ${Y*Y}>;
  ${at.registerUniforms(Ht).declareVariables(...Zt,...Ft)}
  ${at.mainStart([Y,Y,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${B===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${B===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${co(bt,ss,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${Me&&C?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${C?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${bs}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${Me&&C?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${C?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${bs}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(Z){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${Z}`)}})()};
        output[outputIdx] = ${St.type.value} (sum * uniforms.alpha) + ${o?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${Z};${o!==void 0};${n!==void 0};${e}`,inputDependencies:Fe},getRunData:()=>({outputs:Le,dispatchGroup:he,programUniforms:pe}),getShaderSource:Ye}},wl=(e,t,s,n,o,a,i=void 0,u=void 0)=>{let p=a+o.kvSequenceLength,h=o.nReps?o.nReps:1,k=o.vHiddenSize*h,C=e>1&&n,d=o.kvNumHeads?o.kvNumHeads:o.numHeads,z=C?[o.batchSize,d,p,o.headSize]:void 0,B=[o.batchSize,o.sequenceLength,k],V=12,Z={x:Math.ceil(o.vHeadSize/V),y:Math.ceil(o.sequenceLength/V),z:o.batchSize*o.numHeads},ee=[{type:12,data:o.sequenceLength},{type:12,data:p},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:12,data:k},{type:12,data:a},{type:12,data:o.kvSequenceLength},{type:12,data:h}],Y=C&&n&&ze.size(n.dims)>0,he=["type","type"];Y&&he.push("type"),i&&he.push("type"),u&&he.push("type");let pe=[{dims:B,dataType:t.dataType,gpuDataType:0}];C&&pe.push({dims:z,dataType:t.dataType,gpuDataType:0});let Me=Fe=>{let Le=qe("probs",t.dataType,t.dims),Ye=qe("v",s.dataType,s.dims),at=[Le,Ye];Y&&at.push(qe("past_value",n.dataType,n.dims));let Et=i?qe("seq_lens",i.dataType,i.dims):void 0;i&&at.push(Et);let Xt=u?qe("total_sequence_length_input",u.dataType,u.dims):void 0;u&&at.push(Xt);let Zt=[At("output",t.dataType,B)];C&&Zt.push(At("present_value",t.dataType,z));let bt=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${V}u;
  var<workgroup> tileQ: array<${Le.type.value}, ${V*V}>;
  var<workgroup> tileV: array<${Le.type.value}, ${V*V}>;
  ${Fe.registerUniforms(bt).declareVariables(...at,...Zt)}
  ${Fe.mainStart([V,V,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${h===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${h===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${co(Et,Xt,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${Y&&C?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${C?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Le.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${Y&&C?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${C?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:he},getRunData:()=>({outputs:pe,dispatchGroup:Z,programUniforms:ee}),getShaderSource:Me}},Nn=(e,t,s,n,o,a,i,u,p,h,k=void 0,C=void 0)=>{let d=Math.min(e.outputCount,1+(i?1:0)+(u?1:0)),z=d>1?h.pastSequenceLength:0,B=z+h.kvSequenceLength,V=p&&ze.size(p.dims)>0?p:void 0,Z=[t,s];d>1&&i&&ze.size(i.dims)>0&&Z.push(i),V&&Z.push(V),k&&Z.push(k),C&&Z.push(C);let ee=e.compute(ii(d,t,s,i,V,h,z,k,C),{inputs:Z,outputs:d>1?[-1,1]:[-1]})[0];e.compute(gl(ee,h.batchSize,h.numHeads,z,h.sequenceLength,B,k,C),{inputs:k&&C?[ee,k,C]:[ee],outputs:[]});let Y=[ee,n];d>1&&u&&ze.size(u.dims)>0&&Y.push(u),k&&Y.push(k),C&&Y.push(C),e.compute(wl(d,ee,n,u,h,z,k,C),{inputs:Y,outputs:d>1?[0,2]:[0]})},ai=(e,t)=>{let s=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,o=t.inputHiddenSize,a=t.headSize,i=12,u={x:Math.ceil(t.headSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:n},{type:12,data:o},{type:12,data:a},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],k=C=>{let d=At("output_q",p[0].dataType,s),z=At("output_k",p[0].dataType,s),B=At("output_v",p[0].dataType,s),V=qe("input",p[0].dataType,p[0].dims),Z=qe("weight",p[1].dataType,p[1].dims),ee=qe("bias",p[2].dataType,p[2].dims),Y=V.type.storage,he=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${Y}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${Y}, ${i*i}>;
  var<workgroup> tileWeightK: array<${Y}, ${i*i}>;
  var<workgroup> tileWeightV: array<${Y}, ${i*i}>;
  ${C.registerUniforms(he).declareVariables(V,Z,ee,d,z,B)}
  ${C.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${Y}(0);
    var valueK = ${Y}(0);
    var valueV = ${Y}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:h}),getShaderSource:k},{inputs:p,outputs:[-1,-1,-1]})},yl=(e,t)=>{let s=oi(e.inputs,t),[n,o,a]=ai(e,s);return Nn(e,n,o,a,e.inputs[4],void 0,void 0,void 0,e.inputs[5],s)}}),ui,Ml,bl,di,Uc=g(()=>{We(),zt(),Ot(),rs(),Yt(),ui=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let s=(n,o,a)=>{let i=o.length;if(i!==n.length)throw new Error(`${a}: num dimensions != ${i}`);o.forEach((u,p)=>{if(u!==n[p])throw new Error(`${a}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);s(e[1].dims,n,"Invalid input scale"),s(e[2].dims,n,"Invalid input B"),s(e[3].dims,n,"Invalid input mean"),s(e[4].dims,n,"Invalid input var")}else s(e[1].dims,[1],"Invalid input scale"),s(e[2].dims,[1],"Invalid input B"),s(e[3].dims,[1],"Invalid input mean"),s(e[4].dims,[1],"Invalid input var")},Ml=(e,t)=>{let{epsilon:s,spatial:n,format:o}=t,a=e[0].dims,i=n?qt(a[a.length-1]):1,u=o==="NHWC"&&a.length>1?i:1,p=ze.size(a)/i,h=n,k=h?a.length:a,C=qe("x",e[0].dataType,e[0].dims,i),d=qe("scale",e[1].dataType,e[1].dims,u),z=qe("bias",e[2].dataType,e[2].dims,u),B=qe("inputMean",e[3].dataType,e[3].dims,u),V=qe("inputVar",e[4].dataType,e[4].dims,u),Z=At("y",e[0].dataType,k,i),ee=()=>{let he="";if(n)he=`let cOffset = ${a.length===1?"0u":o==="NHWC"?`outputIndices[${a.length-1}] / ${i}`:"outputIndices[1]"};`;else if(o==="NCHW")he=`
            ${Z.indicesSet("outputIndices","0","0")}
            let cOffset = ${Z.indicesToOffset("outputIndices")};`;else{he=`var cIndices = ${d.type.indices}(0);
                       cIndices[0] = outputIndices[${a.length-1}];`;for(let pe=1;pe<d.rank;pe++)he+=`cIndices[${pe}] = outputIndices[${pe}];`;he+=`let cOffset = ${d.indicesToOffset("cIndices")};`}return he},Y=he=>`
  const epsilon = ${s};
  ${he.registerUniform("outputSize","u32").declareVariables(C,d,z,B,V,Z)}
  ${he.mainStart()}
  ${he.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${Z.offsetToIndices(`global_idx * ${i}`)};
    ${ee()}
    let scale = ${d.getByOffset("cOffset")};
    let bias = ${z.getByOffset("cOffset")};
    let inputMean = ${B.getByOffset("cOffset")};
    let inputVar = ${V.getByOffset("cOffset")};
    let x = ${C.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${Z.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${i}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:Y,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...yt(a)]:[{type:12,data:p}]})}},bl=e=>Bt(e),di=(e,t)=>{let{inputs:s,outputCount:n}=e,o=bl({...t,outputCount:n});if(F.webgpu.validateInputContent&&ui(s,o),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ml(s,o))}}),vl,ci,xl,Vc=g(()=>{Ot(),Yt(),vl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ci=e=>{let t=e[0].dims,s=e[0].dims[2],n=ze.size(t)/4,o=e[0].dataType,a=qe("input",o,t,4),i=qe("bias",o,[s],4),u=qe("residual",o,t,4),p=At("output",o,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:h=>`
  const channels = ${s}u / 4;
  ${h.declareVariables(a,i,u,p)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${a.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${p.setByOffset("global_idx","value")}
  }`}},xl=e=>{vl(e.inputs),e.compute(ci(e.inputs))}}),pi,ds,Tl,hi,El,Pl,mi,Cl,kl,_i,Sl,$l,fi,Il,Al,gi,jn,Ol,po,Fl,wi,Dl,Ll,yi,zl,Bl,Mi,Rl,Nl,bi,jl,Ul,vi,Vl,Wl,ho,Gl,xi,mo,Kl,Hl,ql,Ql,Ti,Xl,Ei=g(()=>{zt(),Ot(),rs(),Yt(),pi=(e,t,s,n,o,a,i)=>{let u=Math.ceil(t/4),p="";typeof o=="string"?p=`${o}(a)`:p=o("a");let h=qe("inputData",s,[u],4),k=At("outputData",n,[u],4),C=[{name:"vec_size",type:"u32"}];return i&&C.push(...i),`
      ${e.registerUniforms(C).declareVariables(h,k)}

  ${a??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${h.getByOffset("global_idx")};
    ${k.setByOffset("global_idx",p)}
  }`},ds=(e,t,s,n,o,a=e.dataType,i,u)=>{let p=[{type:12,data:Math.ceil(ze.size(e.dims)/4)}];return i&&p.push(...i),{name:t,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:h=>pi(h,ze.size(e.dims),e.dataType,a,s,n,u),getRunData:h=>({outputs:[{dims:e.dims,dataType:a}],dispatchGroup:{x:Math.ceil(ze.size(h[0].dims)/64/4)},programUniforms:p})}},Tl=e=>{e.compute(ds(e.inputs[0],"Abs","abs"))},hi=e=>{e.compute(ds(e.inputs[0],"Acos","acos"))},El=e=>{e.compute(ds(e.inputs[0],"Acosh","acosh"))},Pl=e=>{e.compute(ds(e.inputs[0],"Asin","asin"))},mi=e=>{e.compute(ds(e.inputs[0],"Asinh","asinh"))},Cl=e=>{e.compute(ds(e.inputs[0],"Atan","atan"))},kl=e=>{e.compute(ds(e.inputs[0],"Atanh","atanh"))},_i=e=>Bt(e),Sl=(e,t)=>{let s;switch(t.to){case 10:s="vec4<f16>";break;case 1:s="vec4<f32>";break;case 12:s="vec4<u32>";break;case 6:s="vec4<i32>";break;case 9:s="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(ds(e.inputs[0],"Cast",s,void 0,t.cacheKey,t.to))},$l=e=>{let t,s,n=e.length>=2&&e[1].data!==0,o=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=n?e[1].getFloat32Array()[0]:-34028234663852886e22,s=o?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=n?e[1].getUint16Array()[0]:64511,s=o?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Bt({min:t,max:s})},fi=(e,t)=>{let s=t||$l(e.inputs),n=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Clip",o=>`clamp(${o}, vec4<${n}>(uniforms.min), vec4<${n}>(uniforms.max))`,void 0,s.cacheKey,void 0,[{type:e.inputs[0].dataType,data:s.min},{type:e.inputs[0].dataType,data:s.max}],[{name:"min",type:n},{name:"max",type:n}]),{inputs:[0]})},Il=e=>{e.compute(ds(e.inputs[0],"Ceil","ceil"))},Al=e=>{e.compute(ds(e.inputs[0],"Cos","cos"))},gi=e=>{e.compute(ds(e.inputs[0],"Cosh","cosh"))},jn=e=>Bt(e),Ol=(e,t)=>{let s=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${s}(${t.alpha});

  fn elu_f32(a: ${s}) -> ${s} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${s}>) -> vec4<${s}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},po=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Fl=e=>{let t=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Erf",s=>`erf_vf32(${s})`,po(t)))},wi=e=>{e.compute(ds(e.inputs[0],"Exp","exp"))},Dl=e=>{e.compute(ds(e.inputs[0],"Floor","floor"))},Ll=e=>{let t=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Gelu",s=>`0.5 * ${s} * (1.0 + erf_vf32(${s} * 0.7071067811865475))`,po(t)))},yi=(e,t)=>{let s=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${s}>(0.0))`,`const leaky_relu_alpha_ = ${s}(${t.alpha});`,t.cacheKey))},zl=e=>{e.compute(ds(e.inputs[0],"Not",t=>`!${t}`))},Bl=e=>{e.compute(ds(e.inputs[0],"Neg",t=>`-${t}`))},Mi=e=>{e.compute(ds(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Rl=e=>{let t=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Relu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > vec4<${t}>(0.0))`))},Nl=e=>{e.compute(ds(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},bi=e=>Bt(e),jl=(e,t)=>{let s=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"HardSigmoid",n=>`max(vec4<${s}>(0.0), min(vec4<${s}>(1.0), ${t.alpha} * ${n} + vec4<${s}>(${t.beta})))`,void 0,t.cacheKey))},Ul=e=>{e.compute(ds(e.inputs[0],"Sin","sin"))},vi=e=>{e.compute(ds(e.inputs[0],"Sinh","sinh"))},Vl=e=>{e.compute(ds(e.inputs[0],"Sqrt","sqrt"))},Wl=e=>{e.compute(ds(e.inputs[0],"Tan","tan"))},ho=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Gl=e=>{e.compute(ds(e.inputs[0],"Tanh",ho))},xi=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${ho("v")};
}
`,mo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Kl=e=>{let t=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"FastGelu",mo,xi(t),void 0,e.inputs[0].dataType))},Hl=(e,t)=>{let s=Ss(e.inputs[0].dataType);return e.compute(ds(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${s}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${s}>(${t.alpha});`,t.cacheKey)),0},ql=e=>{e.compute(ds(e.inputs[0],"Log","log"))},Ql=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Ti=e=>`quick_gelu_impl(${e})`,Xl=(e,t)=>{let s=Ss(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"QuickGelu",Ti,Ql(s,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),Yl,Jl,Pi,Wc=g(()=>{Ot(),Yt(),Ei(),Yl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Jl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let s=qe("input",e[0].dataType,e[0].dims,4),n=qe("bias",e[0].dataType,[e[0].dims[2]],4),o=At("output",e[0].dataType,t,4),a=ze.size(t)/4,i=_s(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${u.declareVariables(s,n,o)}

  ${po(i)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Pi=e=>{Yl(e.inputs),e.compute(Jl(e.inputs))}}),Zl,eu,yr,Ci,tu,su,ru,nu,ki,ou,iu,Si,au,Gc=g(()=>{zt(),Ot(),Yt(),Zl=(e,t,s,n,o,a,i,u,p,h,k,C)=>{let d,z;typeof u=="string"?d=z=(Y,he)=>`${u}((${Y}),(${he}))`:typeof u=="function"?d=z=u:(d=u.scalar,z=u.vector);let B=At("outputData",k,n.length,4),V=qe("aData",p,t.length,4),Z=qe("bData",h,s.length,4),ee;if(o)if(a){let Y=ze.size(t)===1,he=ze.size(s)===1,pe=t.length>0&&t[t.length-1]%4===0,Me=s.length>0&&s[s.length-1]%4===0;Y||he?ee=B.setByOffset("global_idx",z(Y?`${V.type.value}(${V.getByOffset("0")}.x)`:V.getByOffset("global_idx"),he?`${Z.type.value}(${Z.getByOffset("0")}.x)`:Z.getByOffset("global_idx"))):ee=`
            let outputIndices = ${B.offsetToIndices("global_idx * 4u")};
            let offsetA = ${V.broadcastedIndicesToOffset("outputIndices",B)};
            let offsetB = ${Z.broadcastedIndicesToOffset("outputIndices",B)};
            ${B.setByOffset("global_idx",z(i||pe?V.getByOffset("offsetA / 4u"):`${V.type.value}(${V.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||Me?Z.getByOffset("offsetB / 4u"):`${Z.type.value}(${Z.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else ee=B.setByOffset("global_idx",z(V.getByOffset("global_idx"),Z.getByOffset("global_idx")));else{if(!a)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let Y=(he,pe,Me="")=>{let Fe=`aData[indexA${pe}][componentA${pe}]`,Le=`bData[indexB${pe}][componentB${pe}]`;return`
            let outputIndices${pe} = ${B.offsetToIndices(`global_idx * 4u + ${pe}u`)};
            let offsetA${pe} = ${V.broadcastedIndicesToOffset(`outputIndices${pe}`,B)};
            let offsetB${pe} = ${Z.broadcastedIndicesToOffset(`outputIndices${pe}`,B)};
            let indexA${pe} = offsetA${pe} / 4u;
            let indexB${pe} = offsetB${pe} / 4u;
            let componentA${pe} = offsetA${pe} % 4u;
            let componentB${pe} = offsetB${pe} % 4u;
            ${he}[${pe}] = ${Me}(${d(Fe,Le)});
          `};k===9?ee=`
            var data = vec4<u32>(0);
            ${Y("data",0,"u32")}
            ${Y("data",1,"u32")}
            ${Y("data",2,"u32")}
            ${Y("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:ee=`
            ${Y("outputData[global_idx]",0)}
            ${Y("outputData[global_idx]",1)}
            ${Y("outputData[global_idx]",2)}
            ${Y("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(V,Z,B)}

        ${C??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${ee}
      }`},eu=(e,t,s,n,o,a,i=s.dataType)=>{let u=s.dims.map(V=>Number(V)??1),p=n.dims.map(V=>Number(V)??1),h=!ze.areEqual(u,p),k=u,C=ze.size(u),d=!1,z=!1,B=[h];if(h){let V=Ws.calcShape(u,p,!1);if(!V)throw new Error("Can't perform binary op on the given tensors");k=V.slice(),C=ze.size(k);let Z=ze.size(u)===1,ee=ze.size(p)===1,Y=u.length>0&&u[u.length-1]%4===0,he=p.length>0&&p[p.length-1]%4===0;B.push(Z),B.push(ee),B.push(Y),B.push(he);let pe=1;for(let Me=1;Me<k.length;Me++){let Fe=u[u.length-Me],Le=p[p.length-Me];if(Fe===Le)pe*=Fe;else break}pe%4===0?(z=!0,d=!0):(Z||ee||Y||he)&&(d=!0)}else d=!0;return B.push(d),{name:e,shaderCache:{hint:t+B.map(V=>V.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:V=>Zl(V,u,p,k,d,h,z,o,s.dataType,n.dataType,i,a),getRunData:()=>({outputs:[{dims:k,dataType:i}],dispatchGroup:{x:Math.ceil(C/64/4)},programUniforms:[{type:12,data:Math.ceil(ze.size(k)/4)},...yt(u,p,k)]})}},yr=(e,t,s,n,o,a)=>{e.compute(eu(t,o??"",e.inputs[0],e.inputs[1],s,n,a))},Ci=e=>{yr(e,"Add",(t,s)=>`${t}+${s}`)},tu=e=>{yr(e,"Div",(t,s)=>`${t}/${s}`)},su=e=>{yr(e,"Equal",{scalar:(t,s)=>`u32(${t}==${s})`,vector:(t,s)=>`vec4<u32>(${t}==${s})`},void 0,void 0,9)},ru=e=>{yr(e,"Mul",(t,s)=>`${t}*${s}`)},nu=e=>{let t=qe("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;yr(e,"Pow",{scalar:(s,n)=>`pow_custom(${s},${n})`,vector:(s,n)=>`pow_vector_custom(${s},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},ki=e=>{yr(e,"Sub",(t,s)=>`${t}-${s}`)},ou=e=>{yr(e,"Greater",{scalar:(t,s)=>`u32(${t}>${s})`,vector:(t,s)=>`vec4<u32>(${t}>${s})`},void 0,void 0,9)},iu=e=>{yr(e,"Less",{scalar:(t,s)=>`u32(${t}<${s})`,vector:(t,s)=>`vec4<u32>(${t}<${s})`},void 0,void 0,9)},Si=e=>{yr(e,"GreaterOrEqual",{scalar:(t,s)=>`u32(${t}>=${s})`,vector:(t,s)=>`vec4<u32>(${t}>=${s})`},void 0,void 0,9)},au=e=>{yr(e,"LessOrEqual",{scalar:(t,s)=>`u32(${t}<=${s})`,vector:(t,s)=>`vec4<u32>(${t}<=${s})`},void 0,void 0,9)}}),$i,lu,uu,Ii,du,cu,pu=g(()=>{zt(),Ot(),rs(),Yt(),$i=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let s=0,n=e[s],o=n.dataType,a=n.dims.length;e.forEach((i,u)=>{if(u!==s){if(i.dataType!==o)throw new Error("input tensors should be one type");if(i.dims.length!==a)throw new Error("input tensors should have the same shape");i.dims.forEach((p,h)=>{if(h!==t&&p!==n.dims[h])throw new Error("non concat dimensions must match")})}})},lu=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,uu=(e,t)=>{let s=e.length,n=[];for(let o=0;o<s;++o){let a=t.setByOffset("global_idx",e[o].getByIndices("indices"));s===1?n.push(a):o===0?n.push(`if (inputIndex == ${o}u) { ${a} }`):o===s-1?n.push(`else { ${a} }`):n.push(`else if (inputIndex == ${o}) { ${a} }`)}return n.join(`
`)},Ii=(e,t,s,n)=>{let o=ze.size(s),a=new Array(e.length),i=new Array(e.length),u=0,p=[],h=[],k=[{type:12,data:o}];for(let V=0;V<e.length;++V)u+=e[V].dims[t],a[V]=u,h.push(e[V].dims.length),i[V]=qe(`input${V}`,n,h[V]),p.push("rank"),k.push({type:12,data:a[V]});for(let V=0;V<e.length;++V)k.push(...yt(e[V].dims));k.push(...yt(s));let C=At("output",n,s.length),d=C.indicesGet("indices",t),z=Array.from(Array(a.length).keys()).map(V=>`uniforms.sizeInConcatAxis${V}`).join(","),B=V=>`

  ${(()=>{V.registerUniform("outputSize","u32");for(let Z=0;Z<e.length;Z++)V.registerUniform(`sizeInConcatAxis${Z}`,"u32");return V.declareVariables(...i,C)})()}

  ${lu(a.length,z)}

  ${V.mainStart()}
    ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${C.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${d});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${a.length}u>(${z});
      ${d} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${uu(i,C)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:k}),getShaderSource:B}},du=(e,t)=>{let s=e.inputs,n=s[0].dims,o=ze.normalizeAxis(t.axis,n.length);$i(s,o);let a=n.slice();a[o]=s.reduce((u,p)=>u+(p.dims.length>o?p.dims[o]:0),0);let i=s.filter(u=>ze.size(u.dims)>0);e.compute(Ii(i,o,a,s[0].dataType),{inputs:i})},cu=e=>Bt({axis:e.axis})}),sn,rn,Fr,Ai,nn=g(()=>{zt(),Ot(),sn=(e,t,s="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${s}(uniforms.clip_min)), ${t}(${s}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${s}(uniforms.alpha) * value + ${s}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${s}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},rn=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Fr=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Ai=e=>{let t=(e==null?void 0:e.activation)||"";if(t==="HardSigmoid"){let[s,n]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:s,beta:n}}else if(t==="Clip"){let[s,n]=(e==null?void 0:e.activation_params)||[ks,Xs];return{activation:t,clipMax:n,clipMin:s}}else if(t==="LeakyRelu"){let[s]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:s}}return{activation:t}}}),Ks,Oi,Fi=g(()=>{Ks=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Oi=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Di,Kc=g(()=>{Di=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Un,Li,_o=g(()=>{zt(),Ot(),Yt(),nn(),Un=(e,t,s,n,o)=>{let a=n-s;return`
      ${Array.from({length:s}).map((i,u)=>`
      if (${$t(t.shape,u,t.rank)} != 1) {
        ${t.indicesSet(e,u,$t(o,u+a,n))}
      } else {
        ${t.indicesSet(e,u,0)}
      }`).join("")}
`},Li=(e,t,s,n,o=!1,a)=>{let i=e[0].dims,u=e[1].dims,p=i[i.length-2],h=u[u.length-1],k=i[i.length-1],C=qt(h),d=qt(k),z=qt(p),B=ze.size(s)/C/z,V=e.length>2,Z=n?n.slice(0,-2):s.slice(0,-2),ee=[ze.size(Z),p,h],Y=[{type:12,data:B},{type:12,data:p},{type:12,data:h},{type:12,data:k}];rn(t,Y),Y.push(...yt(Z,i,u)),V&&Y.push(...yt(e[2].dims)),Y.push(...yt(ee));let he=pe=>{let Me=jo("batch_dims",e[0].dataType,Z.length),Fe=qe("a",e[0].dataType,i.length,d),Le=qe("b",e[1].dataType,u.length,C),Ye=At("output",e[0].dataType,ee.length,C),at=_s(Ye.type.tensor),Et=sn(t,Ye.type.value,at),Xt=[Fe,Le],Zt="";if(V){let St=o?C:1;Xt.push(qe("bias",e[2].dataType,e[2].dims.length,St)),Zt=`${o?`value += bias[col / ${St}];`:`value += ${Ye.type.value}(bias[row + i]);`}`}let bt=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Fr(t,bt);let ss=()=>{let St=`var a_data: ${Fe.type.value};`;for(let Ft=0;Ft<d;Ft++)St+=`
              let b_data${Ft} = b[(b_offset + (k + ${Ft}) * uniforms.N + col) / ${C}];`;for(let Ft=0;Ft<z;Ft++){St+=`a_data = a[(a_offset + (row + ${Ft}) * uniforms.K + k) / ${d}];`;for(let bs=0;bs<d;bs++)St+=`
            values[${Ft}] = fma(${Le.type.value}(a_data${d===1?"":`[${bs}]`}), b_data${bs}, values[${Ft}]);
`}return St};return`
  ${pe.registerUniforms(bt).registerInternalVariables(Me).declareVariables(...Xt,Ye)}
  ${pe.mainStart()}
    ${pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${C})) * ${C};
    var index1 = global_idx / (uniforms.N / ${C});
    let stride1 = uniforms.M / ${z};
    let row = (index1 % stride1) * ${z};
    let batch = index1 / stride1;

    ${s.length===2?"":`let batch_indices = ${Me.offsetToIndices("batch")};`}

    var a_indices: ${Fe.type.indices};
    ${Un("a_indices",Fe,Fe.rank-2,Me.rank,"batch_indices")}
    ${Fe.indicesSet("a_indices",Fe.rank-2,0)}
    ${Fe.indicesSet("a_indices",Fe.rank-1,0)}
    let a_offset = ${Fe.indicesToOffset("a_indices")};

    var b_indices: ${Le.type.indices};
    ${Un("b_indices",Le,Le.rank-2,Me.rank,"batch_indices")}
    ${Le.indicesSet("b_indices",Le.rank-2,0)}
    ${Le.indicesSet("b_indices",Le.rank-1,0)}
    let b_offset = ${Le.indicesToOffset("b_indices")};
    var values: array<${Ye.type.value}, ${z}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${d}) {
      ${ss()}
    }
    for (var i = 0u; i < ${z}u; i++) {
      var value = values[i];
      ${Zt}
      ${Et}
      let cur_indices = ${Ye.type.indices}(batch, row + i, col);
      let offset = ${Ye.indicesToOffset("cur_indices")};
      ${Ye.setByOffset(`offset / ${C}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${C};${d};${z};${o}`,inputDependencies:V?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:a?a(s):s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:Y}),getShaderSource:he}}}),hu,mu,zi,fo,_u,Bi,Ri,go,Ni=g(()=>{zt(),Ot(),Yt(),nn(),_o(),Fi(),hu=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,mu=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,zi=(e,t,s="f32",n,o=!1,a=32,i=!1,u=32)=>{let p=t[1]*e[1],h=t[0]*e[0],k=o?p:a,C=o?a:p,d=k/t[0],z=a/t[1];if(!((o&&d===4&&e[1]===4||!o&&(d===3||d===4))&&k%t[0]===0&&a%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${d} must be 3 or 4.
  tileAWidth ${k} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${d}<${s}>, ${k/d}>, ${C}>;
var<workgroup> mm_Bsub: array<array<vec4<${s}>, ${h/e[0]}>, ${a}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${d};
const tileInner = ${a};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${p};

  let num_tiles = ${i?`${Math.ceil(u/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${u}`:"0"};

  var acc: array<vec4<${s}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${z};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${hu(o,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${z}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${d===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${mu(o,d)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},fo=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,_u=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Bi=(e,t,s="f32",n,o=!1,a=32,i=!1,u=32,p=!1)=>{let h=e[1]*t[1],k=e[0]*t[0],C=o?h:a,d=o?a:h;if(!(d%t[1]===0&&C%t[0]===0&&a%t[1]===0))throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${C} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);let z=d/t[1],B=C/t[0],V=a/t[1],Z=p?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${h};
    let globalColStart = i32(workgroupId.x) * ${k};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${C}; inputCol = inputCol + ${t[0]}) {
          ${fo(o,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${k}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${s}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${h};

let tileRowA = i32(localId.y) * ${z};
let tileColA = i32(localId.x) * ${B};
let tileRowB = i32(localId.y) * ${V};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${z}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${B}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${fo(o,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${V}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${s}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${_u(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${s}, ${C}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<${s}, ${k}>, ${a}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${a};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(u/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${u}`:"0"};

    var acc : array<array<${s}, colPerThread>, rowPerThread>;
    ${Z}
  }
`},Ri=(e,t,s,n,o=!1)=>{let[a,i,u,p]=n,h=_s(n[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${Ks(e,h)} {
      var value = ${Ks(e,h)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${i.type.indices};
        ${Un("aIndices",i,i.rank-2,a.rank,"batchIndices")}
        ${i.indicesSet("aIndices",i.rank-2,"u32(row)")}
        ${i.indicesSet("aIndices",i.rank-1,"u32(colIn)")}
        value = ${i.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${Ks(e,h)} {
      var value = ${Ks(e,h)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${u.type.indices};
        ${Un("bIndices",u,u.rank-2,a.rank,"batchIndices")}
        ${u.indicesSet("bIndices",u.rank-2,"u32(row)")}
        ${u.indicesSet("bIndices",u.rank-1,"u32(colIn)")}
        value = ${u.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ks(e,h)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${o?"bias[colIn]":`${Ks(e,h)}(bias[row])`};`:""}
        ${s}
        ${p.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},go=(e,t,s,n,o=!1,a)=>{let i=e[0].dims,u=e[1].dims,p=i.slice(0,-2),h=u.slice(0,-2),k=n?n.slice(0,-2):s.slice(0,-2),C=ze.size(k),d=i[i.length-2],z=i[i.length-1],B=u[u.length-1],V=z%4===0&&B%4===0,Z=d<=8?[4,1,1]:[4,4,1],ee=[8,8,1],Y=[Math.ceil(B/ee[0]/Z[0]),Math.ceil(d/ee[1]/Z[1]),Math.ceil(C/ee[2]/Z[2])],he=V?4:1,pe=[...p,d,z/he],Me=pe.length,Fe=[...h,z,B/he],Le=Fe.length,Ye=[C,d,B/he],at=[{type:6,data:d},{type:6,data:B},{type:6,data:z}];rn(t,at),at.push(...yt(k,pe,Fe));let Et=["rank","rank"],Xt=e.length>2;Xt&&(at.push(...yt(e[2].dims)),Et.push("rank")),at.push(...yt(Ye));let Zt=bt=>{let ss=k.length,St=jo("batchDims",e[0].dataType,ss,1),Ft=_s(e[0].dataType),bs=qe("a",e[0].dataType,Me,he),Ht=qe("b",e[1].dataType,Le,he),Rt=At("result",e[0].dataType,Ye.length,he),fs=[bs,Ht];if(Xt){let xr=o?he:1;fs.push(qe("bias",e[2].dataType,e[2].dims.length,xr))}let it=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Fr(t,it);let Pt=_s(Rt.type.tensor),ps=sn(t,Rt.type.value,Pt),Ns=Ri(he,Xt,ps,[St,bs,Ht,Rt],o);return`
  ${bt.registerUniforms(it).registerInternalVariables(St).declareVariables(...fs,Rt)}
  ${Ns}
  ${V?zi(Z,ee,Ft,St):Bi(Z,ee,Ft,St)}
                   `};return{name:"MatMul",shaderCache:{hint:`${Z};${t.activation};${V};${o}`,inputDependencies:Et},getRunData:()=>({outputs:[{dims:a?a(s):s,dataType:e[0].dataType}],dispatchGroup:{x:Y[0],y:Y[1],z:Y[2]},programUniforms:at}),getShaderSource:Zt}}}),ji,fu,Hc=g(()=>{zt(),Ee(),Yt(),nn(),Fi(),Kc(),Ni(),ji=(e,t,s,n,o=!1,a,i=4,u=4,p=4,h="f32")=>{let k=at=>{switch(at){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${at} is not supported.`)}},C=at=>{switch(at){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${at} is not supported.`)}},d=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,z=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,B=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",V=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",Z=e?"row":"col",ee=e?"col":"row",Y=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${Z} / outWidth;
    let outCol = ${Z} % outWidth;

    let WRow = ${ee} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${ee} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${ee} % inChannels;
    var resData = ${Ks(i,h)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${B} && xCol >= 0 && xCol < ${V}) {
      ${d}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${k(i)}
    }
    return resData;`,he=e?t&&n?`
    let col = colIn * ${i};
    ${Y}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${Y}
    }
    return ${Ks(i,h)}(0.0);`:n&&s?`
    let col = colIn * ${i};
    ${Y}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${Y}
    }
    return ${Ks(i,h)}(0.0);`,pe=e?n&&s?C(u):`
    let col = colIn * ${u};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${C(u)}
    }
    return ${Ks(u,h)}(0.0);`:`
    let col = colIn * ${u};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${C(u)}
    }
    return ${Ks(u,h)}(0.0);`,Me=Ks(p,h),Fe=Ks(e?i:u,h),Le=Ks(e?u:i,h),Ye=sn(a,Me,h);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Fe} {
      ${e?he:pe}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Le} {
      ${e?pe:he}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${Me}) {
      let col = colIn * ${p};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${z}
      ${Oi(o)}
      ${Ye}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},fu=(e,t,s,n,o,a,i,u,p)=>{let h=t.format==="NHWC",k=h?e[0].dims[3]:e[0].dims[1],C=s[0],d=h?s[2]:s[3],z=h?s[1]:s[2],B=h?s[3]:s[1],V=h&&(k%4===0||k%3===0)&&B%4===0,Z=h?B:d*z,ee=h?d*z:B,Y=[8,8,1],he=n<=8?[4,1,1]:[4,4,1],pe=[Math.ceil(Z/Y[0]/he[0]),Math.ceil(ee/Y[1]/he[1]),Math.ceil(C/Y[2]/he[2])];as("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${pe}`);let Me=V?h&&k%4!==0?3:4:1,Fe=Y[1]*he[1],Le=Y[0]*he[0],Ye=Math.max(Y[0]*Me,Y[1]),at=n%Fe===0,Et=o%Le===0,Xt=a%Ye===0,Zt=V?[Me,4,4]:[1,1,1],bt=[{type:6,data:n},{type:6,data:o},{type:6,data:a},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];rn(t,bt),bt.push(...yt(e[0].dims,e[1].dims));let ss=["rank","rank"];i&&(bt.push(...yt(e[2].dims)),ss.push("rank")),bt.push(...yt(s));let St=Ft=>{let bs=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Fr(t,bs);let Ht=V?4:1,Rt=_s(e[0].dataType),fs=`
      fn setOutputAtIndex(flatIndex : i32, value : ${V?`vec4<${Rt}>`:Rt}) {
        result[flatIndex] = ${V?`vec4<${Rt}>`:Rt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${V?`vec4<${Rt}>`:Rt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${V?"/ 4":""}, value);
      }`,it=qe("x",e[0].dataType,e[0].dims.length,Me===3?1:Me),Pt=qe("w",e[1].dataType,e[1].dims.length,Ht),ps=[it,Pt],Ns=At("result",e[0].dataType,s.length,Ht);if(i){let xr=qe("bias",e[2].dataType,e[2].dims.length,Ht);ps.push(xr),fs+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${V?`vec4<${Rt}>`:Rt} {
          return bias[coords.${h?"w":"y"}${V?"/ 4":""}];
        }`}return`
        ${Di("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ft.registerUniforms(bs).declareVariables(...ps,Ns)}
        ${fs}
        ${ji(h,at,Et,Xt,i,t,Zt[0],Zt[1],Zt[2],Rt)}
        ${V?zi(he,Y,Rt,void 0,!h,Ye):Bi(he,Y,Rt,void 0,!h,Ye,!1,void 0,u)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${Me};${V};${at};${Et};${Xt};${Fe};${Le};${Ye}`,inputDependencies:ss},getRunData:()=>({outputs:[{dims:p?p(s):s,dataType:e[0].dataType}],dispatchGroup:{x:pe[0],y:pe[1],z:pe[2]},programUniforms:bt}),getShaderSource:St}}}),Ui,Vi,Vn,Wi,Gi,gu,Ki,wu,qc=g(()=>{zt(),Ee(),Ot(),Yt(),nn(),Fi(),Ui=e=>{let t=1;for(let s=0;s<e.length;s++)t*=e[s];return t},Vi=e=>typeof e=="number"?[e,e,e]:e,Vn=(e,t)=>t<=1?e:e+(e-1)*(t-1),Wi=(e,t,s,n=1)=>{let o=Vn(t,n);return Math.floor((e[0]*(s-1)-s+o)/2)},Gi=(e,t,s,n,o)=>{o==null&&(o=Wi(e,t[0],n[0]));let a=[0,0,0,s];for(let i=0;i<3;i++)e[i]+2*o>=t[i]&&(a[i]=Math.trunc((e[i]-t[i]+2*o)/n[i]+1));return a},gu=(e,t,s,n,o,a,i,u,p,h)=>{let k,C,d,z;if(e==="VALID"&&(e=0),typeof e=="number"){k={top:e,bottom:e,left:e,right:e,front:e,back:e};let B=Gi([t,s,n,1],[u,p,h],1,[o,a,i],e);C=B[0],d=B[1],z=B[2]}else if(Array.isArray(e)){if(!e.every((V,Z,ee)=>V===ee[0]))throw Error(`Unsupported padding parameter: ${e}`);k={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let B=Gi([t,s,n,1],[u,p,h],1,[o,a,i],e[0]);C=B[0],d=B[1],z=B[2]}else if(e==="SAME_UPPER"){C=Math.ceil(t/o),d=Math.ceil(s/a),z=Math.ceil(n/i);let B=(C-1)*o+u-t,V=(d-1)*a+p-s,Z=(z-1)*i+h-n,ee=Math.floor(B/2),Y=B-ee,he=Math.floor(V/2),pe=V-he,Me=Math.floor(Z/2),Fe=Z-Me;k={top:he,bottom:pe,left:Me,right:Fe,front:ee,back:Y}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:k,outDepth:C,outHeight:d,outWidth:z}},Ki=(e,t,s,n,o,a=!1,i="channelsLast")=>{let u,p,h,k,C;if(i==="channelsLast")[u,p,h,k,C]=e;else if(i==="channelsFirst")[u,C,p,h,k]=e;else throw new Error(`Unknown dataFormat ${i}`);let[d,,z,B,V]=t,[Z,ee,Y]=Vi(s),[he,pe,Me]=Vi(n),Fe=Vn(z,he),Le=Vn(B,pe),Ye=Vn(V,Me),{padInfo:at,outDepth:Et,outHeight:Xt,outWidth:Zt}=gu(o,p,h,k,Z,ee,Y,Fe,Le,Ye),bt=a?d*C:d,ss=[0,0,0,0,0];return i==="channelsFirst"?ss=[u,bt,Et,Xt,Zt]:i==="channelsLast"&&(ss=[u,Et,Xt,Zt,bt]),{batchSize:u,dataFormat:i,inDepth:p,inHeight:h,inWidth:k,inChannels:C,outDepth:Et,outHeight:Xt,outWidth:Zt,outChannels:bt,padInfo:at,strideDepth:Z,strideHeight:ee,strideWidth:Y,filterDepth:z,filterHeight:B,filterWidth:V,effectiveFilterDepth:Fe,effectiveFilterHeight:Le,effectiveFilterWidth:Ye,dilationDepth:he,dilationHeight:pe,dilationWidth:Me,inShape:e,outShape:ss,filterShape:t}},wu=(e,t,s,n,o,a)=>{let i=a==="channelsLast";i?e[0].dims[3]:e[0].dims[1];let u=[64,1,1],p={x:s.map((Z,ee)=>ee)},h=[Math.ceil(Ui(p.x.map(Z=>s[Z]))/u[0]),1,1];as("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${h}`);let k=1,C=ze.size(s),d=[{type:12,data:C},{type:12,data:n},{type:12,data:o},{type:12,data:t.strides},{type:12,data:t.dilations}];rn(t,d),d.push(...yt(e[0].dims,e[1].dims));let z=["rank","rank"],B=e.length===3;B&&(d.push(...yt(e[2].dims)),z.push("rank")),d.push(...yt(s));let V=Z=>{let ee=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:n.length},{name:"pads",type:"u32",length:o.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Fr(t,ee);let Y=1,he=_s(e[0].dataType),pe=qe("x",e[0].dataType,e[0].dims.length,k),Me=qe("W",e[1].dataType,e[1].dims.length,Y),Fe=[pe,Me],Le=At("result",e[0].dataType,s.length,Y),Ye="";if(B){let Xt=qe("bias",e[2].dataType,e[2].dims.length,Y);Fe.push(Xt),Ye+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${he} {
          return bias[${i?$t("coords",4,5):$t("coords",1,5)}];
        }`}let at=Ks(k,he),Et=sn(t,at,he);return`
            ${Ye}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${pe.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${Me.getByIndices("aIndices")};
            }
          ${Z.registerUniforms(ee).declareVariables(...Fe,Le)}
          ${Z.mainStart()}
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Le.offsetToIndices("global_idx")};
              let batch = ${$t("coords",0,pe.rank)};
              let d2 = ${i?$t("coords",pe.rank-1,pe.rank):$t("coords",1,pe.rank)};
              let xFRCCorner = vec3<u32>(${i?$t("coords",1,pe.rank):$t("coords",2,pe.rank)},
              ${i?$t("coords",2,pe.rank):$t("coords",3,pe.rank)},
              ${i?$t("coords",3,pe.rank):$t("coords",4,pe.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${i?$t("uniforms.x_shape",1,pe.rank):$t("uniforms.x_shape",2,pe.rank)};
              let xShapeZ = ${i?$t("uniforms.x_shape",2,pe.rank):$t("uniforms.x_shape",3,pe.rank)};
              let xShapeW = ${i?$t("uniforms.x_shape",3,pe.rank):$t("uniforms.x_shape",4,pe.rank)};
              let xShapeU = ${i?$t("uniforms.x_shape",4,pe.rank):$t("uniforms.x_shape",1,pe.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${i?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${i?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${i?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${i?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${B?"value = value + getBiasByOutputCoords(coords)":""};
              ${Et}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${i};${k};${B}`,inputDependencies:z},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:h[0],y:h[1],z:h[2]},programUniforms:d}),getShaderSource:V}}}),yu,Mu,Hi=g(()=>{zt(),Ot(),Yt(),nn(),yu=(e,t,s,n)=>{let o=e.length>2,a=o?"value += b[output_channel];":"",i=e[0].dims,u=e[1].dims,p=t.format==="NHWC",h=p?s[3]:s[1],k=h/t.group,C=p&&k>=4?qt(h):1,d=ze.size(s)/C,z=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:k}];rn(t,z),z.push(...yt(i,[u[0],u[1],u[2],u[3]/C]));let B=o?["rank","rank","rank"]:["rank","rank"];z.push(...yt([s[0],s[1],s[2],s[3]/C]));let V=Z=>{let ee=At("output",e[0].dataType,s.length,C),Y=_s(ee.type.tensor),he=sn(t,ee.type.value,Y),pe=qe("x",e[0].dataType,i.length),Me=qe("w",e[1].dataType,u.length,C),Fe=[pe,Me];o&&Fe.push(qe("b",e[2].dataType,e[2].dims,C));let Le=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Fr(t,Le);let Ye=p?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${pe.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${Me.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${pe.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${Me.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${Z.registerUniforms(Le).declareVariables(...Fe,ee)}

  ${Z.mainStart()}
    ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${ee.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${p?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${C} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${p?2:1}];

    var value: ${ee.type.value} = ${ee.type.value}(0);
    ${Ye}
    ${a}
    ${he}
    ${ee.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${C}`,inputDependencies:B},getRunData:()=>({outputs:[{dims:n?n(s):s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:z}),getShaderSource:V}},Mu=(e,t,s,n)=>{let o=e.length>2,a=qt(s[3]),i=qt(s[2]),u=ze.size(s)/a/i,p=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/a],h=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/a],k=[s[0],s[1],s[2],s[3]/a],C=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];rn(t,C),C.push(...yt(p,h,k));let d=(i-1)*t.strides[1]+h[1],z=B=>{let V=At("output",e[0].dataType,k.length,a),Z=_s(V.type.tensor),ee=sn(t,V.type.value,Z),Y=qe("x",e[0].dataType,p.length,a),he=qe("w",e[1].dataType,h.length,a),pe=[Y,he];o&&pe.push(qe("b",e[2].dataType,e[2].dims,a));let Me=o?"value += b[output_channel];":"",Fe=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Fr(t,Fe),`
  ${B.registerUniforms(Fe).declareVariables(...pe,V)}
  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${Y.type.value}, ${d}>;
    var values: array<${V.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${h[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${d}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${Y.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${Y.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${h[1]}; w_width++) {
          let w_val = ${he.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${Me}
      ${ee}
      ${V.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${a};${i};${d};${h[0]};${h[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(s):s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:C}),getShaderSource:z}}}),bu,wo,vu,yo,qi,Mo,xu,Tu,bo,Qc=g(()=>{Ot(),Hc(),qc(),Ni(),Hi(),nn(),_o(),Gr(),bu=(e,t,s,n,o,a)=>{let i=e[0],u=e.slice(a?1:2,a?3:4),p=u.length,h=t[0],k=t.slice(2).map((d,z)=>d+(d-1)*(s[z]-1)),C=u.map((d,z)=>d+n[z]+n[z+p]).map((d,z)=>Math.floor((d-k[z]+o[z])/o[z]));return C.splice(0,0,i),C.splice(a?3:1,0,h),C},wo=[2,3,1,0],vu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let s=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(s!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let o=e[0].dims.length-2;if(t.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(t.strides.length!==o)throw new Error(`strides should be ${o}D`);if(t.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},yo=(e,t)=>{let s=e.kernelShape.slice();s.length<t[1].dims.length-2&&s.push(...Array(t[1].dims.length-2-s.length).fill(0));for(let a=2;a<t[1].dims.length;++a)s[a-2]===0&&(s[a-2]=t[1].dims[a]);let n=e.pads.slice();Js.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,s,n,e.format==="NHWC",e.autoPad);let o=Object.assign({},e);return Object.assign(o,{kernelShape:s,pads:n}),o},qi=e=>{let t=Ai(e),s=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],o=e.dilations,a=e.group,i=e.kernel_shape,u=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:n,format:s,dilations:o,group:a,kernelShape:i,pads:u,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},Mo=(e,t,s,n)=>{let o=s.format==="NHWC",a=bu(t[0].dims,t[1].dims,s.dilations,s.pads,s.strides,o);if(s.group!==1){let Fe=[t[0]];if(o){let Le=e.kernelCustomData.wT??e.compute(cr(t[1],wo),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Le),Fe.push(Le)}else Fe.push(t[1]);t.length===3&&Fe.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&o&&t[1].dims[0]===s.group&&t[1].dims[1]===1&&s.dilations[0]===1&&s.dilations[1]===1?e.compute(Mu(Fe,s,a,n),{inputs:Fe}):e.compute(yu(Fe,s,a,n),{inputs:Fe});return}let i=t.length===3,u=t[0].dims[o?1:2],p=t[0].dims[o?2:3],h=t[0].dims[o?3:1],k=t[1].dims[2],C=t[1].dims[3],d=a[o?1:2],z=a[o?2:3],B=a[o?3:1],V=o&&k===u&&C===p&&s.pads[0]===0&&s.pads[1]===0;if(V||k===1&&C===1&&s.dilations[0]===1&&s.dilations[1]===1&&s.strides[0]===1&&s.strides[1]===1&&s.pads[0]===0&&s.pads[1]===0){let Fe=a[0],Le,Ye,at,Et=[];if(o){let bt=e.kernelCustomData.wT??e.compute(cr(t[1],wo),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];if(s.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=bt),V){let ss=u*p*h;Le=t[0].reshape([1,Fe,ss]),Ye=bt.reshape([1,ss,B]),at=[1,Fe,B]}else Le=t[0].reshape([Fe,u*p,h]),Ye=bt.reshape([1,h,B]),at=[Fe,d*z,B];Et.push(Le),Et.push(Ye)}else Le=t[0].reshape([Fe,h,u*p]),Ye=t[1].reshape([1,B,h]),at=[Fe,B,d*z],Et.push(Ye),Et.push(Le);i&&Et.push(t[2]);let Xt=at[2],Zt=Et[0].dims[Et[0].dims.length-1];Xt<8&&Zt<8?e.compute(Li(Et,s,a,at,o,n),{inputs:Et}):e.compute(go(Et,s,a,at,o,n),{inputs:Et});return}let Z=!0,ee=e.kernelCustomData.wT??e.compute(cr(t[1],wo),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ee);let Y=[t[0],ee];i&&Y.push(t[2]);let he=o?d*z:B,pe=o?B:d*z,Me=k*C*h;e.compute(fu(Y,s,a,he,pe,Me,i,Z,n),{inputs:Y})},xu=(e,t)=>{let s=t.format==="NHWC",n=[e.inputs[0].reshape(s?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let o=[0,t.pads[0],0,t.pads[1]],a=[1].concat(t.strides),i=[1].concat(t.dilations),u=[1].concat(t.kernelShape),p=yo({...t,pads:o,strides:a,dilations:i,kernelShape:u},n);Mo(e,n,p,h=>s?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},Tu=(e,t,s)=>{let n=s.format==="NHWC"?"channelsLast":"channelsFirst",o=yo(s,t),a=s.autoPad==="NOTSET"?s.pads:s.autoPad,i=Ki(t[0].dims,t[1].dims,s.strides,s.dilations,a,!1,n);e.compute(wu(t,o,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],n))},bo=(e,t)=>{if(vu(e.inputs,t),e.inputs[0].dims.length===3)xu(e,t);else if(e.inputs[0].dims.length===5)Tu(e,e.inputs,t);else{let s=yo(t,e.inputs);Mo(e,e.inputs,s)}}}),Eu,Xc=g(()=>{zt(),Ee(),Ot(),Yt(),Eu=(e,t,s)=>{let n=e.length>2,o=t.outputShape,a=t.format==="NHWC",i=t.group,u=e[1].dims,p=u[2]/i,h=u[3],k=a?qt(p):1,C=a?qt(h):1,d=a?h===1?k:C:1,z=ze.size(o)/C,B=[Math.ceil(z/64),1,1];as("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${B}`);let V=["rank","rank"],Z=[t.strides[0],t.strides[1]],ee=[t.kernelShape[a?1:2],t.kernelShape[a?2:3]],Y=[t.dilations[0],t.dilations[1]],he=[ee[0]+(t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)),ee[1]+(t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1))],pe=[he[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),he[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Me=[{type:12,data:z},{type:12,data:Z},{type:12,data:ee},{type:12,data:Y},{type:12,data:he},{type:6,data:pe},{type:12,data:p},{type:12,data:h},...yt(e[0].dims,e[1].dims)];n&&(Me.push(...yt(e[2].dims)),V.push("rank")),Me.push(...yt(o));let Fe=Le=>{let Ye=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:Z.length},{name:"filter_dims",type:"u32",length:ee.length},{name:"dilations",type:"u32",length:ee.length},{name:"effective_filter_dims",type:"u32",length:he.length},{name:"pads",type:"i32",length:pe.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],at=_s(e[0].dataType),Et=a?1:2,Xt=a?2:3,Zt=a?3:1,bt=qe("W",e[1].dataType,e[1].dims.length,d),ss=qe("Dy",e[0].dataType,e[0].dims.length,k),St=[ss,bt];n&&St.push(qe("bias",e[2].dataType,[o[Zt]].length,C));let Ft=At("result",e[0].dataType,o.length,C),bs=()=>{let Rt="";if(k===1)Rt+=`
        let w_offset = ${bt.indicesToOffset(`${bt.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${bt.getByOffset(`w_offset / ${d}`)};
        dotProd = dotProd + xValue * wValue;`;else if(h===1)Rt+=`
          let wValue = ${bt.getByOffset(`${bt.indicesToOffset(`${bt.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${d}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let fs=0;fs<k;fs++)Rt+=`
            let wValue${fs} = ${bt.getByOffset(`${bt.indicesToOffset(`${bt.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${fs}, wOutChannel)`)} / ${d}`)};
            dotProd = dotProd + xValue[${fs}] * wValue${fs};`;return Rt},Ht=`
            let outputIndices = ${Ft.offsetToIndices(`global_idx * ${C}`)};
            let batch = ${Ft.indicesGet("outputIndices",0)};
            let d1 = ${Ft.indicesGet("outputIndices",Zt)};
            let r = ${Ft.indicesGet("outputIndices",Et)};
            let c = ${Ft.indicesGet("outputIndices",Xt)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${Ft.type.value}(0.0);
            for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${at}(dyRCorner) + ${at}(wR)) / ${at}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${at}(uniforms.Dy_shape[${Et}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              wR = wR + uniforms.strides[0] - 1;
              let idyR: u32 = u32(dyR);

              for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${at}(dyCCorner) + ${at}(wC)) / ${at}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${at}(uniforms.Dy_shape[${Xt}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                wC = wC + uniforms.strides.y - 1;
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${k}) {
                  let xValue = ${a?ss.getByOffset(`${ss.indicesToOffset(`${ss.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${k}`):ss.get("batch","inputChannel","idyR","idyC")};
                  ${bs()}
                  inputChannel = inputChannel + ${k};
                }
              }
            }
            let value = dotProd${n?` + bias[d1 / ${C}]`:""};
            ${Ft.setByOffset("global_idx","value")};
          `;return`
    ${Le.registerUniforms(Ye).declareVariables(...St,Ft)}
      ${Le.mainStart()}
      ${Le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${Ht}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};${k}${d}${C}${h===1}`,inputDependencies:V},getRunData:()=>({dispatchGroup:{x:B[0],y:B[1],z:B[2]},outputs:[{dims:s?s(o):o,dataType:e[0].dataType}],programUniforms:Me}),getShaderSource:Fe}}}),Pu,Qi,Cu,Xi,Yi,ku,Ji,Zi,Su,Yc=g(()=>{Xc(),nn(),Gr(),Pu=(e,t,s,n,o,a)=>(e-1)*t+s+(n-1)*o+1-a,Qi=(e,t,s,n,o)=>{let a=Math.floor(e/2);t==="SAME_UPPER"?(s[n]=a,s[o]=e-a):t==="SAME_LOWER"&&(s[n]=e-a,s[o]=a)},Cu=(e,t,s,n,o,a,i,u,p,h)=>{let k=e.length-2,C=h.length===0;p.length<k&&p.push(...Array(k-p.length).fill(0));let d=e[0],z=t[u?3:1]*o;for(let B=0,V=e.length-k-(u?1:0);B<k;++B,++V){let Z=e[V],ee=C?Z*i[B]:h[B],Y=Pu(Z,i[B],a[B],t[V],s[B],ee);Qi(Y,n,a,B,B+k),C&&h.push(i[B]*(Z-1)+p[B]+(t[V]-1)*s[B]+1-a[B]-a[B+k])}h.splice(0,0,d),h.splice(u?3:1,0,z)},Xi=(e,t)=>{let s=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((C,d)=>C*d,1)===0){s.length=0;for(let C=2;C<t[1].dims.length;++C)s.push(t[1].dims[C])}let n=e.format==="NHWC";s.splice(0,0,t[1].dims[0]),s.splice(n?3:1,0,t[1].dims[1]);let o=e.pads.slice(),a=e.outputShape.slice(),i=e.outputPadding.slice(),u=t[0].dims,p=e.dilations.slice();if(p.reduce((C,d)=>C+d,0)===0){let C=t[0].dims.length-2;p=new Array(C).fill(1)}let h=e.strides.slice();if(h.reduce((C,d)=>C+d,0)===0){let C=t[0].dims.length-2;h=new Array(C).fill(1)}Cu(u,s,p,e.autoPad,e.group,o,h,n,i,a);let k=Object.assign({},e);return Object.assign(k,{kernelShape:s,pads:o,outputPadding:i,outputShape:a,dilations:p,strides:h}),k},Yi=e=>{let t=Ai(e),s=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],o=e.dilations,a=e.group,i=e.kernelShape,u=e.pads,p=e.strides,h=e.wIsConst(),k=e.outputPadding,C=e.outputShape;return{autoPad:n,format:s,dilations:o,group:a,kernelShape:i,outputPadding:k,outputShape:C,pads:u,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},ku=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let s=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(s!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==o))throw new Error("invalid bias");let a=e[0].dims.length-2;if(t.dilations.reduce((i,u)=>i+u,0)>0&&t.dilations.length!==a)throw new Error(`dilations should be ${a}D`);if(t.strides.reduce((i,u)=>i+u,0)>0&&t.strides.length!==a)throw new Error(`strides should be ${a}D`);if(t.pads.reduce((i,u)=>i+u,0)>0&&t.pads.length!==a*2)throw new Error(`pads should be ${a*2}D`);if(t.outputPadding.length!==a&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${a}D`);if(t.kernelShape.reduce((i,u)=>i+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Ji=(e,t,s,n)=>{let o=e.kernelCustomData.wT??e.compute(cr(t[1],[2,3,0,1]),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=o);let a=[t[0],o];t.length===3&&a.push(t[2]),e.compute(Eu(a,s,n),{inputs:a})},Zi=(e,t)=>{let s=t.format==="NHWC",n=[e.inputs[0].reshape(s?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let o=t.kernelShape;(o.length===0||o[0]===0)&&(o=[e.inputs[1].dims[2]]);let a=t.dilations;(a.length===0||a[0]===0)&&(a=[1]);let i=t.strides;(i.length===0||i[0]===0)&&(i=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],i=[1].concat(i),a=[1].concat(a),o=[1].concat(o);let p=Xi({...t,pads:u,strides:i,dilations:a,kernelShape:o},n);Ji(e,n,p,h=>s?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},Su=(e,t)=>{if(ku(e.inputs,t),e.inputs[0].dims.length===3)Zi(e,t);else{let s=Xi(t,e.inputs);Ji(e,e.inputs,s)}}}),ea,$u,Iu,Jc=g(()=>{zt(),Ot(),rs(),Yt(),ea=(e,t,s,n)=>{let o=ze.size(t),a=t.length,i=qe("input",e,a),u=At("output",e,a),p=s.dataType===6?s.getInt32Array()[0]:Number(s.getBigInt64Array()[0]),h=ze.normalizeAxis(p,a),k=C=>{let d=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,z=$t("uniforms.input_shape","uniforms.axis",a),B=n.reverse?d+(n.exclusive?" + 1":""):"0",V=n.reverse?z:d+(n.exclusive?"":" + 1");return`
                ${C.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,u)}
                ${C.mainStart()}
                  ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${u.offsetToIndices("global_idx")};
                  var sum = ${u.type.value}(0);
                  let first : i32 = ${B};
                  let last : i32 = ${V};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${u.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:12,data:h},...yt(t,t)]}),getShaderSource:k}},$u=(e,t)=>{let s=e.inputs[0].dims,n=e.inputs[0].dataType,o=e.inputs[1];e.compute(ea(n,s,o,t),{inputs:[0]})},Iu=e=>{let t=e.exclusive===1,s=e.reverse===1;return Bt({exclusive:t,reverse:s})}}),Au,ta,Ou,Fu,Du,Zc=g(()=>{zt(),Ot(),rs(),Yt(),Au=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},ta=(e,t,s,n)=>{let o=[];o.push(`fn perm(i: ${n.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`);for(let a=0;a<t;++a)o.push(s.indicesSet("a",e[a],`i[${a}]`));return o.push("return a;}"),o.join(`
`)},Ou=(e,t)=>{let s,n,o,a,i,u,p=t.format==="NHWC",h=t.blocksize,k=t.mode==="DCR";p?([s,n,o,a]=e.dims,i=k?[s,n,o,h,h,a/h**2]:[s,n,o,a/h**2,h,h],u=k?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([s,n,o,a]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=k?[s,h,h,a/h**2,n,o]:[s,a/h**2,h,h,n,o],u=k?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let C=e.reshape(i),d=C.dims.length,z=e.dataType,B=qe("a",z,d),V=At("output",z,d),Z=ee=>`
  ${ee.registerUniform("output_size","u32").declareVariables(B,V)}

  ${ta(u,d,B,V)}

  ${ee.mainStart()}
    ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${V.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${V.setByOffset("global_idx",B.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:ee=>{let Y=p?[s,n*h,o*h,a/h**2]:[s,a/h**2,n*h,o*h],he=ze.size(Y),pe=C.dims,Me=ze.sortBasedOnPerm(pe,u);return{outputs:[{dims:Y,dataType:ee[0].dataType}],dispatchGroup:{x:Math.ceil(he/64)},programUniforms:[{type:12,data:he},...yt(pe,Me)]}},getShaderSource:Z}},Fu=(e,t)=>{Au(e.inputs),e.compute(Ou(e.inputs[0],t))},Du=e=>Bt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),vo,Wn,xo,Lu,zu,sa,Bu,ra,Kr,Ru,Nu,ep=g(()=>{zt(),Ot(),rs(),Yt(),vo="[a-zA-Z]|\\.\\.\\.",Wn="("+vo+")+",xo="^"+Wn+"$",Lu="("+Wn+",)*"+Wn,zu="^"+Lu+"$",sa=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let s=this.symbolToIndices.get(e);s===void 0?s=[t]:s.push(t),this.symbolToIndices.set(e,s)}},Bu=class{constructor(e,t){var o;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[s,n]=t.includes("->")?t.split("->",2):[t,""];if(!s.match(RegExp(zu)))throw new Error("Invalid LHS term");if(s.split(",").forEach((a,i)=>{let u=e[i].dims.slice();if(!a.match(RegExp(xo)))throw new Error("Invalid LHS term");let p=this.processTerm(a,!0,u,i);this.lhs.push(p)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([a,i])=>i.count===1||a==="...").map(([a])=>a).join("");else if(!n.match(RegExp(Wn)))throw new Error("Invalid RHS");(o=n.match(RegExp(vo,"g")))==null||o.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(a);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,s){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(s)}else n={count:1,dimValue:t,inputIndices:[s]};this.symbolToInfo.set(e,n)}processTerm(e,t,s,n=-1){let o=s.length,a=!1,i=[],u=0;if(!e.match(RegExp(xo))&&!t&&e!=="")throw new Error("Invalid LHS term");let p=e.match(RegExp(vo,"g")),h=new sa(n);return p==null||p.forEach((k,C)=>{if(k==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let d=o-p.length+1;if(d<0)throw new Error("Ellipsis out of bounds");if(i=s.slice(u,u+d),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let z=0;z<i.length;z++){let B=String.fromCharCode(48+z);h.addSymbol(B,C+z),this.addSymbol(B,s[u++],n)}}else h.addSymbol(k,C+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(k,s[u++],n)}),h}},ra=e=>e+"_max",Kr=(e,t,s,n)=>{let o=e.map(h=>h.length).map((h,k)=>qe(`input${k}`,t,h)),a=ze.size(n),i=At("output",t,n.length),u=[...s.symbolToInfo.keys()].filter(h=>!s.rhs.symbolToIndices.has(h)),p=h=>{let k=[],C="var prod = 1.0;",d="var sum = 0.0;",z="sum += prod;",B=[],V=[],Z=[],ee=[],Y=s.symbolToInfo.size===s.rhs.symbolToIndices.size;s.symbolToInfo.forEach((pe,Me)=>{var Fe;if(s.rhs.symbolToIndices.has(Me)){let Le=(Fe=s.rhs.symbolToIndices.get(Me))==null?void 0:Fe[0];Le!==void 0&&s.lhs.forEach((Ye,at)=>{if(pe.inputIndices.includes(at)){let Et=Ye.symbolToIndices.get(Me);if(Et===void 0)throw new Error("Invalid symbol error");Et.forEach(Xt=>{k.push(`${o[at].indicesSet(`input${at}Indices`,Xt,i.indicesGet("outputIndices",Le))}`)})}})}else s.lhs.forEach((Le,Ye)=>{if(pe.inputIndices.includes(Ye)){let at=Le.symbolToIndices.get(Me);if(at===void 0)throw new Error("Invalid symbol error");at.forEach(Et=>{B.push(`${o[Ye].indicesSet(`input${Ye}Indices`,Et,`${Me}`)}`)}),ee.push(`prod *= ${o[Ye].getByIndices(`input${Ye}Indices`)};`)}}),V.push(`for(var ${Me}: u32 = 0; ${Me} < uniforms.${ra(Me)}; ${Me}++) {`),Z.push("}")});let he=Y?[...k,`let sum = ${o.map((pe,Me)=>pe.getByIndices(`input${Me}Indices`)).join(" * ")};`]:[...k,d,...V,...B,C,...ee,z,...Z];return`
            ${h.registerUniforms(u.map(pe=>({name:`${ra(pe)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...o,i)}

            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${o.map((pe,Me)=>`var input${Me}Indices: ${o[Me].type.indices};`).join(`
`)}
            ${he.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:s.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let h=u.filter(C=>s.symbolToInfo.has(C)).map(C=>{var d;return{type:12,data:((d=s.symbolToInfo.get(C))==null?void 0:d.dimValue)||0}});h.push({type:12,data:a});let k=e.map((C,d)=>[...yt(C)]).reduce((C,d)=>C.concat(d),h);return k.push(...yt(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:k}},getShaderSource:p}},Ru=(e,t)=>{let s=new Bu(e.inputs,t.equation),n=s.outputDims,o=e.inputs.map((a,i)=>a.dims);e.compute(Kr(o,e.inputs[0].dataType,s,n))},Nu=e=>{let t=e.equation.replace(/\s+/g,"");return Bt({equation:t})}}),ju,To,Uu,Vu,Wu,tp=g(()=>{zt(),Ot(),Yt(),ju=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,s=Array.from(e[1].getBigInt64Array(),Number),n=s.length<t.length?0:s.length-t.length,o=t.length<s.length?0:t.length-s.length;for(;n<s.length&&o<t.length;++n,++o)if(s[n]!==t[o]&&s[n]!==1&&t[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},To=(e,t)=>{let s=e.length-t.length,n=[];for(let o=0;o<s;++o)n.push(e[o]);for(let o=0;o<t.length;++o)n.push(t[o]===1?e[o+s]:t[o]);return n},Uu=(e,t)=>e.length>t.length?To(e,t):To(t,e),Vu=e=>{let t=e[0].dims,s=Array.from(e[1].getBigInt64Array(),Number),n=Uu(t,s),o=e[0].dataType,a=o===9||ze.size(t)===1,i=o===9||t.length>0&&t[t.length-1]%4===0?4:1,u=a||n.length>0&&n[n.length-1]%4===0?4:1,p=Math.ceil(ze.size(n)/u),h=C=>{let d=qe("input",o,t.length,i),z=At("output",o,n.length,u),B;if(o===9){let V=(Z,ee,Y="")=>`
          let outputIndices${ee} = ${z.offsetToIndices(`outputOffset + ${ee}u`)};
          let offset${ee} = ${d.broadcastedIndicesToOffset(`outputIndices${ee}`,z)};
          let index${ee} = offset${ee} / 4u;
          let component${ee} = offset${ee} % 4u;
          ${Z}[${ee}] = ${Y}(${d.getByOffset(`index${ee}`)}[component${ee}]);
        `;B=`
        let outputOffset = global_idx * ${u};
        var data = vec4<u32>(0);
        ${V("data",0,"u32")}
        ${V("data",1,"u32")}
        ${V("data",2,"u32")}
        ${V("data",3,"u32")}
        ${z.setByOffset("global_idx","data")}
      }`}else B=`
        let outputIndices = ${z.offsetToIndices(`global_idx * ${u}`)};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",z)};
        let data = ${z.type.value}(${d.getByOffset(`inputOffset / ${i}`)});
        ${z.setByOffset("global_idx","data")}
      }`;return`
    ${C.registerUniform("vec_size","u32").declareVariables(d,z)}
    ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${B}`},k=[{type:12,data:p},...yt(t,n)];return{name:"Expand",shaderCache:{hint:`${n.length};${i}${u}`,inputDependencies:["rank"]},getShaderSource:h,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:k})}},Wu=e=>{ju(e.inputs),e.compute(Vu(e.inputs),{inputs:[0]})}}),Eo,Gu,sp=g(()=>{zt(),Ot(),Yt(),Ei(),Eo=e=>{let t=e[0].dataType,s=ze.size(e[0].dims),n=ze.size(e[1].dims),o=n%4===0,a=i=>{let u=qe("x",t,[1],4),p=qe("bias",t,[1],4),h=At("y",t,[1],4),k=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],C=z=>`
      let bias${z}_offset: u32 = (global_idx * 4 + ${z}) % uniforms.bias_size;
      let bias${z} = ${p.getByOffset(`bias${z}_offset / 4`)}[bias${z}_offset % 4];`,d=o?`
      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${C(0)}${C(1)}${C(2)}${C(3)}
      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(k).declareVariables(u,p,h)}

    ${xi(Ss(t))}

    ${i.mainStart(or)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${u.getByOffset("global_idx")};
      ${d}
      let x_in = x + bias;
      ${h.setByOffset("global_idx",mo("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${o}`,inputDependencies:["type","type"]},getShaderSource:a,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(s/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(s/or/4)}})}},Gu=e=>{e.inputs.length<2||ze.size(e.inputs[1].dims)===0?Kl(e):e.compute(Eo(e.inputs))}}),Ku,Gn,Hu,qu,rp=g(()=>{zt(),Ot(),rs(),Yt(),Ku=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Gn=(e,t)=>{let s=e[0].dims,n=e[1].dims,o=s.length,a=ze.normalizeAxis(t.axis,o),i=s.slice(0);i.splice(a,1,...n);let u=s[a],p=e[0].dataType===9?4:1,h=Math.ceil(ze.size(i)/p),k=[{type:12,data:h},{type:6,data:u},{type:12,data:a},...yt(e[0].dims,e[1].dims,i)],C=d=>{let z=qe("data",e[0].dataType,e[0].dims.length,p),B=qe("inputIndices",e[1].dataType,e[1].dims.length),V=At("output",e[0].dataType,i.length,p),Z=Y=>{let he=n.length,pe=`var indicesIndices${Y}  = ${B.type.indices}(0);`;for(let Me=0;Me<he;Me++)pe+=`${he>1?`indicesIndices${Y}[${Me}]`:`indicesIndices${Y}`} = ${i.length>1?`outputIndices${Y}[uniforms.axis + ${Me}]`:`outputIndices${Y}`};`;pe+=`
          var idx${Y} = ${B.getByIndices(`indicesIndices${Y}`)};
          if (idx${Y} < 0) {
            idx${Y} = idx${Y} + uniforms.axisDimLimit;
          }
          var dataIndices${Y} : ${z.type.indices};
        `;for(let Me=0,Fe=0;Me<o;Me++)Me===a?(pe+=`${o>1?`dataIndices${Y}[${Me}]`:`dataIndices${Y}`} = u32(idx${Y});`,Fe+=he):(pe+=`${o>1?`dataIndices${Y}[${Me}]`:`dataIndices${Y}`} = ${i.length>1?`outputIndices${Y}[${Fe}]`:`outputIndices${Y}`};`,Fe++);return pe},ee;if(e[0].dataType===9){let Y=(he,pe,Me="")=>`
          let outputIndices${pe} = ${V.offsetToIndices(`outputOffset + ${pe}u`)};
          ${Z(pe)};
          let offset${pe} = ${z.indicesToOffset(`dataIndices${pe}`)};
          let index${pe} = offset${pe} / 4u;
          let component${pe} = offset${pe} % 4u;
          ${he}[${pe}] = ${Me}(${z.getByOffset(`index${pe}`)}[component${pe}]);
        `;ee=`
        let outputOffset = global_idx * ${p};
        var value = vec4<u32>(0);
        ${Y("value",0,"u32")}
        ${Y("value",1,"u32")}
        ${Y("value",2,"u32")}
        ${Y("value",3,"u32")}
        ${V.setByOffset("global_idx","value")}
      `}else ee=`
      let outputIndices = ${V.offsetToIndices("global_idx")};
      ${Z("")};
      let value = ${z.getByIndices("dataIndices")};
      ${V.setByOffset("global_idx","value")};
      `;return`
      ${d.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(z,B,V)}
      ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${ee}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:k}),getShaderSource:C}},Hu=e=>Bt({axis:e.axis}),qu=(e,t)=>{let s=e.inputs;Ku(s),e.compute(Gn(e.inputs,t))}}),Qu,Po,Xu,np=g(()=>{zt(),Ot(),Yt(),Qu=(e,t,s,n,o,a,i,u,p)=>{let h=[{type:12,data:a},{type:12,data:n},{type:12,data:o},{type:12,data:s},{type:12,data:i},{type:12,data:u},{type:12,data:p}],k=[a];h.push(...yt(t.dims,k));let C=d=>{let z=qe("indices_data",t.dataType,t.dims.length),B=At("input_slice_offsets_data",12,1,1),V=[z,B],Z=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:o.length},{name:"sizes_from_slice_dims_data",type:"u32",length:s.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${d.registerUniforms(Z).declareVariables(...V)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${o.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${s.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${o.length}_${s.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:k,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:h}),getShaderSource:C},{inputs:[t],outputs:[-1]})[0]},Po=(e,t)=>{let s=e.inputs,n=s[0].dims,o=s[0].dataType,a=s[1].dims,i=a[a.length-1],u=ze.sizeToDimension(a,a.length-1),p=ze.sizeFromDimension(n,t.batchDims+i),h=ze.sizeToDimension(n,t.batchDims),k=ze.sizeFromDimension(n,t.batchDims),C=u/h,d=new Array(i),z=p;for(let pe=0;pe<i;++pe)d[i-1-pe]=z,z*=n[t.batchDims+i-1-pe];let B=Qu(e,s[1],d,t.batchDims,n,u,C,k,i),V=t.batchDims+i;if(V>n.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let Z=a.slice(0,-1).concat(n.slice(V)),ee=ze.size(Z),Y=[{type:12,data:ee},{type:12,data:p},...yt(s[0].dims,B.dims,Z)],he=pe=>{let Me=qe("data",s[0].dataType,s[0].dims.length),Fe=qe("slice_offsets",12,B.dims.length),Le=At("output",s[0].dataType,Z.length);return`
          ${pe.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(Me,Fe,Le)}
            ${pe.mainStart()}
            ${pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:Z,dataType:o}],dispatchGroup:{x:Math.ceil(ee/64)},programUniforms:Y}),getShaderSource:he},{inputs:[s[0],B]})},Xu=e=>({batchDims:e.batch_dims,cacheKey:""})}),Yu,op,Ju,Zu,ip=g(()=>{zt(),Ot(),rs(),Yt(),Yu=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let s=ze.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,o=e[0],a=e[2],i=e.length===4?e[3]:void 0;if(a.dims.length!==o.dims.length||!o.dims.map((u,p)=>p===s?Math.ceil(u/n)===a.dims[p]:u===a.dims[p]).reduce((u,p)=>u&&p,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==o.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==a.dims.length||!i.dims.map((u,p)=>u===a.dims[p]).reduce((u,p)=>u&&p,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},op=(e,t)=>{let s=e[0].dims,n=e[1].dims,o=s.length,a=ze.normalizeAxis(t.gatherAxis,o),i=ze.normalizeAxis(t.quantizeAxis,o),u=s.slice(0);u.splice(a,1,...n);let p=ze.size(u),h=e[2].dataType,k=e[0].dataType===22,C=[{type:12,data:p},{type:12,data:i},{type:12,data:a},{type:12,data:t.blockSize},...yt(...e.map((z,B)=>z.dims),u)],d=z=>{let B=qe("data",e[0].dataType,e[0].dims.length),V=qe("inputIndices",e[1].dataType,e[1].dims.length),Z=qe("scales",e[2].dataType,e[2].dims.length),ee=e.length>3?qe("zeroPoint",e[3].dataType,e[3].dims.length):void 0,Y=At("output",h,u.length),he=[B,V,Z];ee&&he.push(ee);let pe=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${z.registerUniforms(pe).declareVariables(...he,Y)}
        ${z.mainStart()}
        let output_indices = ${Y.offsetToIndices("global_idx")};
        var indices_indices = ${V.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${Y.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${V.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${Y.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${B.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${Y.indicesGet("output_indices","i")};
          ${B.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${V.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${s[a]};
        }
        ${B.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${u.length}; i++) {
          let index = ${Y.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${B.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${B.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${B.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${k?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${Z.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${Z.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${Z.getByIndices("scale_indices")};
        ${ee?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${ee.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${ee.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${k?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Ss(h)}(quantized_data - zero_point) * scale;
        ${Y.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((z,B)=>B!==1).map(z=>z.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(z,B)=>"rank")},getRunData:()=>({outputs:[{dims:u,dataType:h}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:C}),getShaderSource:d}},Ju=(e,t)=>{let s=e.inputs;Yu(s,t),e.compute(op(e.inputs,t))},Zu=e=>Bt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),xn,ed,td,sd,ap=g(()=>{zt(),Ot(),rs(),Yt(),xn=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},ed=(e,t)=>{let s=e[0].dims,n=e[0].dataType,o=s.length,a=e[1].dims,i=e[1].dataType,u=ze.normalizeAxis(t.axis,o),p=s[u],h=a.slice(0),k=ze.size(h),C=qe("input",n,o),d=qe("indicesInput",i,a.length),z=At("output",n,h.length),B=[{type:12,data:k},{type:6,data:p},{type:12,data:u}];return B.push(...yt(s,a,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:B}),getShaderSource:V=>`
      ${V.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(C,d,z)}
      ${V.mainStart()}
      ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${z.offsetToIndices("global_idx")};

      var idx = ${d.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${C.type.indices}(outputIndices);
      ${C.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${C.getByIndices("inputIndices")};

      ${z.setByOffset("global_idx","value")};
  }`}},td=e=>Bt({axis:e.axis}),sd=(e,t)=>{let s=e.inputs;xn(s),e.compute(ed(e.inputs,t))}}),rd,nd,od,Co,Kp=g(()=>{zt(),Ot(),Yt(),rd=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},nd=(e,t)=>{let s=e[0].dims.slice(),n=e[1].dims.slice(),[o,a,i]=Or.getShapeOfGemmResult(s,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),u=[o,a];if(!u)throw new Error("Can't use gemm on the given tensors");let p=16,h=Math.ceil(a/p),k=Math.ceil(o/p),C=!0,d=ze.size(u),z=[{type:12,data:C?h:d},{type:12,data:o},{type:12,data:a},{type:12,data:i},{type:1,data:t.alpha},{type:1,data:t.beta}],B=["type","type"];e.length===3&&(z.push(...yt(e[2].dims)),B.push("rank")),z.push(...yt(u));let V=ee=>{let Y="";t.transA&&t.transB?Y="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?Y="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?Y="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(Y="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let he=t.alpha===1?"":"value *= uniforms.alpha;",pe=qe("a",e[0].dataType,e[0].dims),Me=qe("b",e[1].dataType,e[1].dims),Fe=pe.type.value,Le=null,Ye=[pe,Me];e.length===3&&(Le=qe("c",e[2].dataType,e[2].dims.length),Ye.push(Le));let at=At("output",e[0].dataType,u.length);Ye.push(at);let Et=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${ee.registerUniforms(Et).declareVariables(...Ye)}

  ${ee.mainStart()}
    ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${Fe}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${Y}
    }

    ${he}
    ${Le!=null?`let cOffset = ${Le.broadcastedIndicesToOffset("vec2(m, n)",at)}; value += ${Fe}(uniforms.beta) * ${Le.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},Z=ee=>{let Y=qe("a",e[0].dataType,e[0].dims),he=qe("b",e[1].dataType,e[1].dims),pe=null,Me=[Y,he];e.length===3&&(pe=qe("c",e[2].dataType,e[2].dims.length),Me.push(pe));let Fe=At("output",e[0].dataType,u.length);Me.push(Fe);let Le=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],Ye="",at="";t.transA&&t.transB?(at=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${he.type.value}(0);
      }
      `,Ye="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):t.transA&&!t.transB?(at=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${he.type.value}(0);
      }
      `,Ye="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!t.transA&&t.transB?(at=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${he.type.value}(0);
      }
      `,Ye="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!t.transA&&!t.transB&&(at=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${he.type.value}(0);
      }
      `,Ye="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let Et=t.alpha===1?"":"value *= uniforms.alpha;";return`
  ${ee.registerUniforms(Le).declareVariables(...Me)}
  var<workgroup> tile_a: array<array<${Y.type.storage}, ${p}>, ${p}>;
  var<workgroup> tile_b: array<array<${he.type.storage}, ${p}>, ${p}>;
  ${ee.mainStart([p,p,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${p};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${p};
    let num_tiles = (uniforms.K - 1) / ${p} + 1;
    var k_start = 0u;
    var value = ${Fe.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${at}
      k_start = k_start + ${p};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${p}; k++) {
        ${Ye}
      }
      workgroupBarrier();
    }

    ${Et}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${pe!=null?`let cOffset = ${pe.broadcastedIndicesToOffset("vec2(m, n)",Fe)}; value += ${Fe.type.value}(uniforms.beta) * ${pe.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return C?{name:"GemmShared",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:B},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:h*k},programUniforms:z}),getShaderSource:Z}:{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:B},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:z}),getShaderSource:V}},od=e=>{let t=e.transA,s=e.transB,n=e.alpha,o=e.beta;return{transA:t,transB:s,alpha:n,beta:o,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Co=(e,t)=>{rd(e.inputs),e.compute(nd(e.inputs,t))}}),Pr,Dr,on,an,id,na,ad,ld,oa,ud,dd,ia,cd,pd,aa=g(()=>{zt(),Ot(),rs(),Yt(),[Pr,Dr,on,an]=[0,1,2,3],id=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},na=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,ad=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,ld=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,oa=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,ud=(e,t,s)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${t} {
     var pixel = ${t}(0);
     var indices = vec4<u32>(0);
     indices[${Pr}] = batch;
     indices[${Dr}] = channel;`+(()=>{switch(s.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${on}] = u32(r);
            indices[${an}] = u32(c);
          }
        `;case"border":return`
          indices[${on}] = u32(clamp(r, 0, H - 1));
          indices[${an}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${on}] = gs_reflect(r, border[1], border[3]);
          indices[${an}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${s.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,dd=(e,t,s)=>(()=>{switch(s.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Pr}], indices[${Dr}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Pr}], indices[${Dr}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Pr}], indices[${Dr}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Pr}], indices[${Dr}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Pr}], indices[${Dr}], border);

          let dx2 = ${t}(f32(x2) - x);
          let dx1 = ${t}(x - f32(x1));
          let dy2 = ${t}(f32(y2) - y);
          let dy1 = ${t}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${t}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Pr}], indices[${Dr}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${s.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,ia=(e,t)=>{let s=qe("x",e[0].dataType,e[0].dims.length),n=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],o=qe("grid",e[1].dataType,n.length,2),a=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];t.format==="NHWC"&&(a=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Pr,Dr,on,an]=[0,3,1,2]);let i=At("output",e[0].dataType,a.length),u=s.type.value,p=ze.size(a),h=[{type:12,data:p},...yt(e[0].dims,n,a)],k=C=>`
  ${C.registerUniform("output_size","u32").declareVariables(s,o,i)}
  ${na}
  ${ad(u)}
  ${ld(t)}
  ${oa(t)}
  ${ud(s,u,t)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${on}]);
      let W_in = i32(uniforms.x_shape[${an}]);

      ${t.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${i.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Pr}], indices[${on}], indices[${an}]);
      let nxy = ${o.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${dd(i,u,t)}
  }`;return{name:"GridSample",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:["type","type"]},getRunData:C=>{let d=ze.size(a);return{outputs:[{dims:a,dataType:C[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h}},getShaderSource:k}},cd=(e,t)=>{id(e.inputs),e.compute(ia(e.inputs,t))},pd=e=>Bt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),nr,hd,md,la,ua,ln,lp,_d=g(()=>{zt(),Ot(),rs(),ue(),li(),Yt(),Gr(),nr=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,hd=(e,t)=>{let s=e[0],n=nr(e,1),o=nr(e,2),a=nr(e,3),i=nr(e,4),u=nr(e,5),p=nr(e,6),h=nr(e,7);if(s.dims.length!==3&&s.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let k=s.dims[0],C=s.dims[1],d=s.dims.length===3?s.dims[2]:t.numHeads*s.dims[4],z=C,B=0,V=0,Z=Math.floor(d/t.numHeads);if(p&&h&&ze.size(p.dims)&&ze.size(h.dims)){if(p.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(p.dims[0]!==k||p.dims[1]!==t.numHeads||p.dims[3]!==Z)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(h.dims[0]!==k||h.dims[1]!==t.numHeads||h.dims[3]!==Z)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(p.dims[2]!==h.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(h.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');B=p.dims[2],V=p.dims[2]}else if(p&&ze.size(p.dims)||h&&ze.size(h.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let ee;if(n&&ze.size(n.dims)>0){if(s.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(s.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==s.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');ee=2,z=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==Z)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');ee=5,z=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==Z)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');ee=0,z=n.dims[2]}}else{if(s.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(s.dims[2]!==t.numHeads||s.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');ee=3}if(a&&ze.size(a.dims)>0){if(a.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let Y=B+z,he=0;if(i&&ze.size(i.dims)>0){he=8;let Le=i.dims;throw Le.length===1?Le[0]===k?he=1:Le[0]===3*k+2&&(he=3):Le.length===2&&Le[0]===k&&Le[1]===Y&&(he=5),he===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let pe=!1,Me=d;if(o&&ze.size(o.dims)>0){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(s.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(z!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');Me=o.dims[2]}else{if(z!==o.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');Me=o.dims[1]*o.dims[3],pe=!0}}let Fe=!1;if(i&&ze.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(u&&ze.size(u.dims)>0){if(u.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==k||u.dims[1]!==t.numHeads||u.dims[2]!==C||u.dims[3]!==Y)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:k,sequenceLength:C,pastSequenceLength:B,kvSequenceLength:z,totalSequenceLength:Y,maxSequenceLength:V,inputHiddenSize:0,hiddenSize:d,vHiddenSize:Me,headSize:Z,vHeadSize:Math.floor(Me/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:he,scale:t.scale,broadcastResPosBias:Fe,passPastInKv:pe,qkvFormat:ee}},md=e=>Bt({...e}),la=Bt({perm:[0,2,1,3]}),ua=(e,t,s,n,o,a,i)=>{let u=[n,o,a],p=ze.size(u),h=[{type:12,data:p},{type:12,data:i},{type:12,data:a}],k=C=>{let d=At("qkv_with_bias",t.dataType,u),z=qe("qkv",t.dataType,u),B=qe("bias",s.dataType,u),V=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${C.registerUniforms(V).declareVariables(z,B,d)}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:k},{inputs:[t,s],outputs:[-1]})[0]},ln=(e,t,s,n,o,a,i,u)=>{let p=a;if(i&&ze.size(i.dims)>0){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=ua(e,a,i,t,n,s*o,u),p=p.reshape([t,n,s,o]),s===1||n===1?p:e.compute(cr(p,la.perm),{inputs:[p],outputs:[-1]})[0]}else return a.dims.length===3&&(p=a.reshape([t,n,s,o])),s===1||n===1?p:e.compute(cr(p,la.perm),{inputs:[p],outputs:[-1]})[0]},lp=(e,t)=>{let s=hd(e.inputs,t),n=e.inputs[0],o=nr(e.inputs,1),a=nr(e.inputs,2),i=nr(e.inputs,3),u=nr(e.inputs,4),p=nr(e.inputs,5),h=nr(e.inputs,6),k=nr(e.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if((o==null?void 0:o.dims.length)===5)throw new Error("Packed KV is not implemented");let C=o&&a&&o.dims.length===4&&a.dims.length===4,d=ln(e,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,n,i,0);if(C)return Nn(e,d,o,a,u,void 0,h,k,p,s);if(!o||!a)throw new Error("key and value must be provided");let z=ln(e,s.batchSize,s.numHeads,s.kvSequenceLength,s.headSize,o,i,s.hiddenSize),B=ln(e,s.batchSize,s.numHeads,s.kvSequenceLength,s.vHeadSize,a,i,2*s.hiddenSize);Nn(e,d,z,B,u,void 0,h,k,p,s)}}),fd,da,gd,wd,ko,yd,Md,ca=g(()=>{zt(),Ot(),rs(),Yt(),fd=e=>{if(!e||e.length<1)throw new Error("too few inputs")},da=(e,t)=>{let s=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(o=>s.push(Number(o))),n=s.length),Bt({numOutputs:n,axis:t.axis,splitSizes:s})},gd=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${$t("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,wd=e=>{let t=e.length,s=[];for(let n=0;n<t;++n){let o=e[n].setByIndices("indices","input[global_idx]");t===1?s.push(o):n===0?s.push(`if (output_number == ${n}u) { ${o} }`):n===t-1?s.push(`else { ${o} }`):s.push(`else if (output_number == ${n}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${s.join(`
`)}
      }`},ko=(e,t)=>{let s=e[0].dims,n=ze.size(s),o=e[0].dataType,a=ze.normalizeAxis(t.axis,s.length),i=new Array(t.numOutputs),u=qe("input",o,s.length),p=new Array(t.numOutputs),h=[],k=[],C=0,d=[{type:12,data:n}];for(let B=0;B<t.numOutputs;B++){C+=t.splitSizes[B],p[B]=C;let V=s.slice();V[a]=t.splitSizes[B],k.push(V),i[B]=At(`output${B}`,o,V.length),h.push({dims:k[B],dataType:e[0].dataType})}d.push({type:12,data:p},...yt(s,...k));let z=B=>`
  ${B.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(u,...i)}
  ${gd(p.length)}
  ${wd(i)}

  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${u.offsetToIndices("global_idx")};
    var index = ${u.indicesGet("indices",a)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${$t("uniforms.size_in_split_axis","output_number - 1u",p.length)};
      ${u.indicesSet("indices",a,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:z,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:d})}},yd=(e,t)=>{fd(e.inputs);let s=e.inputs.length===1?t:da(e.inputs,t);e.compute(ko(e.inputs,s),{inputs:[0]})},Md=e=>{let t=e.axis,s=e.splitSizes,n=e.numOutputs<0?s.length:e.numOutputs;if(n!==s.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Bt({axis:t,numOutputs:n,splitSizes:s})}}),up,dp,So,pa,cp=g(()=>{rs(),li(),_d(),ca(),Gr(),up=(e,t)=>{if(t.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let s=e[0],n=e[1],o=e[2],a=e[3],i=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(s.dims.length!==3&&s.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let u=!1,p=s.dims[0],h=s.dims[1],k=s.dims.length===3?u?s.dims[2]/3:s.dims[2]:t.numHeads*s.dims[4],C=h,d=0,z=!n||n.dims.length===0,B=Math.floor(z?k/(t.numHeads+2*t.kvNumHeads):k/t.numHeads);z&&(k=B*t.numHeads);let V=a&&a.dims.length!==0,Z=i&&i.dims.length!==0;if(V&&a.dims.length===4&&a.dims[0]===p&&a.dims[1]!==t.kvNumHeads&&a.dims[2]===t.kvNumHeads&&a.dims[3]===B)throw new Error("BSNH pastKey/pastValue is not supported");if(V&&Z){if(a.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(i.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');d=a.dims[2]}else if(V||Z)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let ee=1;if(n&&n.dims.length>0){if(s.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(s.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(s.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');C=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==B)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');C=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==B)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');C=n.dims[2]}}else{if(s.dims.length!==3&&s.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(s.dims.length===5&&(s.dims[2]!==t.numHeads||s.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');ee=3}let Y=0,he=!1,pe=t.kvNumHeads?B*t.kvNumHeads:k;if(o&&o.dims.length>0){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(s.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(C!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');pe=o.dims[2]}else{if(C!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');pe=o.dims[1]*o.dims[3],he=!0}}let Me=e.length>4?e[5]:void 0;if(Me&&Me.dims.length!==1&&Me.dims[0]!==p)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:p,sequenceLength:h,pastSequenceLength:d,kvSequenceLength:C,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:k,vHiddenSize:pe,headSize:B,vHeadSize:Math.floor(pe/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:Y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:he,qkvFormat:ee}},dp=Bt({perm:[0,2,1,3]}),So=(e,t,s)=>{let n=t,o=s.kvNumHeads;return t.dims.length===3&&s.kvSequenceLength!==0&&(n=t.reshape([s.batchSize,s.kvSequenceLength,o,s.headSize]),n=e.compute(cr(n,dp.perm),{inputs:[n],outputs:[-1]})[0]),n},pa=(e,t)=>{var Z;let s=up(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((Z=e.inputs[1])==null?void 0:Z.dims.length)===5)throw new Error("Packed KV is not implemented");let n=e.inputs[0],o=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,a=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,u=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,p=e.inputs.length>4?e.inputs[5]:void 0,h=e.inputs.length>5?e.inputs[6]:void 0,k=s.kvNumHeads?s.kvNumHeads:s.numHeads,C=Bt({axis:2,numOutputs:3,splitSizes:[s.numHeads*s.headSize,k*s.headSize,k*s.headSize]}),[d,z,B]=!o&&!a?e.compute(ko([n],C),{inputs:[n],outputs:[-1,-1,-1]}):[n,o,a],V=ln(e,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,d,void 0,0);Nn(e,V,So(e,z,s),So(e,B,s),void 0,void 0,i,u,void 0,s,p,h)}}),ha,ma,bd,vd,xd=g(()=>{zt(),Ot(),Gr(),Yt(),ha=(e,t,s,n,o,a,i,u)=>{let p=qt(a),h=p===1?"f32":`vec${p}f`,k=p===1?"vec2f":`mat2x${p}f`,C=o*i,d=64;C===1&&(d=256);let z=[o,i,a/p],B=[o,i,2],V=["rank","type","type"],Z=[];Z.push(...yt(z,B));let ee=Y=>{let he=qe("x",t.dataType,3,p),pe=qe("scale",s.dataType,s.dims),Me=qe("bias",n.dataType,n.dims),Fe=At("output",1,3,2),Le=[he,pe,Me,Fe];return`
  var<workgroup> workgroup_shared : array<${k}, ${d}>;
  const workgroup_size = ${d}u;
  ${Y.declareVariables(...Le)}
  ${Y.mainStart(d)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${h}(0);
    var squared_sum = ${h}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${h}(${he.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${k}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Gs("workgroup_shared[0][0]",p)} / f32(hight * ${p});
      let squared_sum_final = ${Gs("workgroup_shared[0][1]",p)} / f32(hight * ${p});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${u}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${u};${d}`,inputDependencies:V},getRunData:()=>({outputs:[{dims:B,dataType:1}],dispatchGroup:{x:C},programUniforms:Z}),getShaderSource:ee},{inputs:[t,s,n],outputs:[-1]})[0]},ma=(e,t,s)=>{let n=t[0].dims,o=n,a=2,i=n[0],u=n[1],p=ze.sizeFromDimension(n,a),h=qt(p),k=ze.size(o)/h,C=ha(e,t[0],t[1],t[2],i,p,u,s.epsilon),d=[i,u,p/h],z=[i,u],B=["type","none"],V=Z=>{let ee=qe("x",t[0].dataType,d.length,h),Y=qe("scale_shift",1,z.length,2),he=At("output",t[0].dataType,d.length,h),pe=[ee,Y,he];return`
  ${Z.registerUniform("output_size","u32").declareVariables(...pe)}
  ${Z.mainStart()}
  ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${he.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${Y.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${ee.getByOffset("global_idx")} * ${he.type.value}(scale_shift.x) + ${he.type.value}(scale_shift.y);
      ${he.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${h}`,inputDependencies:B},getRunData:()=>({outputs:[{dims:o,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:[{type:12,data:k},...yt(d,z,d)]}),getShaderSource:V},{inputs:[t[0],C]})},bd=(e,t,s)=>{let n=t[0].dims,o=n,a=n[0],i=n[n.length-1],u=ze.sizeFromDimension(n,1)/i,p=qt(i),h=ze.size(o)/p,k=[{type:12,data:u},{type:12,data:Math.floor(i/p)}],C=["type","type"],d=!1,z=[0,n.length-1];for(let ee=0;ee<n.length-2;ee++)d=d||n[ee+1]!==1,z.push(ee+1);d=d&&n[n.length-1]!==1;let B=d?e.compute(cr(e.inputs[0],z),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:n.length},(ee,Y)=>n[z[Y]])),V=ha(e,B,t[1],t[2],a,u,i,s.epsilon),Z=ee=>{let Y=_s(t[0].dataType),he=p===1?"vec2f":`mat${p}x2f`,pe=Le=>{let Ye=Le===0?"x":"y",at=p===1?"f32":`vec${p}f`;switch(p){case 1:return`${Y}(${at}(scale.${Ye}))`;case 2:return`vec2<${Y}>(${at}(scale[0].${Ye}, scale[1].${Ye}))`;case 4:return`vec4<${Y}>(${at}(scale[0].${Ye}, scale[1].${Ye}, scale[2].${Ye}, scale[3].${Ye}))`;default:throw new Error(`Not supported compoents ${p}`)}},Me=qe("input",t[0].dataType,t[0].dims,p),Fe=At("output",t[0].dataType,o,p);return`
  @group(0) @binding(0) var<storage, read> input : array<${Me.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${he}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${Fe.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${ee.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${pe(0)}, ${pe(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:o,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:k}),getShaderSource:Z},{inputs:[t[0],V]})},vd=(e,t)=>{t.format==="NHWC"?bd(e,e.inputs,t):ma(e,e.inputs,t)}}),Td,Ed,_a,pp=g(()=>{zt(),Ot(),Yt(),Td=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ed=(e,t,s)=>{let n=t.simplified,o=e[0].dims,a=e[1],i=!n&&e[2],u=o,p=ze.normalizeAxis(t.axis,o.length),h=ze.sizeToDimension(o,p),k=ze.sizeFromDimension(o,p),C=ze.size(a.dims),d=i?ze.size(i.dims):0;if(C!==k||i&&d!==k)throw new Error(`Size of X.shape()[axis:] == ${k}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${C} and bias size of ${d}`);let z=[];for(let Me=0;Me<o.length;++Me)Me<p?z.push(o[Me]):z.push(1);let B=qt(k),V=["type","type"],Z=[{type:12,data:h},{type:1,data:k},{type:12,data:Math.floor(k/B)},{type:1,data:t.epsilon}];i&&V.push("type");let ee=s>1,Y=s>2,he=Me=>{let Fe=_s(e[0].dataType),Le=[qe("x",e[0].dataType,e[0].dims,B),qe("scale",a.dataType,a.dims,B)];i&&Le.push(qe("bias",i.dataType,i.dims,B)),Le.push(At("output",e[0].dataType,u,B)),ee&&Le.push(At("mean_data_output",1,z)),Y&&Le.push(At("inv_std_output",1,z));let Ye=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${Me.registerUniforms(Ye).declareVariables(...Le)}
  ${Me.mainStart()}
    ${Me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Ls("f32",B)};
    var mean_square_vector = ${Ls("f32",B)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${$s(Fe,B,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Gs("mean_vector",B)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Gs("mean_square_vector",B)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${$s(Fe,B,"x[j + offset]")};
      let f32scale = ${$s(Fe,B,"scale[j]")};
      output[j + offset] = ${Le[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${$s(Fe,B,"bias[j]")}`:""}
      );
    }

    ${ee?"mean_data_output[global_idx] = mean":""};
    ${Y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},pe=[{dims:u,dataType:e[0].dataType}];return ee&&pe.push({dims:z,dataType:1}),Y&&pe.push({dims:z,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${B};${s};${n}`,inputDependencies:V},getRunData:()=>({outputs:pe,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:Z}),getShaderSource:he}},_a=(e,t)=>{Td(e.inputs),e.compute(Ed(e.inputs,t,e.outputCount))}}),Pd,Cd,hp=g(()=>{Ot(),_o(),Ni(),Pd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Cd=e=>{Pd(e.inputs);let t=Ws.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let s=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];if(s<8&&n<8)e.compute(Li(e.inputs,{activation:""},t));else{let o=t[t.length-2],a=ze.size(e.inputs[0].dims.slice(0,-2)),i=ze.size(e.inputs[1].dims.slice(0,-2));if(a!==1&&o===1&&i===1){let u=e.inputs[0].reshape([1,a,n]),p=e.inputs[1].reshape([1,n,s]),h=[1,a,s],k=[u,p];e.compute(go(k,{activation:""},t,h),{inputs:k})}else e.compute(go(e.inputs,{activation:""},t))}}}),kd,Sd,$d,Id,Ad,Od=g(()=>{zt(),Ot(),rs(),Yt(),kd=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let s=e[0],n=s.dims.length;if(s.dims[n-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let o=Math.floor((t.k+t.blockSize-1)/t.blockSize),a=t.blockSize/8*t.bits,i=e[1];if(!ze.areEqual(i.dims,[t.n,o,a]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=e[2].dims;if(ze.size(u)!==t.n*o)throw new Error("scales input size error.");if(e.length===4){let p=e[3].dims,h=t.bits>4?t.n*o:t.n*Math.floor((o+1)/2);if(ze.size(p)!==h)throw new Error("zeroPoints input size error.")}},Sd=(e,t)=>{let s=e[0].dims,n=s.length,o=s[n-2],a=t.k,i=t.n,u=s.slice(0,n-2),p=ze.size(u),h=e[1].dims[2]/4,k=e[0].dataType,C=qt(t.k),d=qt(h),z=qt(i),B=u.concat([o,i]),V=o>1&&i/z%2===0?2:1,Z=ze.size(B)/z/V,ee=64,Y=[],he=[p,o,a/C],pe=ze.convertShape(e[1].dims).slice();pe.splice(-1,1,h/d),Y.push(...yt(he)),Y.push(...yt(pe)),Y.push(...yt(e[2].dims)),e.length===4&&Y.push(...yt(ze.convertShape(e[3].dims)));let Me=[p,o,i/z];Y.push(...yt(Me));let Fe=Le=>{let Ye=he.length,at=qe("a",e[0].dataType,Ye,C),Et=qe("b",12,pe.length,d),Xt=qe("scales",e[2].dataType,e[2].dims.length),Zt=[at,Et,Xt],bt=e.length===4?qe("zero_points",12,e[3].dims.length):void 0;bt&&Zt.push(bt);let ss=Me.length,St=At("output",e[0].dataType,ss,z),Ft=_s(e[0].dataType),bs=(()=>{switch(C){case 1:return`array<${Ft}, 8>`;case 2:return`mat4x2<${Ft}>`;case 4:return`mat2x4<${Ft}>`;default:throw new Error(`${C}-component is not supported.`)}})(),Ht=()=>{let it=`
          // reuse a data
            var input_offset = ${at.indicesToOffset(`${at.type.indices}(batch, row, word_offset)`)};
            var a_data: ${bs};
            for (var j: u32 = 0; j < ${8/C}; j++) {
              a_data[j] = ${at.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let Pt=0;Pt<z*V;Pt++)it+=`
            b_value = ${d===1?`b${Pt}_data`:`b${Pt}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${bs}(${Array.from({length:4},(ps,Ns)=>`${Ft}(b_value_lower[${Ns}]), ${Ft}(b_value_upper[${Ns}])`).join(", ")});
            b_dequantized_values = ${C===1?`${bs}(${Array.from({length:8},(ps,Ns)=>`(b_quantized_values[${Ns}] - ${bt?`zero_point${Pt}`:"zero_point"}) * scale${Pt}`).join(", ")});`:`(b_quantized_values - ${bs}(${Array(8).fill(`${bt?`zero_point${Pt}`:"zero_point"}`).join(",")})) * scale${Pt};`};
            workgroup_shared[local_id.x * ${V} + ${Math.floor(Pt/z)}]${z>1?`[${Pt%z}]`:""} += ${Array.from({length:8/C},(ps,Ns)=>`${C===1?`a_data[${Ns}] * b_dequantized_values[${Ns}]`:`dot(a_data[${Ns}], b_dequantized_values[${Ns}])`}`).join(" + ")};
          `;return it},Rt=()=>{let it=`
            var col_index = col * ${z};
            ${bt?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Ft}(8);`}
            `;for(let Pt=0;Pt<z*V;Pt++)it+=`
            let scale${Pt} = ${Xt.getByOffset("col_index * nBlocksPerCol + block")};
            ${bt?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${bt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${Pt} = ${Ft}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return it},fs=()=>{let it=`col_index = col * ${z};`;for(let Pt=0;Pt<z*V;Pt++)it+=`
            let b${Pt}_data = ${Et.getByIndices(`${Et.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return it+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${bs};
            var b_dequantized_values: ${bs};`,it};return`
        var<workgroup> workgroup_shared: array<${St.type.value}, ${V*ee}>;
        ${Le.declareVariables(...Zt,St)}
        ${Le.mainStart([ee,1,1])}
          let output_indices = ${St.offsetToIndices(`(global_idx / ${ee}) * ${V}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${ee}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/C};
            ${Rt()}
            for (var word: u32 = 0; word < ${h}; word += ${d}) {
              ${fs()}
              for (var i: u32 = 0; i < ${d}; i++) {
                ${Ht()}
                word_offset += ${8/C};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${V}) {
            var output_value: ${St.type.value} = ${St.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${ee}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${V};
            }
            ${St.setByIndices(`${St.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${C};${d};${z};${V};${ee}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:B,dataType:k}],dispatchGroup:{x:Z},programUniforms:Y}),getShaderSource:Fe}},$d=(e,t)=>{let s=e[0].dims,n=s.length,o=s[n-2],a=t.k,i=t.n,u=s.slice(0,n-2),p=ze.size(u),h=e[1].dims[2]/4,k=e[0].dataType,C=qt(t.k),d=qt(h),z=u.concat([o,i]),B=128,V=i%8===0?8:i%4===0?4:1,Z=B/V,ee=Z*d*8,Y=ee/C,he=ee/t.blockSize,pe=ze.size(z)/V,Me=[],Fe=[p,o,a/C],Le=ze.convertShape(e[1].dims).slice();Le.splice(-1,1,h/d),Me.push(...yt(Fe)),Me.push(...yt(Le)),Me.push(...yt(e[2].dims)),e.length===4&&Me.push(...yt(ze.convertShape(e[3].dims)));let Ye=[p,o,i];Me.push(...yt(Ye));let at=Et=>{let Xt=Fe.length,Zt=qe("a",e[0].dataType,Xt,C),bt=qe("b",12,Le.length,d),ss=qe("scales",e[2].dataType,e[2].dims.length),St=[Zt,bt,ss],Ft=e.length===4?qe("zero_points",12,e[3].dims.length):void 0;Ft&&St.push(Ft);let bs=Ye.length,Ht=At("output",e[0].dataType,bs),Rt=_s(e[0].dataType),fs=()=>{switch(C){case 1:return`
          let a_data0 = vec4<${Rt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Rt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Rt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Rt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${C}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Zt.type.value}, ${Y}>;
        var<workgroup> inter_results: array<array<${Ht.type.value}, ${Z}>, ${V}>;
        ${Et.declareVariables(...St,Ht)}
        ${Et.mainStart([Z,V,1])}
          let output_indices = ${Ht.offsetToIndices(`workgroup_index * ${V}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${he} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${Y};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${Y}; a_offset += ${B})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Zt.getByIndices(`${Zt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Zt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${he} + local_id.x;
            ${Ft?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Ft.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Rt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Rt}(8);`}
            let scale = ${ss.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${bt.getByIndices(`${bt.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/C};
            for (var i: u32 = 0; i < ${d}; i++) {
              ${fs()}
              let b_value = ${d===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Rt}>(${Array.from({length:4},(it,Pt)=>`${Rt}(b_value_lower[${Pt}]), ${Rt}(b_value_upper[${Pt}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Rt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(it,Pt)=>`${`dot(a_data${Pt}, b_dequantized_values[${Pt}])`}`).join(" + ")};
              word_offset += ${8/C};
            }
            workgroupBarrier();
          }

          if (local_idx < ${V}) {
            var output_value: ${Ht.type.value} = ${Ht.type.value}(0);
            for (var b = 0u; b < ${Z}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${Ht.setByIndices(`${Ht.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${C};${d};${Z};${V}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:z,dataType:k}],dispatchGroup:{x:pe},programUniforms:Me}),getShaderSource:at}},Id=(e,t)=>{kd(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute($d(e.inputs,t)):e.compute(Sd(e.inputs,t))},Ad=e=>Bt(e)}),Fd,Dd,fa,Ld,zd,gs,mp,_p,fp,Bd=g(()=>{zt(),Ot(),Yt(),Fd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Dd=(e,t,s)=>{let n="";for(let o=t-1;o>=0;--o)n+=`
            k = i32(${e.indicesGet("indices",o)}) - ${$t("uniforms.pads",o,s)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${$t("uniforms.x_shape",o,t)})) {
              break;
            }
            offset += k * i32(${$t("uniforms.x_strides",o,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},fa=(e,t,s)=>{let n="";for(let o=t-1;o>=0;--o)n+=`
                k = i32(${e.indicesGet("indices",o)}) - ${$t("uniforms.pads",o,s)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${$t("uniforms.x_shape",o,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${$t("uniforms.x_shape",o,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${$t("uniforms.x_strides",o,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Ld=(e,t,s)=>{let n="";for(let o=t-1;o>=0;--o)n+=`
                k = i32(${e.indicesGet("indices",o)}) - ${$t("uniforms.pads",o,s)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${$t("uniforms.x_shape",o,t)})) {
                  k = i32(${$t("uniforms.x_shape",o,t)}) - 1;
                }
                offset += k * i32(${$t("uniforms.x_strides",o,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},zd=(e,t,s)=>{let n="";for(let o=t-1;o>=0;--o)n+=`
                k = i32(${e.indicesGet("indices",o)}) - ${$t("uniforms.pads",o,s)};
                if (k < 0)  {
                  k += i32(${$t("uniforms.x_shape",o,t)}]);
                }
                if (k >= i32(${$t("uniforms.x_shape",o,t)})) {
                  k -= i32(${$t("uniforms.x_shape",o,t)});
                }
                offset += k * i32(${$t("uniforms.x_strides",o,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},gs=(e,t,s)=>{switch(s.mode){case 0:return Dd(e,t,s.pads.length);case 1:return fa(e,t,s.pads.length);case 2:return Ld(e,t,s.pads.length);case 3:return zd(e,t,s.pads.length);default:throw new Error("Invalid mode")}},mp=(e,t)=>{let s=ze.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,o=ze.size(s),a=[{type:12,data:o},{type:6,data:t.pads}],i=e.length>=3&&e[2].data;t.mode===0&&a.push({type:i?e[2].dataType:1,data:t.value}),a.push(...yt(e[0].dims,s));let u=["rank"],p=h=>{let k=At("output",e[0].dataType,s.length),C=qe("x",e[0].dataType,n.length),d=C.type.value,z=gs(k,n.length,t),B=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&B.push({name:"constant_value",type:i?d:"f32"}),`
            ${h.registerUniforms(B).declareVariables(C,k)}
            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${k.offsetToIndices("global_idx")};

            var value = ${d}(0);
            ${z}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${i}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ze.size(s)/64)},programUniforms:a}),getShaderSource:p}},_p=(e,t)=>{if(e.length>1){let s=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,o=e[0].dims.length,a=new Int32Array(2*o).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let p=0;p<u.length;p++)a[Number(u[p])]=Number(s[p]),a[Number(u[p])+o]=Number(s[p+u.length])}else s.forEach((u,p)=>a[Number(p)]=Number(u));let i=[];return a.forEach(u=>i.push(u)),{mode:t.mode,value:n,pads:i}}else return t},fp=(e,t)=>{Fd(e.inputs);let s=_p(e.inputs,t);e.compute(mp(e.inputs,s),{inputs:[0]})}}),Kn,ga,wa,ya,$o,Ma,gp,ba,va,xa,wp,Rd,Nd,jd,Ta,Ud,Vd,Wd,Gd,yp=g(()=>{We(),zt(),Ot(),Yt(),Kn=e=>{if(F.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},ga=(e,t,s)=>{let n=t.format==="NHWC",o=e.dims.slice();n&&o.splice(1,0,o.pop());let a=Object.hasOwnProperty.call(t,"dilations"),i=t.kernelShape.slice(),u=t.strides.slice(),p=a?t.dilations.slice():[],h=t.pads.slice();Js.adjustPoolAttributes(s,o,i,u,p,h);let k=Js.computePoolOutputShape(s,o,u,p,i,h,t.autoPad),C=Object.assign({},t);a?Object.assign(C,{kernelShape:i,strides:u,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(C,{kernelShape:i,strides:u,pads:h,cacheKey:t.cacheKey});let d=k.slice();return d.push(d.splice(1,1)[0]),[C,n?d:k]},wa=(e,t)=>{let s=t.format==="NHWC",n=ze.size(e),o=ze.size(t.kernelShape),a=[{type:12,data:n},{type:12,data:o}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],k=t.pads[t.pads.length-1],C=!!(h+k);a.push({type:12,data:u},{type:12,data:p},{type:12,data:h},{type:12,data:k}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let d=!1;if(t.kernelShape.length===2){let z=t.kernelShape[t.kernelShape.length-2],B=t.strides[t.strides.length-2],V=t.pads[t.pads.length/2-2],Z=t.pads[t.pads.length-2];d=!!(V+Z),a.push({type:12,data:z},{type:12,data:B},{type:12,data:V},{type:12,data:Z}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[a,i,!0,C,d]}else{if(s)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let u=ze.computeStrides(t.kernelShape);a.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),i.push({name:"kernelStrides",type:"u32",length:u.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,k)=>h+k);return[a,i,!!p,!1,!1]}},ya=(e,t,s,n,o,a,i,u,p,h,k,C)=>{let d=o.format==="NHWC",z=t.type.value,B=At("output",t.type.tensor,n);if(o.kernelShape.length<=2){let V="",Z="",ee="",Y=s-(d?2:1);if(k?V=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Y}] = indices[${Y}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${Y}] < 0 || xIndices[${Y}]
                      >= uniforms.x_shape[${Y}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${a}
                }`:V=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Y}] = indices[${Y}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${a}
                }`,o.kernelShape.length===2){let he=s-(d?3:2);C?Z=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${he}] = indices[${he}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${he}] < 0 || xIndices[${he}] >= uniforms.x_shape[${he}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:Z=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${he}] = indices[${he}] * uniforms.sh - uniforms.phStart + j;
                `,ee=`
              }
            `}return`
            ${e.registerUniforms(p).declareVariables(t,B)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${B.offsetToIndices("global_idx")};
              var xIndices = ${B.offsetToIndices("global_idx")};

              var value = ${z}(${u});
              var pad = 0;
              ${Z}
              ${V}
              ${ee}
              ${i}

              output[global_idx] = value;
            }`}else{if(d)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let V=o.kernelShape.length,Z=o.pads.length,ee="";return h?ee=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${a}
              }`:ee=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${a}
            `,`
            ${e.registerUniforms(p).declareVariables(t,B)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${B.offsetToIndices("global_idx")};
              var xIndices = ${B.offsetToIndices("global_idx")};

              var offsets: array<u32, ${V}>;

              var value = ${z}(${u});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${V-1}u; j++) {
                  offsets[j] = offset / ${$t("uniforms.kernelStrides","j",V)};
                  offset -= offsets[j] * ${$t("uniforms.kernelStrides","j",V)};
                }
                offsets[${V-1}] = offset;

                isPad = false;
                for (var j = ${s-V}u; j < ${s}u; j++) {
                  xIndices[j] = indices[j] * ${$t("uniforms.strides",`j - ${s-V}u`,V)}
                    + offsets[j - ${s-V}u] - ${$t("uniforms.pads","j - 2u",Z)};
                  ${ee}
              }
              ${i}

              output[global_idx] = value;
            }`}},$o=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ma=e=>`${$o(e)};${e.countIncludePad}`,gp=e=>`${$o(e)};${e.storageOrder};${e.dilations}`,ba=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),va=(e,t,s,n)=>{let[o,a]=ga(t,n,s),i=qe("x",t.dataType,t.dims.length),u=i.type.value,p="value += x_val;",h="";o.countIncludePad?h+=`value /= ${u}(uniforms.kernelSize);`:h+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[k,C,d,z,B]=wa(a,o);k.push(...yt(t.dims,a));let V=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${d};${z};${B}`,inputDependencies:V},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ze.size(a)/64)},programUniforms:k}),getShaderSource:Z=>ya(Z,i,t.dims.length,a.length,o,p,h,0,C,d,z,B)}},xa=e=>{let t=e.count_include_pad!==0,s=ba(e);if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...s,cacheKey:""};return{...n,cacheKey:Ma(n)}},wp=(e,t)=>{Kn(e.inputs),e.compute(va("AveragePool",e.inputs[0],!1,t))},Rd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Nd=e=>{let t=e.format;return{format:t,...Rd,cacheKey:t}},jd=(e,t)=>{Kn(e.inputs),e.compute(va("GlobalAveragePool",e.inputs[0],!0,t))},Ta=(e,t,s,n)=>{let[o,a]=ga(t,n,s),i=`
      value = max(x_val, value);
    `,u="",p=qe("x",t.dataType,t.dims.length),h=["rank"],[k,C,d,z,B]=wa(a,o);return k.push(...yt(t.dims,a)),{name:e,shaderCache:{hint:`${n.cacheKey};${d};${z};${B}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ze.size(a)/64)},programUniforms:k}),getShaderSource:V=>ya(V,p,t.dims.length,a.length,o,i,u,t.dataType===10?-65504:-1e5,C,d,z,B)}},Ud=(e,t)=>{Kn(e.inputs),e.compute(Ta("MaxPool",e.inputs[0],!1,t))},Vd=e=>{let t=e.storage_order,s=e.dilations,n=ba(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:t,dilations:s,...n,cacheKey:""};return{...o,cacheKey:gp(o)}},Wd=e=>{let t=e.format;return{format:t,...Rd,cacheKey:t}},Gd=(e,t)=>{Kn(e.inputs),e.compute(Ta("GlobalMaxPool",e.inputs[0],!0,t))}}),Kd,Hd,qd,Qd,Hp=g(()=>{zt(),Ot(),rs(),Yt(),Kd=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((s,n)=>s===e[2].dims[n]).reduce((s,n)=>s&&n,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((o,a)=>a===t.axis||o===e[0].dims[a]).reduce((o,a)=>o&&a,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let s=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(s/n)||t.blockSize>Math.ceil(s/(n-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Hd=(e,t)=>{let s=ze.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,o=n===3,a=e[0].dims,i=e[1].dataType,u=ze.size(a),p=n===3||n===2,h=p?[Math.ceil(ze.size(e[0].dims)/4)]:e[0].dims,k=e[1].dims,C=e.length>2?e[2]:void 0,d=C?p?[Math.ceil(ze.size(C.dims)/4)]:C.dims:void 0,z=k.length===0||k.length===1&&k[0]===1,B=z===!1&&k.length===1,V=qt(u),Z=z&&(!p||V===4),ee=Z?V:1,Y=Z&&!p?V:1,he=qe("input",p?12:n,h.length,Y),pe=qe("scale",i,k.length),Me=C?qe("zero_point",p?12:n,d.length):void 0,Fe=At("output",i,a.length,ee),Le=[he,pe];Me&&Le.push(Me);let Ye=[h,k];C&&Ye.push(d);let at=[{type:12,data:u/ee},{type:12,data:s},{type:12,data:t.blockSize},...yt(...Ye,a)],Et=Xt=>{let Zt=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${Xt.registerUniforms(Zt).declareVariables(...Le,Fe)}
      ${Xt.mainStart()}
          ${Xt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Fe.offsetToIndices("global_idx")};

          // Set input x
          ${p?`
            let input = ${he.getByOffset("global_idx / 4")};
            let x_vec = ${o?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${ee===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${he.getByOffset("global_idx")};`};

          // Set scale input
          ${z?`let scale_value= ${pe.getByOffset("0")}`:B?`
            let scale_index = ${Fe.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${pe.getByOffset("scale_index")};`:`
            var scale_indices: ${pe.type.indices} = output_indices;
            let index = ${pe.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${pe.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${pe.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${Me?z?p?`
                let zero_point_input = ${Me.getByOffset("0")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${Me.getByOffset("0")}`:B?p?`
                let zero_point_index = ${Fe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${Me.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Fe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${Me.getByOffset("zero_point_index")};`:p?`
                let zero_point_offset = ${pe.indicesToOffset("scale_indices")};
                let zero_point_input = ${Me.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${Me.getByIndices("scale_indices")};`:`let zero_point_value = ${p?o?"i32":"u32":he.type.value}(0);`};
      // Compute and write output
      ${Fe.setByOffset("global_idx",`${Fe.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:Me?["rank","rank","rank"]:["rank","rank"]},getShaderSource:Et,getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(u/ee/64),y:1,z:1},programUniforms:at})}},qd=(e,t)=>{Kd(e.inputs,t),e.compute(Hd(e.inputs,t))},Qd=e=>Bt({axis:e.axis,blockSize:e.blockSize})}),Xd,Yd,Jd,Mp=g(()=>{We(),zt(),Yt(),Xd=(e,t,s)=>{let n=e===t,o=e<t&&s<0,a=e>t&&s>0;if(n||o||a)throw new Error("Range these inputs' contents are invalid.")},Yd=(e,t,s,n)=>{let o=Math.abs(Math.ceil((t-e)/s)),a=[o],i=o,u=[{type:12,data:i},{type:n,data:e},{type:n,data:s},...yt(a)],p=h=>{let k=At("output",n,a.length),C=k.type.value,d=[{name:"outputSize",type:"u32"},{name:"start",type:C},{name:"delta",type:C}];return`
        ${h.registerUniforms(d).declareVariables(k)}
        ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${C}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:a,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:u})}},Jd=e=>{let t=0,s=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],s=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],s=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),F.webgpu.validateInputContent&&Xd(t,s,n),e.compute(Yd(t,s,n,e.inputs[0].dataType),{inputs:[]})}}),Zd,ec,bp,Ea,vp=g(()=>{zt(),Ot(),rs(),Yt(),Zd=(e,t,s,n)=>{if(e!=="none"&&n!=="i32"&&n!=="u32"&&n!=="f32")throw new Error(`Input ${n} is not supported with reduction ${e}.`);let o=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,a=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${t}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${t}=${s};`;case"add":return n==="i32"||n==="u32"?`atomicAdd(&${t}, bitcast<${n}>(${s}));`:`
              ${o}bitcast<${n}>(oldValue) + (${s})${a}`;case"max":return n==="i32"||n==="u32"?`atomicMax(&${t}, bitcast<${n}>(${s}));`:`
                ${o}max(bitcast<f32>(oldValue), (${s}))${a}`;case"min":return n==="i32"||n==="u32"?`atomicMin(&${t}, bitcast<${n}>(${s}));`:`${o}min(bitcast<${n}>(oldValue), (${s}))${a}`;case"mul":return`${o}(bitcast<${n}>(oldValue) * (${s}))${a}`;default:throw new Error(`Reduction ${e} is not supported.`)}},ec=(e,t)=>{let s=e[0].dims,n=e[1].dims,o=s,a=1,i=Math.ceil(ze.size(n)/a),u=n[n.length-1],p=ze.sizeFromDimension(s,u),h=[{type:12,data:i},{type:12,data:u},{type:12,data:p},...yt(e[1].dims,e[2].dims,o)],k=C=>{let d=qe("indices",e[1].dataType,e[1].dims.length),z=qe("updates",e[2].dataType,e[2].dims.length,a),B=t.reduction!=="none"&&t.reduction!==""?La("output",e[0].dataType,o.length):At("output",e[0].dataType,o.length,a);return`
      ${C.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(d,z,B)}
      ${C.mainStart()}
        ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${e[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${Zd(t.reduction,"output[data_offset + i]","value",B.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${t.cacheKey}_${t.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:h}),getShaderSource:k}},bp=e=>Bt({reduction:e.reduction}),Ea=(e,t)=>{e.compute(ec(e.inputs,t),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),tc,sc,rc,nc,oc,ic,ac,lc,uc,dc,cc,Pa,pc,hc,mc,_c,fc,gc,wc,xp=g(()=>{zt(),Ot(),rs(),Yt(),tc=(e,t)=>{if(e.every(s=>s>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},sc=(e,t,s)=>{t.every(o=>o>=0&&o<s||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(s).fill(1);return t.forEach((o,a)=>n[o]=e[a]),n},rc=(e,t,s,n,o,a)=>{let[i,u,p]=s>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach(k=>a.push(k));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(u>0&&e.length>u&&e[u].dims.length===1&&e[u].dims[0]>0){if(e[u].getFloat32Array().forEach(k=>n.push(k)),n.length!==0&&n.length!==h&&s>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");tc(n,t),t.axes.length>0&&sc(n,t.axes,h).forEach((k,C)=>n[C]=k)}if(p>0&&e.length>p&&e[p].dims.length===1&&e[p].dims[0]>0&&(e[p].getBigInt64Array().forEach(k=>o.push(Number(k))),o.length!==0&&o.length!==h&&s>=18&&o.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==0&&o.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof o<"u"&&n.length>0&&o.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},nc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",oc=(e,t,s)=>`fn getNearestPixelFromOriginal(xOriginal: ${s}, isDownSample: bool) -> ${s} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",ic=(e,t,s)=>{let n=new Array(s).fill(0).concat(new Array(s).fill(1)),o=e.length===0?n:e.slice();return t.length>0?(t.forEach((a,i)=>{n[a]=o[i],n[i+s]=o[t.length+i]}),n):o},ac=(e,t,s,n)=>{let o=[];if(s.length>0)if(n.length>0){if(e.forEach(a=>o.push(a)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((a,i)=>o[a]=s[i])}else s.forEach(a=>o.push(a));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");o=e.map((a,i)=>Math.round(a*t[i]))}return o},lc=(e,t,s)=>{let n=(()=>{switch(s.keepAspectRatioPolicy){case"not_larger":return s.axes.length>0?Math.min(...s.axes.map(a=>t[a]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return s.axes.length>0?Math.max(...s.axes.map(a=>t[a]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${s.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let o=e.slice();return s.axes.length>0?(s.axes.forEach(a=>t[a]=n),s.axes.forEach(a=>o[a]=Math.round(e[a]*t[a]))):(t.fill(n,0,t.length),o.forEach((a,i)=>o[i]=Math.round(a*t[i]))),o},uc=(e,t,s,n,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${s.length}> {
      var original_indices: array<${e.type.value}, ${s.length}>;
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${$t("uniforms.scales","i",n)};
        var roi_low = ${$t("uniforms.roi","i",o)};
        var roi_hi = ${$t("uniforms.roi",`i + ${t.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${$t("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${$t("uniforms.output_shape","i",s.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,dc=(e,t,s,n,o,a,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${$t("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${$t("uniforms.roi","i",a)};
          var roi_hi = ${$t("uniforms.roi",`i + ${s.length}`,a)};
          var input_shape_i = ${$t("uniforms.input_shape","i",s.length)};
          var output_shape_i = ${$t("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,cc=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${$t("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Pa=(e,t,s,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",s,"batch")};
`:"",pc=(e,t,s,n,o)=>{let[a,i,u,p]=s.length===2?[-1,0,1,-1]:[0,2,3,1],h=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(row, ${s[i]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(col, ${s[u]} - 1))`)};
      ${Pa(e,p,a,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${h} = originalIndices[${i}];
      var col:${h} = originalIndices[${u}];
      ${n?`if (row < 0 || row > (${s[i]} - 1) || col < 0 || col > (${s[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${s[i]} - 1));
      col = max(0, min(col, ${s[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${s.length>2?`u32(originalIndices[${p}])`:"0"};
      var batch: u32 =  ${s.length>2?`u32(originalIndices[${a}])`:"0"};
      var x11: ${h} = getInputValue(batch, channel, row1, col1);
      var x12: ${h} = getInputValue(batch, channel, row1, col2);
      var x21: ${h} = getInputValue(batch, channel, row2, col1);
      var x22: ${h} = getInputValue(batch, channel, row2, col2);
      var dx1: ${h} = abs(row - ${h}(row1));
      var dx2: ${h} = abs(${h}(row2) - row);
      var dy1: ${h} = abs(col - ${h}(col1));
      var dy2: ${h} = abs(${h}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},hc=(e,t,s,n,o,a,i,u,p,h)=>{let k=s.length===2,[C,d]=k?[0,1]:[2,3],z=e.type.value,B=V=>{let Z=V===C?"row":"col";return`
      fn ${Z}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${z} {
        var output_index = ${t.indicesGet("output_indices",V)};
        var originalIdx: ${z} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[V]},
        ${n[V]}, ${s[V]}, ${a[V]}, ${a[V]} + ${s.length});
        var fractOriginalIdx: ${z} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${u} && (originalIdx < 0 || originalIdx > (${s[V]} - 1))) {
          return ${p};
        }
        var data: array<${z}, 4> = array<${z}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${Z}: ${z} = originalIdx + ${z}(i);
          if (${Z} < 0 || ${Z} >= ${s[V]}) {
            ${h?`coefs[i + 1] = 0.0;
                        continue;`:u?`return ${p};`:`${Z} = max(0, min(${Z}, ${s[V]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",V,`u32(${Z})`)};
          data[i + 1] = ${V===C?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${B(C)};
    ${B(d)};
  fn getCubicInterpolationCoefs(s: ${z}) -> array<${z}, 4> {
    var absS = abs(s);
    var coeffs: array<${z}, 4> = array<${z}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${z} = 1.0 - absS;
    var twoMinusAbsS: ${z} = 2.0 - absS;
    var onePlusAbsS: ${z} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${z}, 4>, coefs: array<${z}, 4>) -> ${z} {
    var coefsSum: ${z} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${z} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},mc=(e,t,s,n,o)=>{let[a,i,u,p,h]=s.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],k=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${k} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${s[i]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(height, ${s[u]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(width, ${s[p]} - 1))`)};
      ${Pa(e,h,a,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${k} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${k} = originalIndices[${i}];
      var height:${k} = originalIndices[${u}];
      var width:${k} = originalIndices[${p}];
      ${n?`if (depth < 0 || depth > (${s[i]} - 1) || height < 0 || height > (${s[u]} - 1) || width < 0 || (width > ${s[p]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${s[i]} - 1));
      height = max(0, min(height, ${s[u]} - 1));
      width = max(0, min(width, ${s[p]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${s.length>3?`u32(originalIndices[${h}])`:"0"};
      var batch: u32 =  ${s.length>3?`u32(originalIndices[${a}])`:"0"};

      var x111: ${k} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${k} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${k} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${k} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${k} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${k} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${k} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${k} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${k} = abs(depth - ${k}(depth1));
      var dx2: ${k} = abs(${k}(depth2) - depth);
      var dy1: ${k} = abs(height - ${k}(height1));
      var dy2: ${k} = abs(${k}(height2) - height);
      var dz1: ${k} = abs(width - ${k}(width1));
      var dz2: ${k} = abs(${k}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},_c=(e,t,s,n,o,a)=>{let i=e.dims,u=ic(a,t.axes,i.length),p=ac(i,n,o,t.axes),h=n.slice();n.length===0&&(h=i.map((Y,he)=>Y===0?1:p[he]/Y),t.keepAspectRatioPolicy!=="stretch"&&(p=lc(i,h,t)));let k=At("output",e.dataType,p.length),C=qe("input",e.dataType,i.length),d=ze.size(p),z=i.length===p.length&&i.every((Y,he)=>Y===p[he]),B=t.coordinateTransformMode==="tf_crop_and_resize",V=t.extrapolationValue,Z=C.type.value,ee=Y=>`
      ${z?"":`
      ${nc(t.coordinateTransformMode,Z)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${cc(C,i)};
              ${oc(t.nearestMode,s,Z)};
              ${dc(C,k,i,p,h.length,u.length,B)};
              `;case"linear":return`
              ${uc(k,i,p,h.length,u.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${pc(C,k,i,B,V)}`;if(i.length===3||i.length===5)return`${mc(C,k,i,B,V)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${hc(C,k,i,p,h,u,t.cubicCoeffA,B,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${Y.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",u.length).declareVariables(C,k)}
      ${Y.mainStart()}
        ${Y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${z?"output[global_idx] = input[global_idx];":`
        let output_indices = ${k.offsetToIndices("global_idx")};
        var input_indices: ${C.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${C.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${s}|${h.length>0?h:""}|${o.length>0?o:""}|${u.length>0?u:""}|${z}|${i}`,inputDependencies:["rank"]},getShaderSource:ee,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},{type:1,data:h},{type:1,data:u},...yt(i,p)]})}},fc=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},gc=(e,t)=>{let s=[],n=[],o=[],a=fc(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");rc(e.inputs,t,a,s,n,o),e.compute(_c(e.inputs[0],t,a,s,n,o),{inputs:[0]})},wc=e=>{let t=e.antialias,s=e.axes,n=e.coordinateTransformMode,o=e.cubicCoeffA,a=e.excludeOutside!==0,i=e.extrapolationValue,u=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return Bt({antialias:t,axes:s,coordinateTransformMode:n,cubicCoeffA:o,excludeOutside:a,extrapolationValue:i,keepAspectRatioPolicy:u,mode:p,nearestMode:h})}}),yc,Mc,bc,Tp=g(()=>{zt(),Ot(),rs(),Yt(),yc=(e,t)=>{let[s,n,o,a]=e,{numHeads:i,rotaryEmbeddingDim:u}=t;if(s.dims.length!==3&&s.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${s.dims.length}`);if(!ze.areEqual(n.dims,[])&&!ze.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(a.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(!ze.areEqual(o.dims,a.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(u>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=s.dims[0],h=s.dims[s.dims.length-2],k=o.dims[0],C=ze.sizeFromDimension(s.dims,1)/h,d=u===0?o.dims[1]*2:C/i;if(u>d)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(p!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(h!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(d/2!==o.dims[1]&&u/2!==o.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${o.dims[1]}`);if(h>k)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Mc=(e,t)=>{let{interleaved:s,numHeads:n,rotaryEmbeddingDim:o,scale:a}=t,i=e[0].dims[0],u=ze.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=u/p,k=e[2].dims[1],C=o===0?k*2:h/n,d=new Array(i,p,h/C,C-k),z=ze.computeStrides(d),B=[{type:1,data:a},{type:12,data:d},{type:12,data:z},...e[0].dims.length===3?new Array({type:12,data:[u,h,C,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,C,p*C,1]}):[],...yt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],V=Z=>{let ee=qe("input",e[0].dataType,e[0].dims.length),Y=qe("position_ids",e[1].dataType,e[1].dims.length),he=qe("cos_cache",e[2].dataType,e[2].dims.length),pe=qe("sin_cache",e[3].dataType,e[3].dims.length),Me=At("output",e[0].dataType,e[0].dims.length);return Z.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:d.length},{name:"global_strides",type:"u32",length:z.length},{name:"input_output_strides",type:"u32",length:z.length}]),`
        ${Z.declareVariables(ee,Y,he,pe,Me)}

        ${Z.mainStart(or)}
          let half_rotary_emb_dim = uniforms.${he.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${Y.broadcastedIndicesToOffset("bsnh.xy",At("",Y.type.tensor,2))};
            let position_id =
                u32(${Y.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${s});
            let j = i + select(half_rotary_emb_dim, 1, ${s});
            let re = ${ee.getByOffset("i")} * ${he.get("position_id","bsnh[3]")} -
                ${ee.getByOffset("j")} * ${pe.get("position_id","bsnh[3]")};
            ${Me.setByOffset("i","re")}
            let im = ${ee.getByOffset("i")} * ${pe.get("position_id","bsnh[3]")} +
                ${ee.getByOffset("j")} * ${he.get("position_id","bsnh[3]")};
            ${Me.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${Me.setByOffset("k",ee.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Bt({interleaved:s}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:V,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ze.size(d)/or)},programUniforms:B})}},bc=(e,t)=>{yc(e.inputs,t),e.compute(Mc(e.inputs,t))}}),vc,xc,Tc,qp=g(()=>{zt(),Ot(),Yt(),vc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],s=e[1],n=e[2];if(t.dataType!==s.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(s.dims.length!==3&&s.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=t.dims[t.dims.length-1],a=t.dims[t.dims.length-2];if(s.dims[s.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(s.dims[s.dims.length-2]!==a)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let i=e[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let i=e[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},xc=(e,t,s,n)=>{let o=t.simplified,a=e[0].dims,i=ze.size(a),u=a,p=i,h=a.slice(-1)[0],k=n?a.slice(0,-1).concat(1):[],C=!o&&e.length>3,d=e.length>4,z=n&&s>1,B=n&&s>2,V=s>3,Z=64,ee=qt(h),Y=[{type:12,data:p},{type:12,data:ee},{type:12,data:h},{type:1,data:t.epsilon}],he=Me=>{let Fe=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Le=[qe("x",e[0].dataType,e[0].dims,ee),qe("skip",e[1].dataType,e[1].dims,ee),qe("gamma",e[2].dataType,e[2].dims,ee)];C&&Le.push(qe("beta",e[3].dataType,e[3].dims,ee)),d&&Le.push(qe("bias",e[4].dataType,e[4].dims,ee)),Le.push(At("output",e[0].dataType,u,ee)),z&&Le.push(At("mean_output",1,k)),B&&Le.push(At("inv_std_output",1,k)),V&&Le.push(At("input_skip_bias_sum",e[0].dataType,u,ee));let Ye=_s(e[0].dataType),at=_s(1,ee);return`

      ${Me.registerUniforms(Fe).declareVariables(...Le)}
      var<workgroup> sum_shared : array<${at}, ${Z}>;
      var<workgroup> sum_squared_shared : array<${at}, ${Z}>;

      ${Me.mainStart([Z,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${Z};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${Z};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${Z-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${d?"bias[offset1d + i]":Ye+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${V?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${$s(Ye,ee,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${Z};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Gs("sum",ee)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Gs("square_sum",ee)} / f32(uniforms.hidden_size) ${o?"":"- mean * mean"} + uniforms.epsilon);
        ${z?"mean_output[global_idx] = mean;":""}
        ${B?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${o?"":`- ${Ye}(mean)`}) *
            ${Ye}(inv_std_dev) * gamma[offset1d + i]
            ${C?"+ beta[offset1d + i]":""};
        }
      }`},pe=[{dims:u,dataType:e[0].dataType}];return s>1&&pe.push({dims:k,dataType:1}),s>2&&pe.push({dims:k,dataType:1}),s>3&&pe.push({dims:a,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${ee};${z};${B};${V}`,inputDependencies:e.map((Me,Fe)=>"type")},getShaderSource:he,getRunData:()=>({outputs:pe,dispatchGroup:{x:Math.ceil(p/h)},programUniforms:Y})}},Tc=(e,t)=>{vc(e.inputs);let s=[0];e.outputCount>1&&s.push(-3),e.outputCount>2&&s.push(-3),e.outputCount>3&&s.push(3),e.compute(xc(e.inputs,t,e.outputCount,!1),{outputs:s})}}),Qt,Hn,Hs,qs,tr,un,Ep,Ec,Pp=g(()=>{zt(),Ot(),rs(),Yt(),Qt=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((s,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},Hn=(e,t)=>{let s=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>s.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>s.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return s},Hs=(e,t)=>{if(e.length>1){let s=Hn(e,1),n=Hn(e,2),o=Hn(e,3);return o.length===0&&(o=[...Array(e[0].dims.length).keys()]),Bt({starts:s,ends:n,axes:o})}else return t},qs=(e,t,s,n,o)=>{let a=e;return e<0&&(a+=s[n[t]]),o[t]<0?Math.max(0,Math.min(a,s[n[t]]-1)):Math.max(0,Math.min(a,s[n[t]]))},tr=(e,t,s)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${s.length}; i >= 0; i--) {
            let input_shape_i = ${$t("uniforms.input_shape","i",s.length)};
            let steps_i = ${$t("uniforms.steps","i",s.length)};
            let signs_i = ${$t("uniforms.signs","i",s.length)};
            let starts_i = ${$t("uniforms.starts","i",s.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,un=(e,t)=>{let s=e[0].dims,n=ze.size(s),o=t.axes.length>0?ze.normalizeAxes(t.axes,s.length):[...Array(s.length).keys()],a=Hn(e,4);a.forEach(ee=>ee!==0||(()=>{throw new Error("step cannot be 0")})),a.length===0&&(a=Array(o.length).fill(1));let i=t.starts.map((ee,Y)=>qs(ee,Y,s,o,a)),u=t.ends.map((ee,Y)=>qs(ee,Y,s,o,a));if(o.length!==i.length||o.length!==u.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==s.length)for(let ee=0;ee<s.length;++ee)o.includes(ee)||(i.splice(ee,0,0),u.splice(ee,0,s[ee]),a.splice(ee,0,1));let p=a.map(ee=>Math.sign(ee));a.forEach((ee,Y,he)=>{if(ee<0){let pe=(u[Y]-i[Y])/ee,Me=i[Y],Fe=Me+pe*a[Y];i[Y]=Fe,u[Y]=Me,he[Y]=-ee}});let h=s.slice(0);o.forEach((ee,Y)=>{h[ee]=Math.ceil((u[ee]-i[ee])/a[ee])});let k={dims:h,dataType:e[0].dataType},C=At("output",e[0].dataType,h.length),d=qe("input",e[0].dataType,e[0].dims.length),z=ze.size(h),B=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:a.length}],V=[{type:12,data:z},{type:12,data:i},{type:6,data:p},{type:12,data:a},...yt(e[0].dims,h)],Z=ee=>`
      ${ee.registerUniforms(B).declareVariables(d,C)}
        ${tr(d,C,s)}
        ${ee.mainStart()}
          ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${C.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${C.setByOffset("global_idx",d.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${i.length}_${a.length}`,inputDependencies:["rank"]},getShaderSource:Z,getRunData:()=>({outputs:[k],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:V})}},Ep=(e,t)=>{Qt(e.inputs,t);let s=Hs(e.inputs,t);e.compute(un(e.inputs,s),{inputs:[0]})},Ec=e=>{let t=e.starts,s=e.ends,n=e.axes;return Bt({starts:t,ends:s,axes:n})}}),_,T,N,fe,De=g(()=>{zt(),Ot(),rs(),Gr(),Yt(),_=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},T=(e,t)=>{let s=e.inputs[0],n=s.dims,o=ze.size(n),a=n.length,i=ze.normalizeAxis(t.axis,a),u=i<n.length-1,p,h=[];u?(h=Array.from({length:a},(Le,Ye)=>Ye),h[i]=a-1,h[a-1]=i,p=e.compute(cr(s,h),{inputs:[s],outputs:[-1]})[0]):p=s;let k=p.dims,C=k[a-1],d=o/C,z=qt(C),B=C/z,V=64;d===1&&(V=256);let Z=(Le,Ye)=>Ye===4?`max(max(${Le}.x, ${Le}.y), max(${Le}.z, ${Le}.w))`:Ye===2?`max(${Le}.x, ${Le}.y)`:Ye===3?`max(max(${Le}.x, ${Le}.y), ${Le}.z)`:Le,ee=qe("x",p.dataType,p.dims,z),Y=At("result",p.dataType,p.dims,z),he=ee.type.value,pe=_s(p.dataType)==="f32"?`var threadMax = ${he}(-3.402823e+38f);`:`var threadMax = ${he}(-65504.0h);`,Me=Le=>`
      var<workgroup> rowMaxShared : ${he};
      var<workgroup> rowSumShared : ${he};
      var<workgroup> threadShared : array<${he}, ${V}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${he} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${he}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Le.registerUniform("packedCols","i32").declareVariables(ee,Y)}
      ${Le.mainStart(V)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${V};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${pe}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${he}(${Z("threadShared[0]",z)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${he}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${he}(${Gs("threadShared[0]",z)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,Fe=e.compute({name:"Softmax",shaderCache:{hint:`${z};${V}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:k,dataType:p.dataType}],dispatchGroup:{x:d},programUniforms:[{type:6,data:B}]}),getShaderSource:Me},{inputs:[p],outputs:[u?-1:0]})[0];u&&e.compute(cr(Fe,h),{inputs:[Fe]})},N=(e,t)=>{_(e.inputs),T(e,t)},fe=e=>Bt({axis:e.axis})}),Ae,et,rt,ft,Mt,jt=g(()=>{zt(),Ot(),Yt(),Ae=e=>Array.from(e.getBigInt64Array(),Number),et=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Ae(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},rt=(e,t)=>{let s=[];for(let n=0;n<e.length;++n)s.push(e[n]*t[n]);return s},ft=(e,t)=>{let s=e[0].dims,n=t??Ae(e[1]),o=rt(s,n),a=ze.size(o),i=e[0].dataType,u=qe("input",i,s.length),p=At("output",i,o.length),h=k=>`
      const inputShape = ${u.indices(...s)};
      ${k.registerUniform("output_size","u32").declareVariables(u,p)}
      ${k.mainStart()}
      ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${p.offsetToIndices("global_idx")};
      var input_indices: ${u.type.indices};
      for (var i = 0; i < ${s.length}; i++) {
        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${p.indicesGet("output_indices","i")}  % input_dim_i;

        ${u.indicesSet("input_indices","i","input_dim_value")}
      }
      ${p.setByOffset("global_idx",u.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...yt(e[0].dims,o)]}),getShaderSource:h}},Mt=e=>{et(e.inputs),e.compute(ft(e.inputs),{inputs:[0]})}}),Vt,Lt,Gt,ts=g(()=>{zt(),Ot(),Yt(),Vt=(e,t,s,n,o)=>{let a=At("output_data",o,s.length,4),i=qe("a_data",t[1].dataType,t[1].dims.length,4),u=qe("b_data",t[2].dataType,t[2].dims.length,4),p=qe("c_data",t[0].dataType,t[0].dims.length,4),h,k=(C,d,z)=>`select(${d}, ${C}, ${z})`;if(!n)h=a.setByOffset("global_idx",k(i.getByOffset("global_idx"),u.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let C=(d,z,B="")=>{let V=`a_data[index_a${z}][component_a${z}]`,Z=`b_data[index_b${z}][component_b${z}]`,ee=`bool(c_data[index_c${z}] & (0xffu << (component_c${z} * 8)))`;return`
            let output_indices${z} = ${a.offsetToIndices(`global_idx * 4u + ${z}u`)};
            let offset_a${z} = ${i.broadcastedIndicesToOffset(`output_indices${z}`,a)};
            let offset_b${z} = ${u.broadcastedIndicesToOffset(`output_indices${z}`,a)};
            let offset_c${z} = ${p.broadcastedIndicesToOffset(`output_indices${z}`,a)};
            let index_a${z} = offset_a${z} / 4u;
            let index_b${z} = offset_b${z} / 4u;
            let index_c${z} = offset_c${z} / 4u;
            let component_a${z} = offset_a${z} % 4u;
            let component_b${z} = offset_b${z} % 4u;
            let component_c${z} = offset_c${z} % 4u;
            ${d}[${z}] = ${B}(${k(V,Z,ee)});
          `};o===9?h=`
            var data = vec4<u32>(0);
            ${C("data",0,"u32")}
            ${C("data",1,"u32")}
            ${C("data",2,"u32")}
            ${C("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`
            ${C("output_data[global_idx]",0)}
            ${C("output_data[global_idx]",1)}
            ${C("output_data[global_idx]",2)}
            ${C("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(p,i,u,a)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${h}
      }`},Lt=e=>{let t=e[1].dims,s=e[2].dims,n=e[0].dims,o=e[1].dataType,a=!(ze.areEqual(t,s)&&ze.areEqual(s,n)),i=t,u=ze.size(t);if(a){let h=Ws.calcShape(Ws.calcShape(t,s,!1),n,!1);if(!h)throw new Error("Can't perform where op on the given tensors");i=h,u=ze.size(i)}let p=Math.ceil(u/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>Vt(h,e,i,a,o),getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:p},...yt(n,t,s,i)]})}},Gt=e=>{e.compute(Lt(e.inputs))}}),ns,Jt=g(()=>{jc(),li(),Uc(),Vc(),Wc(),Gc(),pu(),Qc(),Yc(),Jc(),Zc(),ep(),tp(),sp(),rp(),np(),ip(),ap(),Kp(),aa(),cp(),xd(),pp(),hp(),Od(),_d(),Bd(),yp(),Hp(),Mp(),vp(),uo(),xp(),Tp(),qp(),Pp(),De(),ca(),jt(),Gr(),Ei(),ts(),ns=new Map([["Abs",[Tl]],["Acos",[hi]],["Acosh",[El]],["Add",[Ci]],["ArgMax",[ri,ni]],["ArgMin",[fl,ni]],["Asin",[Pl]],["Asinh",[mi]],["Atan",[Cl]],["Atanh",[kl]],["Attention",[yl]],["AveragePool",[wp,xa]],["BatchNormalization",[di]],["BiasAdd",[xl]],["BiasSplitGelu",[Pi]],["Cast",[Sl,_i]],["Ceil",[Il]],["Clip",[fi]],["Concat",[du,cu]],["Conv",[bo,qi]],["ConvTranspose",[Su,Yi]],["Cos",[Al]],["Cosh",[gi]],["CumSum",[$u,Iu]],["DepthToSpace",[Fu,Du]],["DequantizeLinear",[qd,Qd]],["Div",[tu]],["Einsum",[Ru,Nu]],["Elu",[Ol,jn]],["Equal",[su]],["Erf",[Fl]],["Exp",[wi]],["Expand",[Wu]],["FastGelu",[Gu]],["Floor",[Dl]],["FusedConv",[bo,qi]],["Gather",[qu,Hu]],["GatherElements",[sd,td]],["GatherBlockQuantized",[Ju,Zu]],["GatherND",[Po,Xu]],["Gelu",[Ll]],["Gemm",[Co,od]],["GlobalAveragePool",[jd,Nd]],["GlobalMaxPool",[Gd,Wd]],["Greater",[ou]],["GreaterOrEqual",[Si]],["GridSample",[cd,pd]],["GroupQueryAttention",[pa]],["HardSigmoid",[jl,bi]],["InstanceNormalization",[vd]],["LayerNormalization",[_a]],["LeakyRelu",[yi,jn]],["Less",[iu]],["LessOrEqual",[au]],["Log",[ql]],["MatMul",[Cd]],["MatMulNBits",[Id,Ad]],["MaxPool",[Ud,Vd]],["Mul",[ru]],["MultiHeadAttention",[lp,md]],["Neg",[Bl]],["Not",[zl]],["Pad",[fp]],["Pow",[nu]],["QuickGelu",[Xl,jn]],["Range",[Jd]],["Reciprocal",[Mi]],["ReduceMin",[pl]],["ReduceMean",[ul]],["ReduceMax",[ei]],["ReduceSum",[ti]],["ReduceProd",[hl]],["ReduceL1",[Zo]],["ReduceL2",[dl]],["ReduceLogSum",[_l]],["ReduceLogSumExp",[cl]],["ReduceSumSquare",[ml]],["Relu",[Rl]],["Resize",[gc,wc]],["RotaryEmbedding",[bc]],["ScatterND",[Ea,bp]],["Sigmoid",[Nl]],["Sin",[Ul]],["Sinh",[vi]],["Slice",[Ep,Ec]],["SkipLayerNormalization",[Tc]],["Split",[yd,Md]],["Sqrt",[Vl]],["Softmax",[N,fe]],["Sub",[ki]],["Tan",[Wl]],["Tanh",[Gl]],["ThresholdedRelu",[Hl,jn]],["Tile",[Mt]],["Transpose",[Ua,Go]],["Where",[Gt]]])}),is,Is=g(()=>{We(),Ee(),Yt(),is=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,s,n,o){Ne(e.programInfo.name);let a=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let h of t)u.push({binding:u.length,resource:{buffer:h.buffer}});for(let h of s)u.push({binding:u.length,resource:{buffer:h.buffer}});o&&u.push({binding:u.length,resource:o});let p=a.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let h={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:p,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(h)}i.setPipeline(e.computePipeline),i.setBindGroup(0,p),i.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Re(e.programInfo.name)}dispose(){}build(e,t){Ne(e.name);let s=this.backend.device,n=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(h=>{s.features.has(h.feature)&&n.push(`enable ${h.extension};`)});let o=Ba(t,this.backend.device.limits),a=e.getShaderSource(o),i=`${n.join(`
`)}
${o.additionalImplementations}
${a}`,u=s.createShaderModule({code:i,label:e.name});as("verbose",()=>`[WebGPU] ${e.name} shader code: ${i}`);let p=s.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Re(e.name),{programInfo:e,computePipeline:p,uniformVariablesInfo:o.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,s=typeof e=="number"?1:e.y||1,n=typeof e=="number"?1:e.z||1,o=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=o&&s<=o&&n<=o)return[t,s,n];let a=t*s*n,i=Math.ceil(Math.sqrt(a));if(i>o){if(i=Math.ceil(Math.cbrt(a)),i>o)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),xs,cs,Ps,As,Zs,Ys=g(()=>{We(),zt(),Ee(),Q(),us(),Jt(),Is(),xs=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let s=[];for(let n=0;n<e.length;++n){let o=e[n].dataType;switch(t[n]){case"none":{s.push("");break}case"type":{s.push(`${o}`);break}case"rank":{let a=e[n].dims.length;s.push(`${o};${a}`);break}case"dims":{let a=e[n].dims.join(",");s.push(`${o};${a}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return s.join("|")},cs=(e,t,s)=>{var o,a;let n=e.name;return(o=e.shaderCache)!=null&&o.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+s+`:${xs(t,((a=e.shaderCache)==null?void 0:a.inputDependencies)??new Array(t.length).fill("dims"))}`,n},Ps=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},As=class{constructor(e){this.subgroupsSupported=e.features.has("subgroups"),this.subgroupsF16Supported=e.features.has("subgroups");let t=e.limits;!this.subgroupsSupported||!t.minSubgroupSize||!t.maxSubgroupSize?this.subgroupSizeRange=void 0:this.subgroupSizeRange=[t.minSubgroupSize,t.maxSubgroupSize]}},Zs=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let s=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:s},o=a=>t.features.has(a)&&s.push(a)&&!0;o("chromium-experimental-timestamp-query-inside-passes")||o("timestamp-query"),o("shader-f16"),o("subgroups")&&o("subgroups-f16"),this.device=await t.requestDevice(n),this.deviceInfo=new As(this.device),this.adapterInfo=new Ps(t.info||await t.requestAdapterInfo()),this.gpuDataManager=ms(this),this.programManager=new is(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,vn(e.logLevel,!!e.debug),this.device.onuncapturederror=a=>{a.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${a.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ne(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var n;let t=new BigUint64Array(e.getMappedRange()),s=this.pendingQueries.get(e);for(let o=0;o<t.length/2;o++){let a=s[o],i=a.kernelId,u=this.kernels.get(i),p=u.kernelType,h=u.kernelName,k=a.programName,C=a.inputTensorViews,d=a.outputTensorViews,z=t[o*2],B=t[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=z);let V=Number(z-this.queryTimeBase),Z=Number(B-this.queryTimeBase);if(!Number.isSafeInteger(V)||!Number.isSafeInteger(Z))throw new RangeError("incorrect timestamp range");if((n=this.env.webgpu.profiling)!=null&&n.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:C.map(ee=>({dims:ee.dims,dataType:mr(ee.dataType)})),outputsMetadata:d.map(ee=>({dims:ee.dims,dataType:mr(ee.dataType)})),kernelId:i,kernelType:p,kernelName:h,programName:k,startTime:V,endTime:Z});else{let ee="";C.forEach((he,pe)=>{ee+=`input[${pe}]: [${he.dims}] | ${mr(he.dataType)}, `});let Y="";d.forEach((he,pe)=>{Y+=`output[${pe}]: [${he.dims}] | ${mr(he.dataType)}, `}),console.log(`[profiling] kernel "${i}|${p}|${h}|${k}" ${ee}${Y}execution time: ${Z-V} ns`)}Ue("GPU",`${k}::${z}::${B}`)}e.unmap(),this.pendingQueries.delete(e)}),Re()}run(e,t,s,n,o,a){Ne(e.name);let i=[];for(let Y=0;Y<t.length;++Y){let he=t[Y].data;if(he===0)continue;let pe=this.gpuDataManager.get(he);if(!pe)throw new Error(`no GPU data for input: ${he}`);i.push(pe)}let{outputs:u,dispatchGroup:p,programUniforms:h}=e.getRunData(t),k=s.length===0?u.map((Y,he)=>he):s;if(k.length!==u.length)throw new Error(`Output size ${k.length} must be equal to ${u.length}.`);let C=[],d=[];for(let Y=0;Y<u.length;++Y){if(!Number.isInteger(k[Y])||k[Y]<-3||k[Y]>=a)throw new Error(`Invalid output index: ${k[Y]}`);if(k[Y]===-3)continue;let he=k[Y]===-1,pe=k[Y]===-2,Me=he||pe?o(u[Y].dataType,u[Y].dims):n(k[Y],u[Y].dataType,u[Y].dims);if(C.push(Me),Me.data===0)continue;let Fe=this.gpuDataManager.get(Me.data);if(!Fe)throw new Error(`no GPU data for output: ${Me.data}`);if(he&&this.temporaryData.push(Fe),pe){let Le=this.kernelPersistentData.get(this.currentKernelId);Le||(Le=[],this.kernelPersistentData.set(this.currentKernelId,Le)),Le.push(Fe)}d.push(Fe)}if(i.length!==t.length||d.length!==C.length){if(d.length===0)return Re(e.name),C;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let z;if(h){let Y=0,he=[];h.forEach(Le=>{let Ye=typeof Le.data=="number"?[Le.data]:Le.data;if(Ye.length===0)return;let at=Le.type===10?2:4,Et,Xt;Le.type===10?(Xt=Ye.length>4?16:Ye.length>2?8:Ye.length*at,Et=Ye.length>4?16:at*Ye.length):(Xt=Ye.length<=2?Ye.length*at:16,Et=16),Y=Math.ceil(Y/Xt)*Xt,he.push(Y);let Zt=Le.type===10?8:4;Y+=Ye.length>4?Math.ceil(Ye.length/Zt)*Et:Ye.length*at});let pe=16;Y=Math.ceil(Y/pe)*pe;let Me=new ArrayBuffer(Y);h.forEach((Le,Ye)=>{let at=he[Ye],Et=typeof Le.data=="number"?[Le.data]:Le.data;if(Le.type===6)new Int32Array(Me,at,Et.length).set(Et);else if(Le.type===12)new Uint32Array(Me,at,Et.length).set(Et);else if(Le.type===10)new Uint16Array(Me,at,Et.length).set(Et);else if(Le.type===1)new Float32Array(Me,at,Et.length).set(Et);else throw new Error(`Unsupported uniform type: ${mr(Le.type)}`)});let Fe=this.gpuDataManager.create(Y,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Fe.buffer,0,Me,0,Y),this.gpuDataManager.release(Fe.id),z={offset:0,size:Y,buffer:Fe.buffer}}let B=this.programManager.normalizeDispatchGroupSize(p),V=B[1]===1&&B[2]===1,Z=cs(e,t,V),ee=this.programManager.getArtifact(Z);if(ee||(ee=this.programManager.build(e,B),this.programManager.setArtifact(Z,ee),as("info",()=>`[artifact] key: ${Z}, programName: ${e.name}`)),h&&ee.uniformVariablesInfo){if(h.length!==ee.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${ee.uniformVariablesInfo.length}, got ${h.length} in program "${ee.programInfo.name}".`);for(let Y=0;Y<h.length;Y++){let he=h[Y],pe=he.type,Me=typeof he.data=="number"?1:he.data.length,[Fe,Le]=ee.uniformVariablesInfo[Y];if(pe!==Fe||Me!==Le)throw new Error(`Uniform variable ${Y} mismatch: expect type ${Fe} with size ${Le}, got type ${pe} with size ${Me} in program "${ee.programInfo.name}".`)}}if(as("info",()=>`[ProgramManager] run "${e.name}" (key=${Z}) with ${B[0]}x${B[1]}x${B[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let Y={kernelId:this.currentKernelId,programName:ee.programInfo.name,inputTensorViews:t,outputTensorViews:C};this.pendingKernels.push(Y),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(Y)}return this.programManager.run(ee,i,d,B,z),Re(e.name),C}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,s,n){let o=ns.get(e);if(!o)throw new Error(`kernel not implemented: ${e}`);let a={kernelType:e,kernelName:n,kernelEntry:o[0],attributes:[o[1],s]};this.kernels.set(t,a)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let s of t)this.gpuDataManager.release(s.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,s){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let o=n.kernelType,a=n.kernelName,i=n.kernelEntry,u=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${o}] ${a}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),as("info",()=>`[WebGPU] Start to run kernel "[${o}] ${a}"...`);let p=this.env.debug;this.temporaryData=[];try{return p&&this.device.pushErrorScope("validation"),i(t,u[1]),0}catch(h){return s.push(Promise.resolve(`[WebGPU] Kernel "[${o}] ${a}" failed. ${h}`)),1}finally{p&&s.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${o}] ${a}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,s,n){let o=this.sessionExternalDataMapping.get(e);o||(o=new Map,this.sessionExternalDataMapping.set(e,o));let a=o.get(t),i=this.gpuDataManager.registerExternalBuffer(s,n,a);return o.set(t,[i,s]),i}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(s=>this.gpuDataManager.unregisterExternalBuffer(s[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,s){return async()=>{let n=await xt(this,e,t);return P(n.buffer,s)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){as("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){as("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){as("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),s=e.length;this.pendingKernels=[];for(let n=0;n<s;n++){let o=this.getComputePassEncoder(),a=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),o.setPipeline(a.computePipeline),o.setBindGroup(0,a.bindGroup),o.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Mr,dn,Ca,ir,br,Io,Ao,Oo,ka=g(()=>{Ee(),Mr=1,dn=()=>Mr++,Ca=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),ir=(e,t)=>{let s=Ca.get(e);if(!s)throw new Error("Unsupported data type.");return t.length>0?Math.ceil(t.reduce((n,o)=>n*o)*s/8):0},br=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return ir(this.dataType,this.tensorShape)}destroy(){as("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,t,s){return this.mlContext===e&&this.dataType===t&&this.tensorShape.length===s.length&&this.tensorShape.every((n,o)=>n===s[o])}},Io=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,t,s,n){if(this.wrapper){if(this.wrapper.canReuseTensor(e,t,s))return this.wrapper.tensor;if(n){if(this.wrapper.byteLength!==ir(t,s))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let o=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(t,s,o,!0,!0),n&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper)if(e.byteLength===this.wrapper.byteLength){this.wrapper.write(e);return}else as("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},Ao=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=dn();return this.tensorTrackersById.set(e,new Io(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,s,n){as("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${s}, copyOld: ${n}}`);let o=this.tensorTrackersById.get(e);if(!o)throw new Error("Tensor not found.");return o.ensureTensor(this.backend.currentContext,t,s,n)}upload(e,t){let s=this.tensorTrackersById.get(e);if(!s)throw new Error("Tensor not found.");s.upload(t)}async download(e,t){as("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t==null?void 0:t.byteLength}}`);let s=this.tensorTrackersById.get(e);if(!s)throw new Error("Tensor not found.");return s.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,s,n){let o=dn(),a=new br({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:s,shape:n});return this.tensorTrackersById.set(o,new Io(this,a)),this.externalTensors.add(a),o}async getCachedTensor(e,t,s,n,o){let a=this.backend.currentSessionId,i=this.backend.currentContext;for(let[p,h]of this.freeTensors.entries())if(h.canReuseTensor(i,e,t)){as("verbose",()=>`[WebNN] Reusing tensor {dataType: ${e}, shape: ${t}}`);let k=this.freeTensors.splice(p,1)[0];return k.sessionId=a,k}as("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let u=await i.createTensor({dataType:e,shape:t,dimensions:t,usage:s,writable:n,readable:o});return new br({sessionId:a,context:i,tensor:u,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},Oo=(...e)=>new Ao(...e)}),Ts,Rs,Hr,Tn=g(()=>{zt(),lr(),Q(),ka(),Ee(),Ts=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Rs=(e,t)=>{if(e===t)return!0;if(e===void 0||t===void 0)return!1;let s=Object.keys(e).sort(),n=Object.keys(t).sort();return s.length===n.length&&s.every((o,a)=>o===n[a]&&e[o]===t[o])},Hr=class{constructor(e){this.tensorManager=Oo(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],vn(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}async createMLContext(e){if(e instanceof GPUDevice){let s=this.mlContextCache.findIndex(n=>n.gpuDevice===e);if(s!==-1)return this.mlContextCache[s].mlContext;{let n=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:n}),n}}else if(e===void 0){let s=this.mlContextCache.findIndex(n=>n.options===void 0&&n.gpuDevice===void 0);if(s!==-1)return this.mlContextCache[s].mlContext;{let n=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:n}),n}}let t=this.mlContextCache.findIndex(s=>Rs(s.options,e));if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:s}),s}}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let s=this.sessionIdsByMLContext.get(t);s||(s=new Set,this.sessionIdsByMLContext.set(t,s)),s.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let s=this.sessionIdsByMLContext.get(t);if(s.delete(e),s.size===0){this.sessionIdsByMLContext.delete(t);let n=this.mlContextCache.findIndex(o=>o.mlContext===t);n!==-1&&this.mlContextCache.splice(n,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){as("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,s,n){let o=Ts.get(t);if(!o)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,o,s,n)}uploadTensor(e,t){if(!Ms().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");as("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let s=await this.tensorManager.download(e);return P(s,t)}}registerMLTensor(e,t,s){let n=Ts.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let o=this.tensorManager.registerTensor(this.currentContext,e,n,s);return as("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${s}} -> {tensorId: ${o}}`),o}registerMLConstant(e,t,s,n,o,a){if(!a)throw new Error("External mounted files are not available.");let i=e;e.startsWith("./")&&(i=e.substring(2));let u=a.get(i);if(!u)throw new Error(`File with name ${i} not found in preloaded files.`);if(t+s>u.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let p=u.slice(t,t+s).buffer,h;switch(o.dataType){case"float32":h=new Float32Array(p);break;case"float16":h=new Uint16Array(p);break;case"int32":h=new Int32Array(p);break;case"uint32":h=new Uint32Array(p);break;case"int64":h=new BigInt64Array(p);break;case"uint64":h=new BigUint64Array(p);break;case"int8":h=new Int8Array(p);break;case"int4":case"uint4":case"uint8":h=new Uint8Array(p);break;default:throw new Error(`Unsupported data type: ${o.dataType} in creating WebNN Constant from external data.`)}return as("verbose",()=>`[WebNN] registerMLConstant {dataType: ${o.dataType}, shape: ${o.shape}}}`),n.constant(o,h)}flush(){}}}),En={};v(En,{init:()=>$a});var Pn,Sa,$a,Pc=g(()=>{zt(),Ys(),Ee(),Ot(),Tn(),Pn=class l_{constructor(t,s,n,o){this.module=t,this.dataType=s,this.data=n,this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=ze.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=ze.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=ze.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=ze.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(ze.size(t)!==ze.size(this.dims))throw new Error("Invalid new shape");return new l_(this.module,this.dataType,this.data,t)}},Sa=class{constructor(e,t,s){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo,this.deviceInfo=t.deviceInfo;let n=e.PTR_SIZE,o=s/e.PTR_SIZE,a=n===4?"i32":"i64";this.opKernelContext=Number(e.getValue(n*o++,a));let i=Number(e.getValue(n*o++,a));this.outputCount=Number(e.getValue(n*o++,a)),this.customDataOffset=Number(e.getValue(n*o++,"*")),this.customDataSize=Number(e.getValue(n*o++,a));let u=[];for(let p=0;p<i;p++){let h=Number(e.getValue(n*o++,a)),k=Number(e.getValue(n*o++,"*")),C=Number(e.getValue(n*o++,a)),d=[];for(let z=0;z<C;z++)d.push(Number(e.getValue(n*o++,a)));u.push(new Pn(e,h,k,d))}this.inputs=u}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){var i;let s=((i=t==null?void 0:t.inputs)==null?void 0:i.map(u=>typeof u=="number"?this.inputs[u]:u))??this.inputs,n=(t==null?void 0:t.outputs)??[],o=(u,p,h)=>new Pn(this.module,p,this.output(u,h),h),a=(u,p)=>{let h=ur(u,p);if(!h)throw new Error(`Unsupported data type: ${u}`);let k=h>0?this.backend.gpuDataManager.create(h).id:0;return new Pn(this.module,u,k,p)};return this.backend.run(e,s,n,o,a,this.outputCount)}output(e,t){let s=this.module.stackSave();try{let n=this.module.PTR_SIZE,o=n===4?"i32":"i64",a=this.module.stackAlloc((1+t.length)*n);this.module.setValue(a,t.length,o);for(let i=0;i<t.length;i++)this.module.setValue(a+n*(i+1),t[i],o);return this.module._JsepOutput(this.opKernelContext,e,a)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(s)}}},$a=async(e,t,s,n)=>{let o=t.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let a=new Zs;await a.initialize(s,n),o("webgpu",[a,i=>a.alloc(Number(i)),i=>a.free(i),(i,u,p,h=!1)=>{if(h)as("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(i)}, dst=${Number(u)}, size=${Number(p)}`),a.memcpy(Number(i),Number(u));else{as("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(i)}, gpuDataId=${Number(u)}, size=${Number(p)}`);let k=t.HEAPU8.subarray(Number(i>>>0),Number(i>>>0)+Number(p));a.upload(Number(u),k)}},async(i,u,p)=>{as("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${u}, size=${p}`),await a.download(Number(i),()=>t.HEAPU8.subarray(Number(u)>>>0,Number(u+p)>>>0))},(i,u,p)=>a.createKernel(i,Number(u),p,t.UTF8ToString(t._JsepGetNodeName(Number(u)))),i=>a.releaseKernel(i),(i,u,p,h)=>{as("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${i}, contextDataOffset=${u}`);let k=new Sa(t,a,Number(u));return a.computeKernel(Number(i),k,h)},()=>a.captureBegin(),()=>a.captureEnd(),()=>a.replay()])}else{let a=new Hr(s);o("webnn",[a,()=>a.reserveTensorId(),i=>a.releaseTensorId(i),async(i,u,p,h)=>a.ensureTensor(i,u,p,h),(i,u)=>{a.uploadTensor(i,u)},async(i,u)=>a.downloadTensor(i,u)])}}}),Cp,Fo,qn,Lr,Cc,Qn,Xn,kc,Sc,$c,qr,hr,Th=g(()=>{no(),oo(),zt(),lr(),fn(),Dn(),Cp=(e,t)=>{Ms()._OrtInit(e,t)!==0&&es("Can't initialize onnxruntime.")},Fo=async e=>{Cp(e.wasm.numThreads,Zr(e.logLevel))},qn=async(e,t)=>{{let s=(Pc(),y(En)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let o=e.webgpu.powerPreference;if(o!==void 0&&o!=="low-power"&&o!=="high-performance")throw new Error(`Invalid powerPreference setting: "${o}"`);let a=e.webgpu.forceFallbackAdapter;if(a!==void 0&&typeof a!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${a}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:o,forceFallbackAdapter:a}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await s("webgpu",Ms(),e,n)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await s("webnn",Ms(),e)}}},Lr=new Map,Cc=e=>{let t=Ms(),s=t.stackSave();try{let n=t.PTR_SIZE,o=t.stackAlloc(2*n);t._OrtGetInputOutputCount(e,o,o+n)!==0&&es("Can't get session input/output count.");let a=n===4?"i32":"i64";return[Number(t.getValue(o,a)),Number(t.getValue(o+n,a))]}finally{t.stackRestore(s)}},Qn=e=>{let t=Ms(),s=t._malloc(e.byteLength);if(s===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,s),[s,e.byteLength]},Xn=async(e,t)=>{var C,d,z;let s,n,o=Ms();Array.isArray(e)?[s,n]=e:e.buffer===o.HEAPU8.buffer?[s,n]=[e.byteOffset,e.byteLength]:[s,n]=Qn(e);let a=0,i=0,u=0,p=[],h=[],k=[];try{if([i,p]=Fn(t),(t==null?void 0:t.externalData)&&o.mountExternalData){let Me=[];for(let Fe of t.externalData){let Le=typeof Fe=="string"?Fe:Fe.path;Me.push(bn(typeof Fe=="string"?Fe:Fe.data).then(Ye=>{o.mountExternalData(Le,Ye)}))}await Promise.all(Me)}for(let Me of(t==null?void 0:t.executionProviders)??[])if((typeof Me=="string"?Me:Me.name)==="webnn"){if(o.shouldTransferToMLTensor=!1,typeof Me!="string"){let Fe=Me,Le=Fe==null?void 0:Fe.context,Ye=Fe==null?void 0:Fe.gpuDevice,at=Fe==null?void 0:Fe.deviceType,Et=Fe==null?void 0:Fe.powerPreference;Le?o.currentContext=Le:Ye?o.currentContext=await o.jsepCreateMLContext(Ye):o.currentContext=await o.jsepCreateMLContext({deviceType:at,powerPreference:Et})}else o.currentContext=await o.jsepCreateMLContext();break}a=await o._OrtCreateSession(s,n,i),a===0&&es("Can't create a session."),(C=o.jsepOnCreateSession)==null||C.call(o),o.currentContext&&(o.jsepRegisterMLContext(a,o.currentContext),o.currentContext=void 0,o.shouldTransferToMLTensor=!0);let[B,V]=Cc(a),Z=!!(t!=null&&t.enableGraphCapture),ee=[],Y=[],he=[];for(let Me=0;Me<B;Me++){let Fe=o._OrtGetInputName(a,Me);Fe===0&&es("Can't get an input name."),h.push(Fe),ee.push(o.UTF8ToString(Fe))}for(let Me=0;Me<V;Me++){let Fe=o._OrtGetOutputName(a,Me);Fe===0&&es("Can't get an output name."),k.push(Fe);let Le=o.UTF8ToString(Fe);Y.push(Le);{if(Z&&(t==null?void 0:t.preferredOutputLocation)===void 0){he.push("gpu-buffer");continue}let Ye=typeof(t==null?void 0:t.preferredOutputLocation)=="string"?t.preferredOutputLocation:((d=t==null?void 0:t.preferredOutputLocation)==null?void 0:d[Le])??"cpu";if(Ye!=="cpu"&&Ye!=="cpu-pinned"&&Ye!=="gpu-buffer"&&Ye!=="ml-tensor")throw new Error(`Not supported preferred output location: ${Ye}.`);if(Z&&Ye!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${Ye}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);he.push(Ye)}}let pe=null;return he.some(Me=>Me==="gpu-buffer"||Me==="ml-tensor")&&(u=o._OrtCreateBinding(a),u===0&&es("Can't create IO binding."),pe={handle:u,outputPreferredLocations:he,outputPreferredLocationsEncoded:he.map(Me=>Mn(Me))}),Lr.set(a,[a,h,k,pe,Z,!1]),[a,ee,Y]}catch(B){throw h.forEach(V=>o._OrtFree(V)),k.forEach(V=>o._OrtFree(V)),u!==0&&o._OrtReleaseBinding(u)!==0&&es("Can't release IO binding."),a!==0&&o._OrtReleaseSession(a)!==0&&es("Can't release session."),B}finally{o._free(s),i!==0&&o._OrtReleaseSessionOptions(i)!==0&&es("Can't release session options."),p.forEach(B=>o._free(B)),(z=o.unmountExternalData)==null||z.call(o)}},kc=e=>{var p;let t=Ms(),s=Lr.get(e);if(!s)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,o,a,i,u]=s;i&&(u&&t._OrtClearBoundOutputs(i.handle)!==0&&es("Can't clear bound outputs."),t._OrtReleaseBinding(i.handle)!==0&&es("Can't release IO binding.")),(p=t.jsepOnReleaseSession)==null||p.call(t,e),o.forEach(h=>t._OrtFree(h)),a.forEach(h=>t._OrtFree(h)),t._OrtReleaseSession(n)!==0&&es("Can't release session."),Lr.delete(e)},Sc=(e,t,s,n,o,a=!1)=>{if(!e){t.push(0);return}let i=Ms(),u=i.PTR_SIZE,p=e[0],h=e[1],k=e[3],C,d;if(p==="string"&&(k==="gpu-buffer"||k==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(a&&k!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${o} when enableGraphCapture is true.`);if(k==="gpu-buffer"){let V=e[2].gpuBuffer;d=ur(Vr(p),h);let Z=i.jsepRegisterBuffer;if(!Z)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');C=Z(n,o,V,d)}else if(k==="ml-tensor"){let V=e[2].mlTensor;d=ur(Vr(p),h);let Z=i.jsepRegisterMLTensor;if(!Z)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');C=Z(V,Vr(p),h)}else{let V=e[2];if(Array.isArray(V)){d=u*V.length,C=i._malloc(d),s.push(C);for(let Z=0;Z<V.length;Z++){if(typeof V[Z]!="string")throw new TypeError(`tensor data at index ${Z} is not a string`);i.setValue(C+Z*u,Os(V[Z],s),"*")}}else d=V.byteLength,C=i._malloc(d),s.push(C),i.HEAPU8.set(new Uint8Array(V.buffer,V.byteOffset,d),C)}let z=i.stackSave(),B=i.stackAlloc(4*h.length);try{h.forEach((Z,ee)=>i.setValue(B+ee*u,Z,u===4?"i32":"i64"));let V=i._OrtCreateTensor(Vr(p),C,d,B,h.length,Mn(k));V===0&&es(`Can't create tensor for input/output. session=${n}, index=${o}.`),t.push(V)}finally{i.stackRestore(z)}},$c=async(e,t,s,n,o,a)=>{var Xt,Zt;let i=Ms(),u=i.PTR_SIZE,p=Lr.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);let h=p[0],k=p[1],C=p[2],d=p[3],z=p[4],B=p[5],V=t.length,Z=n.length,ee=0,Y=[],he=[],pe=[],Me=[],Fe=i.stackSave(),Le=i.stackAlloc(V*u),Ye=i.stackAlloc(V*u),at=i.stackAlloc(Z*u),Et=i.stackAlloc(Z*u);try{(Xt=i.jsepOnRunStart)==null||Xt.call(i,h),[ee,Y]=jr(a);for(let St=0;St<V;St++)Sc(s[St],he,Me,e,t[St],z);for(let St=0;St<Z;St++)Sc(o[St],pe,Me,e,V+n[St],z);for(let St=0;St<V;St++)i.setValue(Le+St*u,he[St],"*"),i.setValue(Ye+St*u,k[t[St]],"*");for(let St=0;St<Z;St++)i.setValue(at+St*u,pe[St],"*"),i.setValue(Et+St*u,C[n[St]],"*");if(d&&!B){let{handle:St,outputPreferredLocations:Ft,outputPreferredLocationsEncoded:bs}=d;if(k.length!==V)throw new Error(`input count from feeds (${V}) is expected to be always equal to model's input count (${k.length}).`);for(let Ht=0;Ht<V;Ht++){let Rt=t[Ht];await i._OrtBindInput(St,k[Rt],he[Ht])!==0&&es(`Can't bind input[${Ht}] for session=${e}.`)}for(let Ht=0;Ht<Z;Ht++){let Rt=n[Ht];(Zt=o[Ht])!=null&&Zt[3]?i._OrtBindOutput(St,C[Rt],pe[Ht],0)!==0&&es(`Can't bind pre-allocated output[${Ht}] for session=${e}.`):i._OrtBindOutput(St,C[Rt],0,bs[Rt])!==0&&es(`Can't bind output[${Ht}] to ${Ft[Ht]} for session=${e}.`)}Lr.set(e,[h,k,C,d,z,!0])}let bt;d?bt=await i._OrtRunWithBinding(h,d.handle,Z,at,ee):bt=await i._OrtRun(h,Ye,Le,V,Et,Z,at,ee),bt!==0&&es("failed to call OrtRun().");let ss=[];for(let St=0;St<Z;St++){let Ft=Number(i.getValue(at+St*u,"*"));if(Ft===pe[St]){ss.push(o[St]);continue}let bs=i.stackSave(),Ht=i.stackAlloc(4*u),Rt=!1,fs,it=0;try{i._OrtGetTensorData(Ft,Ht,Ht+u,Ht+2*u,Ht+3*u)!==0&&es(`Can't access output tensor data on index ${St}.`);let Pt=u===4?"i32":"i64",ps=Number(i.getValue(Ht,Pt));it=i.getValue(Ht+u,"*");let Ns=i.getValue(Ht+u*2,"*"),xr=Number(i.getValue(Ht+u*3,Pt)),er=[];for(let zs=0;zs<xr;zs++)er.push(Number(i.getValue(Ns+zs*u,Pt)));i._OrtFree(Ns)!==0&&es("Can't free memory for tensor dims.");let cn=er.reduce((zs,Es)=>zs*Es,1);fs=mr(ps);let zo=d==null?void 0:d.outputPreferredLocations[n[St]];if(fs==="string"){if(zo==="gpu-buffer"||zo==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let zs=[];for(let Es=0;Es<cn;Es++){let Jn=i.getValue(it+Es*u,"*"),Oc=i.getValue(it+(Es+1)*u,"*"),Zp=Es===cn-1?void 0:Oc-Jn;zs.push(i.UTF8ToString(Jn,Zp))}ss.push([fs,er,zs,"cpu"])}else if(zo==="gpu-buffer"&&cn>0){let zs=i.jsepGetBuffer;if(!zs)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Es=zs(it),Jn=ur(ps,cn);if(Jn===void 0||!wn(fs))throw new Error(`Unsupported data type: ${fs}`);Rt=!0,ss.push([fs,er,{gpuBuffer:Es,download:i.jsepCreateDownloader(Es,Jn,fs),dispose:()=>{i._OrtReleaseTensor(Ft)!==0&&es("Can't release tensor.")}},"gpu-buffer"])}else if(zo==="ml-tensor"&&cn>0){let zs=i.jsepEnsureTensor;if(!zs)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(ur(ps,cn)===void 0||!yn(fs))throw new Error(`Unsupported data type: ${fs}`);let Es=await zs(it,ps,er,!1);Rt=!0,ss.push([fs,er,{mlTensor:Es,download:i.jsepCreateMLTensorDownloader(it,fs),dispose:()=>{i.jsepReleaseTensorId(it),i._OrtReleaseTensor(Ft)}},"ml-tensor"])}else{let zs=gn(fs),Es=new zs(cn);new Uint8Array(Es.buffer,Es.byteOffset,Es.byteLength).set(i.HEAPU8.subarray(it,it+Es.byteLength)),ss.push([fs,er,Es,"cpu"])}}finally{i.stackRestore(bs),fs==="string"&&it&&i._free(it),Rt||i._OrtReleaseTensor(Ft)}}return d&&!z&&(i._OrtClearBoundOutputs(d.handle)!==0&&es("Can't clear bound outputs."),Lr.set(e,[h,k,C,d,z,!1])),ss}finally{i.stackRestore(Fe),he.forEach(bt=>i._OrtReleaseTensor(bt)),pe.forEach(bt=>i._OrtReleaseTensor(bt)),Me.forEach(bt=>i._free(bt)),ee!==0&&i._OrtReleaseRunOptions(ee),Y.forEach(bt=>i._free(bt))}},qr=e=>{let t=Ms(),s=Lr.get(e);if(!s)throw new Error("invalid session id");let n=s[0],o=t._OrtEndProfiling(n);o===0&&es("Can't get an profile file name."),t._OrtFree(o)},hr=e=>{let t=[];for(let s of e){let n=s[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}}),Yn,vr,Ia,Ic,Ac,kp,Qp,Sp,Do,Lo,Eh,Ph,Ch,kh,Sh,$h,Ih,Ah,Oh=g(()=>{We(),Th(),lr(),Rr(),Yn=()=>!!F.wasm.proxy&&typeof document<"u",Ia=!1,Ic=!1,Ac=!1,Sp=new Map,Do=(e,t)=>{let s=Sp.get(e);s?s.push(t):Sp.set(e,[t])},Lo=()=>{if(Ia||!Ic||Ac||!vr)throw new Error("worker not ready")},Eh=e=>{switch(e.data.type){case"init-wasm":Ia=!1,e.data.err?(Ac=!0,Qp[1](e.data.err)):(Ic=!0,Qp[0]()),kp&&(URL.revokeObjectURL(kp),kp=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=Sp.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},Ph=async()=>{if(!Ic){if(Ia)throw new Error("multiple calls to 'initWasm()' detected.");if(Ac)throw new Error("previous call to 'initWasm()' failed.");if(Ia=!0,Yn())return new Promise((e,t)=>{vr==null||vr.terminate(),Jr().then(([s,n])=>{var o;try{vr=n,vr.onerror=i=>t(i),vr.onmessage=Eh,Qp=[e,t];let a={type:"init-wasm",in:F};!a.in.wasm.wasmPaths&&(s||(o=import.meta.url)!=null&&o.startsWith("file:"))&&(a.in.wasm.wasmPaths={wasm:new URL(r("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),r.b).href}),vr.postMessage(a),kp=s}catch(a){t(a)}},t)});try{await Ar(F.wasm),await Fo(F),Ic=!0}catch(e){throw Ac=!0,e}finally{Ia=!1}}},Ch=async e=>{if(Yn())return Lo(),new Promise((t,s)=>{Do("init-ep",[t,s]);let n={type:"init-ep",in:{epName:e,env:F}};vr.postMessage(n)});await qn(F,e)},kh=async e=>Yn()?(Lo(),new Promise((t,s)=>{Do("copy-from",[t,s]);let n={type:"copy-from",in:{buffer:e}};vr.postMessage(n,[e.buffer])})):Qn(e),Sh=async(e,t)=>{if(Yn()){if(t!=null&&t.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Lo(),new Promise((s,n)=>{Do("create",[s,n]);let o={type:"create",in:{model:e,options:{...t}}},a=[];e instanceof Uint8Array&&a.push(e.buffer),vr.postMessage(o,a)})}else return Xn(e,t)},$h=async e=>{if(Yn())return Lo(),new Promise((t,s)=>{Do("release",[t,s]);let n={type:"release",in:e};vr.postMessage(n)});kc(e)},Ih=async(e,t,s,n,o,a)=>{if(Yn()){if(s.some(i=>i[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(i=>i))throw new Error("pre-allocated output tensor is not supported for proxy.");return Lo(),new Promise((i,u)=>{Do("run",[i,u]);let p=s,h={type:"run",in:{sessionId:e,inputIndices:t,inputs:p,outputIndices:n,options:a}};vr.postMessage(h,hr(p))})}else return $c(e,t,s,n,o,a)},Ah=async e=>{if(Yn())return Lo(),new Promise((t,s)=>{Do("end-profiling",[t,s]);let n={type:"end-profiling",in:e};vr.postMessage(n)});qr(e)}}),Xp,Fh,Dh,u_=g(()=>{We(),Oh(),zt(),Je(),Dn(),Xp=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Fh=e=>{switch(e[3]){case"cpu":return new le(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!wn(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:s,download:n,dispose:o}=e[2];return le.fromGpuBuffer(s,{dataType:t,dims:e[1],download:n,dispose:o})}case"ml-tensor":{let t=e[0];if(!yn(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:s,download:n,dispose:o}=e[2];return le.fromMLTensor(s,{dataType:t,dims:e[1],download:n,dispose:o})}default:throw new Error(`invalid data location: ${e[3]}`)}},Dh=class{async fetchModelAndCopyToWasmMemory(e){return kh(await bn(e))}async loadModel(e,t){Ne();let s;typeof e=="string"?s=await this.fetchModelAndCopyToWasmMemory(e):s=e,[this.sessionId,this.inputNames,this.outputNames]=await Sh(s,t),Re()}async dispose(){return $h(this.sessionId)}async run(e,t,s){Ne();let n=[],o=[];Object.entries(e).forEach(C=>{let d=C[0],z=C[1],B=this.inputNames.indexOf(d);if(B===-1)throw new Error(`invalid input '${d}'`);n.push(z),o.push(B)});let a=[],i=[];Object.entries(t).forEach(C=>{let d=C[0],z=C[1],B=this.outputNames.indexOf(d);if(B===-1)throw new Error(`invalid output '${d}'`);a.push(z),i.push(B)});let u=n.map((C,d)=>Xp(C,()=>`input "${this.inputNames[o[d]]}"`)),p=a.map((C,d)=>C?Xp(C,()=>`output "${this.outputNames[i[d]]}"`):null),h=await Ih(this.sessionId,o,u,i,p,s),k={};for(let C=0;C<h.length;C++)k[this.outputNames[i[C]]]=a[C]??Fh(h[C]);return Re(),k}startProfiling(){}endProfiling(){Ah(this.sessionId)}}}),Lh={};v(Lh,{OnnxruntimeWebAssemblyBackend:()=>Jp,initializeFlags:()=>Yp,wasmBackend:()=>zh});var Yp,Jp,zh,d_=g(()=>{We(),Oh(),u_(),Yp=()=>{if((typeof F.wasm.initTimeout!="number"||F.wasm.initTimeout<0)&&(F.wasm.initTimeout=0),F.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof F.wasm.proxy!="boolean"&&(F.wasm.proxy=!1),typeof F.wasm.trace!="boolean"&&(F.wasm.trace=!1),typeof F.wasm.numThreads!="number"||!Number.isInteger(F.wasm.numThreads)||F.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)F.wasm.numThreads=1;else{let e=typeof navigator>"u"?R("node:os").cpus().length:navigator.hardwareConcurrency;F.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Jp=class{async init(e){Yp(),await Ph(),await Ch(e)}async createInferenceSessionHandler(e,t){let s=new Dh;return await s.loadModel(e,t),Promise.resolve(s)}},zh=new Jp});We(),We(),We();var c_="1.21.0-dev.20250114-228dd16893",p_=$e;{let e=(d_(),y(Lh)).wasmBackend;K("webgpu",e,5),K("webnn",e,5),K("cpu",e,10),K("wasm",e,10)}Object.defineProperty(F.versions,"web",{value:c_,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(Ie,$,r)=>{var f;r.r($),r.d($,{Tensor:()=>R.Tensor,createInferenceSession:()=>ne,deviceToExecutionProviders:()=>K,isONNXProxy:()=>q,isONNXTensor:()=>W});var A=r("./src/env.js"),j=r("?2ce3"),X=r("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),R=r("./node_modules/onnxruntime-common/dist/esm/index.js");const g=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),v=[];let M,y;const b=Symbol.for("onnxruntime");if(b in globalThis)y=globalThis[b];else if(A.apis.IS_NODE_ENV){switch(y=j??(f||(f=r.t(j,2))),process.platform){case"win32":v.push("dml");break;case"linux":process.arch==="x64"&&v.push("cuda");break}v.push("cpu"),M=["cpu"]}else y=X,A.apis.IS_WEBNN_AVAILABLE&&v.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),A.apis.IS_WEBGPU_AVAILABLE&&v.push("webgpu"),v.push("wasm"),M=["wasm"];const O=y.InferenceSession;function K(I=null){if(!I)return M;switch(I){case"auto":return v;case"gpu":return v.filter(S=>["webgpu","cuda","dml","webnn-gpu"].includes(S))}if(v.includes(I))return[g[I]??I];throw new Error(`Unsupported device: "${I}". Should be one of: ${v.join(", ")}.`)}let se=null;async function ne(I,S,w){se&&await se;const x=O.create(I,S);se??(se=x);const F=await x;return F.config=w,F}function W(I){return I instanceof y.Tensor}const U=y==null?void 0:y.env;U!=null&&U.wasm&&(U.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${A.env.version}/dist/`,U.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(U.wasm.numThreads=1)),U!=null&&U.webgpu&&(U.webgpu.powerPreference="high-performance");function q(){var I;return(I=U==null?void 0:U.wasm)==null?void 0:I.proxy}A.env.backends.onnx=U},"./src/base/feature_extraction_utils.js":(Ie,$,r)=>{r.r($),r.d($,{FeatureExtractor:()=>X,validate_audio_inputs:()=>R});var f=r("./src/utils/constants.js"),A=r("./src/utils/generic.js"),j=r("./src/utils/hub.js");class X extends A.Callable{constructor(v){super(),this.config=v}static async from_pretrained(v,M){const y=await(0,j.getModelJSON)(v,f.FEATURE_EXTRACTOR_NAME,!0,M);return new this(y)}}function R(g,v){var M;if(!(g instanceof Float32Array||g instanceof Float64Array))throw new Error(`${v} expects input to be a Float32Array or a Float64Array, but got ${((M=g==null?void 0:g.constructor)==null?void 0:M.name)??typeof g} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(Ie,$,r)=>{r.r($),r.d($,{ImageProcessor:()=>I,center_to_corners_format:()=>y,post_process_instance_segmentation:()=>q,post_process_object_detection:()=>b,post_process_panoptic_segmentation:()=>U,post_process_semantic_segmentation:()=>O});var f=r("./src/utils/generic.js"),A=r("./src/utils/tensor.js"),j=r("./src/utils/maths.js");r("./src/utils/image.js");var X=r("./src/utils/core.js"),R=r("./src/utils/hub.js"),g=r("./src/utils/constants.js");function v(S,w,x=0,F=null){const ae=S/w;let oe=(0,j.bankers_round)(ae)*w;return F!==null&&oe>F&&(oe=Math.floor(ae)*w),oe<x&&(oe=Math.ceil(ae)*w),oe}function M([S,w],x){return[Math.max(Math.floor(S/x),1)*x,Math.max(Math.floor(w/x),1)*x]}function y([S,w,x,F]){return[S-x/2,w-F/2,S+x/2,w+F/2]}function b(S,w=.5,x=null,F=!1){const ae=S.logits,oe=S.pred_boxes,[ve,we,re]=ae.dims;if(x!==null&&x.length!==ve)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let xe=[];for(let ce=0;ce<ve;++ce){let ke=x!==null?x[ce]:null,Oe={boxes:[],classes:[],scores:[]},Pe=ae[ce],tt=oe[ce];for(let Ge=0;Ge<we;++Ge){let ye=Pe[Ge],J=[],de;if(F){de=ye.sigmoid().data;for(let Ce=0;Ce<de.length;++Ce)de[Ce]>w&&J.push(Ce)}else{let Ce=(0,j.max)(ye.data)[1];if(Ce===re-1||(de=(0,j.softmax)(ye.data),de[Ce]<w))continue;J.push(Ce)}for(const Ce of J){let Be=tt[Ge].data;Be=y(Be),ke!==null&&(Be=Be.map((Ze,te)=>Ze*ke[(te+1)%2])),Oe.boxes.push(Be),Oe.classes.push(Ce),Oe.scores.push(de[Ce])}}xe.push(Oe)}return xe}function O(S,w=null){const x=S.logits,F=x.dims[0];if(w!==null&&w.length!==F)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const ae=[];for(let oe=0;oe<F;++oe){const ve=w!==null?w[oe]:null;let we=x[oe];ve!==null&&(we=(0,A.interpolate)(we,ve,"bilinear",!1));const[re,xe]=ve??we.dims.slice(-2),ce=new A.Tensor("int32",new Int32Array(re*xe),[re,xe]),ke=we[0].data,Oe=ce.data;for(let Ge=1;Ge<we.dims[0];++Ge){const ye=we[Ge].data;for(let J=0;J<ye.length;++J)ye[J]>ke[J]&&(ke[J]=ye[J],Oe[J]=Ge)}const Pe=new Array(we.dims[0]);for(let Ge=0;Ge<Oe.length;++Ge){const ye=Oe[Ge];Pe[ye]=ye}const tt=Pe.filter(Ge=>Ge!==void 0);ae.push({segmentation:ce,labels:tt})}return ae}function K(S,w,x,F){const ae=[],oe=[],ve=[];for(let we=0;we<S.dims[0];++we){const re=S[we],xe=w[we],ce=(0,j.max)(re.data)[1];if(ce===F)continue;const Oe=(0,j.softmax)(re.data)[ce];Oe>x&&(ae.push(xe),oe.push(Oe),ve.push(ce))}return[ae,oe,ve]}function se(S,w,x,F=.5,ae=.8){const oe=[];let ve=0,we=0;const re=w[x].data;for(let ce=0;ce<S.length;++ce)S[ce]===x&&(oe.push(ce),++ve),re[ce]>=F&&++we;let xe=ve>0&&we>0;return xe&&(xe=ve/we>ae),[xe,oe]}function ne(S,w,x,F,ae,oe=null,ve=null){const[we,re]=ve??S[0].dims,xe=new A.Tensor("int32",new Int32Array(we*re),[we,re]),ce=[];if(ve!==null)for(let Ge=0;Ge<S.length;++Ge)S[Ge]=(0,A.interpolate)(S[Ge],ve,"bilinear",!1);const ke=new Int32Array(S[0].data.length),Oe=new Float32Array(S[0].data.length);for(let Ge=0;Ge<S.length;++Ge){let ye=w[Ge];const J=S[Ge].data;for(let de=0;de<J.length;++de)J[de]*=ye,J[de]>Oe[de]&&(ke[de]=Ge,Oe[de]=J[de])}let Pe=0;const tt=xe.data;for(let Ge=0;Ge<x.length;++Ge){const ye=x[Ge],[J,de]=se(ke,S,Ge,F,ae);if(J){++Pe;for(const Ce of de)tt[Ce]=Pe;ce.push({id:Pe,label_id:ye,score:w[Ge]})}}return[xe,ce]}function W(S,w,x=28,F=56*56,ae=14*14*4*1280){if(S<x||w<x)throw new Error(`height:${S} or width:${w} must be larger than factor:${x}`);if(Math.max(S,w)/Math.min(S,w)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(S,w)/Math.min(S,w)}`);let oe=Math.round(S/x)*x,ve=Math.round(w/x)*x;if(oe*ve>ae){const we=Math.sqrt(S*w/ae);oe=Math.floor(S/we/x)*x,ve=Math.floor(w/we/x)*x}else if(oe*ve<F){const we=Math.sqrt(F/(S*w));oe=Math.ceil(S*we/x)*x,ve=Math.ceil(w*we/x)*x}return[oe,ve]}function U(S,w=.5,x=.5,F=.8,ae=null,oe=null){ae===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),ae=new Set);const ve=S.class_queries_logits??S.logits,re=(S.masks_queries_logits??S.pred_masks).sigmoid();let[xe,ce,ke]=ve.dims;if(ke-=1,oe!==null&&oe.length!==xe)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Oe=[];for(let Pe=0;Pe<xe;++Pe){let tt=oe!==null?oe[Pe]:null,Ge=ve[Pe],ye=re[Pe],[J,de,Ce]=K(Ge,ye,w,ke);if(Ce.length===0){let[te,Ke]=tt??ye.dims.slice(-2),je=new A.Tensor("int32",new Int32Array(te*Ke).fill(-1),[te,Ke]);Oe.push({segmentation:je,segments_info:[]});continue}let[Be,Ze]=ne(J,de,Ce,x,F,ae,tt);Oe.push({segmentation:Be,segments_info:Ze})}return Oe}function q(S,w=.5,x=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class I extends f.Callable{constructor(w){super(),this.image_mean=w.image_mean??w.mean,this.image_std=w.image_std??w.std,this.resample=w.resample??2,this.do_rescale=w.do_rescale??!0,this.rescale_factor=w.rescale_factor??1/255,this.do_normalize=w.do_normalize,this.do_thumbnail=w.do_thumbnail,this.size=w.size??w.image_size,this.do_resize=w.do_resize??this.size!==void 0,this.size_divisibility=w.size_divisibility??w.size_divisor,this.do_center_crop=w.do_center_crop,this.crop_size=w.crop_size,this.do_convert_rgb=w.do_convert_rgb??!0,this.do_crop_margin=w.do_crop_margin,this.pad_size=w.pad_size,this.do_pad=w.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=w.do_flip_channel_order??!1,this.config=w}async thumbnail(w,x,F=2){const ae=w.height,oe=w.width,ve=x.height,we=x.width;let re=Math.min(ae,ve),xe=Math.min(oe,we);return re===ae&&xe===oe?w:(ae>oe?xe=Math.floor(oe*re/ae):oe>ae&&(re=Math.floor(ae*xe/oe)),await w.resize(xe,re,{resample:F}))}async crop_margin(w,x=200){const F=w.clone().grayscale(),ae=(0,j.min)(F.data)[0],ve=(0,j.max)(F.data)[0]-ae;if(ve===0)return w;const we=x/255;let re=F.width,xe=F.height,ce=0,ke=0;const Oe=F.data;for(let Pe=0;Pe<F.height;++Pe){const tt=Pe*F.width;for(let Ge=0;Ge<F.width;++Ge)(Oe[tt+Ge]-ae)/ve<we&&(re=Math.min(re,Ge),xe=Math.min(xe,Pe),ce=Math.max(ce,Ge),ke=Math.max(ke,Pe))}return w=await w.crop([re,xe,ce,ke]),w}pad_image(w,x,F,{mode:ae="constant",center:oe=!1,constant_values:ve=0}={}){const[we,re,xe]=x;let ce,ke;if(typeof F=="number"?(ce=F,ke=F):F==="square"?ce=ke=Math.max(we,re):(ce=F.width,ke=F.height),ce!==re||ke!==we){const Oe=new Float32Array(ce*ke*xe);if(Array.isArray(ve))for(let Ge=0;Ge<Oe.length;++Ge)Oe[Ge]=ve[Ge%xe];else ve!==0&&Oe.fill(ve);const[Pe,tt]=oe?[Math.floor((ce-re)/2),Math.floor((ke-we)/2)]:[0,0];for(let Ge=0;Ge<we;++Ge){const ye=(Ge+tt)*ce,J=Ge*re;for(let de=0;de<re;++de){const Ce=(ye+de+Pe)*xe,Be=(J+de)*xe;for(let Ze=0;Ze<xe;++Ze)Oe[Ce+Ze]=w[Be+Ze]}}if(ae==="symmetric"){if(oe)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const Ge=we-1,ye=re-1;for(let J=0;J<ke;++J){const de=J*ce,Ce=(0,X.calculateReflectOffset)(J,Ge)*re;for(let Be=0;Be<ce;++Be){if(J<we&&Be<re)continue;const Ze=(de+Be)*xe,te=(Ce+(0,X.calculateReflectOffset)(Be,ye))*xe;for(let Ke=0;Ke<xe;++Ke)Oe[Ze+Ke]=w[te+Ke]}}}w=Oe,x=[ke,ce,xe]}return[w,x]}rescale(w){for(let x=0;x<w.length;++x)w[x]=this.rescale_factor*w[x]}get_resize_output_image_size(w,x){const[F,ae]=w.size;let oe,ve;if(this.do_thumbnail){const{height:we,width:re}=x;oe=Math.min(we,re)}else Number.isInteger(x)?(oe=x,ve=this.config.max_size??oe):x!==void 0&&(oe=x.shortest_edge,ve=x.longest_edge);if(oe!==void 0||ve!==void 0){const we=oe===void 0?1:Math.max(oe/F,oe/ae),re=F*we,xe=ae*we,ce=ve===void 0?1:Math.min(ve/re,ve/xe);let ke=Math.floor(Number((re*ce).toFixed(2))),Oe=Math.floor(Number((xe*ce).toFixed(2)));return this.size_divisibility!==void 0&&([ke,Oe]=M([ke,Oe],this.size_divisibility)),[ke,Oe]}else if(x!==void 0&&x.width!==void 0&&x.height!==void 0){let we=x.width,re=x.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let xe=re/ae,ce=we/F;Math.abs(1-ce)<Math.abs(1-xe)?xe=ce:ce=xe,re=v(xe*ae,this.config.ensure_multiple_of),we=v(ce*F,this.config.ensure_multiple_of)}return[we,re]}else{if(this.size_divisibility!==void 0)return M([F,ae],this.size_divisibility);if(x.min_pixels!==void 0&&x.max_pixels!==void 0){const{min_pixels:we,max_pixels:re}=x,xe=this.config.patch_size*this.config.merge_size;return W(ae,F,xe,we,re)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(x)}`)}}async resize(w){const[x,F]=this.get_resize_output_image_size(w,this.size);return await w.resize(x,F,{resample:this.resample})}async preprocess(w,{do_normalize:x=null,do_pad:F=null,do_convert_rgb:ae=null,do_convert_grayscale:oe=null,do_flip_channel_order:ve=null}={}){this.do_crop_margin&&(w=await this.crop_margin(w));const[we,re]=w.size;if(ae??this.do_convert_rgb?w=w.rgb():oe&&(w=w.grayscale()),this.do_resize&&(w=await this.resize(w)),this.do_thumbnail&&(w=await this.thumbnail(w,this.size,this.resample)),this.do_center_crop){let Pe,tt;Number.isInteger(this.crop_size)?(Pe=this.crop_size,tt=this.crop_size):(Pe=this.crop_size.width,tt=this.crop_size.height),w=await w.center_crop(Pe,tt)}const xe=[w.height,w.width];let ce=Float32Array.from(w.data),ke=[w.height,w.width,w.channels];if(this.do_rescale&&this.rescale(ce),x??this.do_normalize){let Pe=this.image_mean;Array.isArray(this.image_mean)||(Pe=new Array(w.channels).fill(Pe));let tt=this.image_std;if(Array.isArray(this.image_std)||(tt=new Array(w.channels).fill(Pe)),Pe.length!==w.channels||tt.length!==w.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${Pe.length}) and \`image_std\` (${tt.length}) must match the number of channels in the image (${w.channels}).`);for(let Ge=0;Ge<ce.length;Ge+=w.channels)for(let ye=0;ye<w.channels;++ye)ce[Ge+ye]=(ce[Ge+ye]-Pe[ye])/tt[ye]}if(F??this.do_pad){if(this.pad_size)[ce,ke]=this.pad_image(ce,[w.height,w.width,w.channels],this.pad_size);else if(this.size_divisibility){const[Pe,tt]=M([ke[1],ke[0]],this.size_divisibility);[ce,ke]=this.pad_image(ce,ke,{width:Pe,height:tt})}}if(ve??this.do_flip_channel_order){if(ke[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let Pe=0;Pe<ce.length;Pe+=3){const tt=ce[Pe];ce[Pe]=ce[Pe+2],ce[Pe+2]=tt}}const Oe=new A.Tensor("float32",ce,ke).permute(2,0,1);return{original_size:[re,we],reshaped_input_size:xe,pixel_values:Oe}}async _call(w,...x){Array.isArray(w)||(w=[w]);const F=await Promise.all(w.map(oe=>this.preprocess(oe)));return{pixel_values:(0,A.stack)(F.map(oe=>oe.pixel_values),0),original_sizes:F.map(oe=>oe.original_size),reshaped_input_sizes:F.map(oe=>oe.reshaped_input_size)}}static async from_pretrained(w,x){const F=await(0,R.getModelJSON)(w,g.IMAGE_PROCESSOR_NAME,!0,x);return new this(F)}}},"./src/base/processing_utils.js":(Ie,$,r)=>{r.r($),r.d($,{Processor:()=>X});var f=r("./src/utils/constants.js"),A=r("./src/utils/generic.js"),j=r("./src/utils/hub.js");class X extends A.Callable{constructor(g,v){super(),this.config=g,this.components=v}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(g,v={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(g,{tokenize:!1,...v})}batch_decode(...g){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...g)}decode(...g){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...g)}async _call(g,...v){for(const M of[this.image_processor,this.feature_extractor,this.tokenizer])if(M)return M(g,...v);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(g,v){const[M,y]=await Promise.all([this.uses_processor_config?(0,j.getModelJSON)(g,f.PROCESSOR_NAME,!0,v):{},Promise.all(this.classes.filter(b=>b in this).map(async b=>{const O=await this[b].from_pretrained(g,v);return[b.replace(/_class$/,""),O]})).then(Object.fromEntries)]);return new this(M,y)}}me(X,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),me(X,"uses_processor_config",!1)},"./src/configs.js":(Ie,$,r)=>{r.r($),r.d($,{AutoConfig:()=>v,PretrainedConfig:()=>g,getKeyValueShapes:()=>R});var f=r("./src/utils/core.js"),A=r("./src/utils/hub.js");async function j(M,y){return await(0,A.getModelJSON)(M,"config.json",!0,y)}function X(M){const y={};let b={};switch(M.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":b=X(M.text_config);break;case"moondream1":b=X(M.phi_config);break;case"musicgen":b=X(M.decoder);break;case"multi_modality":b=X(M.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":y.num_heads="n_head",y.num_layers="n_layer",y.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":y.num_heads="num_attention_heads",y.num_layers="num_hidden_layers",y.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":y.num_heads="num_key_value_heads",y.num_layers="num_hidden_layers",y.hidden_size="hidden_size",y.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":y.num_heads="num_key_value_heads",y.num_layers="num_hidden_layers",y.dim_kv="head_dim";break;case"openelm":y.num_heads="num_kv_heads",y.num_layers="num_transformer_layers",y.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":y.num_heads="num_heads",y.num_layers="num_layers",y.hidden_size="hidden_size";break;case"bloom":y.num_heads="n_head",y.num_layers="n_layer",y.hidden_size="hidden_size";break;case"mpt":y.num_heads="n_heads",y.num_layers="n_layers",y.hidden_size="d_model";break;case"exaone":y.num_heads="num_key_value_heads",y.num_layers="num_layers",y.dim_kv="head_dim",y.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":y.num_decoder_layers="num_decoder_layers",y.num_decoder_heads="num_heads",y.decoder_dim_kv="d_kv",y.num_encoder_layers="num_layers",y.num_encoder_heads="num_heads",y.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":y.num_decoder_layers="decoder_layers",y.num_decoder_heads="decoder_attention_heads",y.decoder_hidden_size="d_model",y.num_encoder_layers="encoder_layers",y.num_encoder_heads="encoder_attention_heads",y.encoder_hidden_size="d_model";break;case"speecht5":y.num_decoder_layers="decoder_layers",y.num_decoder_heads="decoder_attention_heads",y.decoder_hidden_size="hidden_size",y.num_encoder_layers="encoder_layers",y.num_encoder_heads="encoder_attention_heads",y.encoder_hidden_size="hidden_size";break;case"trocr":y.num_encoder_layers=y.num_decoder_layers="decoder_layers",y.num_encoder_heads=y.num_decoder_heads="decoder_attention_heads",y.encoder_hidden_size=y.decoder_hidden_size="d_model";break;case"musicgen_decoder":y.num_encoder_layers=y.num_decoder_layers="num_hidden_layers",y.num_encoder_heads=y.num_decoder_heads="num_attention_heads",y.encoder_hidden_size=y.decoder_hidden_size="hidden_size";break;case"moonshine":y.num_decoder_layers="decoder_num_hidden_layers",y.num_decoder_heads="decoder_num_key_value_heads",y.num_encoder_layers="encoder_num_hidden_layers",y.num_encoder_heads="encoder_num_key_value_heads",y.encoder_hidden_size=y.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const K=X(M.decoder),se="num_decoder_layers"in K,ne=(0,f.pick)(M,["model_type","is_encoder_decoder"]);return se?(ne.num_decoder_layers=K.num_decoder_layers,ne.num_decoder_heads=K.num_decoder_heads,ne.decoder_hidden_size=K.decoder_hidden_size,ne.num_encoder_layers=K.num_encoder_layers,ne.num_encoder_heads=K.num_encoder_heads,ne.encoder_hidden_size=K.encoder_hidden_size):(ne.num_layers=K.num_layers,ne.num_heads=K.num_heads,ne.hidden_size=K.hidden_size),ne}const O={...b,...(0,f.pick)(M,["model_type","multi_query","is_encoder_decoder"])};for(const K in y)O[K]=M[y[K]];return O}function R(M,{prefix:y="past_key_values",batch_size:b=1}={}){const O={},K=M.normalized_config;if(K.is_encoder_decoder&&"num_encoder_heads"in K&&"num_decoder_heads"in K){const se=K.encoder_dim_kv??K.encoder_hidden_size/K.num_encoder_heads,ne=K.decoder_dim_kv??K.decoder_hidden_size/K.num_decoder_heads,W=[b,K.num_encoder_heads,0,se],U=[b,K.num_decoder_heads,0,ne];for(let q=0;q<K.num_decoder_layers;++q)O[`${y}.${q}.encoder.key`]=W,O[`${y}.${q}.encoder.value`]=W,O[`${y}.${q}.decoder.key`]=U,O[`${y}.${q}.decoder.value`]=U}else{const se=K.num_heads,ne=K.num_layers,W=K.dim_kv??K.hidden_size/(K.num_attention_heads??se);if(K.model_type==="falcon"){const U=[b*se,0,W];for(let q=0;q<ne;++q)O[`${y}.${q}.key`]=U,O[`${y}.${q}.value`]=U}else if(K.multi_query){const U=[b*se,0,2*W];for(let q=0;q<ne;++q)O[`${y}.${q}.key_value`]=U}else if(K.model_type==="bloom"){const U=[b*se,W,0],q=[b*se,0,W];for(let I=0;I<ne;++I)O[`${y}.${I}.key`]=U,O[`${y}.${I}.value`]=q}else if(K.model_type==="openelm")for(let U=0;U<ne;++U){const q=[b,se[U],0,W];O[`${y}.${U}.key`]=q,O[`${y}.${U}.value`]=q}else{const U=[b,se,0,W];for(let q=0;q<ne;++q)O[`${y}.${q}.key`]=U,O[`${y}.${q}.value`]=U}}return O}class g{constructor(y){me(this,"model_type",null);me(this,"is_encoder_decoder",!1);me(this,"max_position_embeddings");me(this,"transformers.js_config");Object.assign(this,y),this.normalized_config=X(this)}static async from_pretrained(y,{progress_callback:b=null,config:O=null,cache_dir:K=null,local_files_only:se=!1,revision:ne="main"}={}){O&&!(O instanceof g)&&(O=new g(O));const W=O??await j(y,{progress_callback:b,config:O,cache_dir:K,local_files_only:se,revision:ne});return new this(W)}}class v{static async from_pretrained(...y){return g.from_pretrained(...y)}}},"./src/env.js":(Ie,$,r)=>{var F,ae;r.r($),r.d($,{apis:()=>ne,env:()=>w});var f=r("?569f"),A=r("?3f59"),j=r("?154a");const X="3.3.2",R=typeof window<"u"&&typeof window.document<"u",g=typeof self<"u"&&((F=self.constructor)==null?void 0:F.name)==="DedicatedWorkerGlobalScope",v=typeof self<"u"&&"caches"in self,M=typeof navigator<"u"&&"gpu"in navigator,y=typeof navigator<"u"&&"ml"in navigator,b=typeof process<"u",O=b&&((ae=process==null?void 0:process.release)==null?void 0:ae.name)==="node",K=!x(f),se=!x(A),ne=Object.freeze({IS_BROWSER_ENV:R,IS_WEBWORKER_ENV:g,IS_WEB_CACHE_AVAILABLE:v,IS_WEBGPU_AVAILABLE:M,IS_WEBNN_AVAILABLE:y,IS_PROCESS_AVAILABLE:b,IS_NODE_ENV:O,IS_FS_AVAILABLE:K,IS_PATH_AVAILABLE:se}),W=K&&se;let U="./";if(W){const oe=Object(import.meta).url;oe?U=A.dirname(A.dirname(j.fileURLToPath(oe))):typeof __dirname<"u"&&(U=A.dirname(__dirname))}const q=W?A.join(U,"/.cache/"):null,I="/models/",S=W?A.join(U,I):I,w={version:X,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(R||g),localModelPath:S,useFS:K,useBrowserCache:v,useFSCache:K,cacheDir:q,useCustomCache:!1,customCache:null};function x(oe){return Object.keys(oe).length===0}},"./src/generation/configuration_utils.js":(Ie,$,r)=>{r.r($),r.d($,{GenerationConfig:()=>A});var f=r("./src/utils/core.js");class A{constructor(X){me(this,"max_length",20);me(this,"max_new_tokens",null);me(this,"min_length",0);me(this,"min_new_tokens",null);me(this,"early_stopping",!1);me(this,"max_time",null);me(this,"do_sample",!1);me(this,"num_beams",1);me(this,"num_beam_groups",1);me(this,"penalty_alpha",null);me(this,"use_cache",!0);me(this,"temperature",1);me(this,"top_k",50);me(this,"top_p",1);me(this,"typical_p",1);me(this,"epsilon_cutoff",0);me(this,"eta_cutoff",0);me(this,"diversity_penalty",0);me(this,"repetition_penalty",1);me(this,"encoder_repetition_penalty",1);me(this,"length_penalty",1);me(this,"no_repeat_ngram_size",0);me(this,"bad_words_ids",null);me(this,"force_words_ids",null);me(this,"renormalize_logits",!1);me(this,"constraints",null);me(this,"forced_bos_token_id",null);me(this,"forced_eos_token_id",null);me(this,"remove_invalid_values",!1);me(this,"exponential_decay_length_penalty",null);me(this,"suppress_tokens",null);me(this,"streamer",null);me(this,"begin_suppress_tokens",null);me(this,"forced_decoder_ids",null);me(this,"guidance_scale",null);me(this,"num_return_sequences",1);me(this,"output_attentions",!1);me(this,"output_hidden_states",!1);me(this,"output_scores",!1);me(this,"return_dict_in_generate",!1);me(this,"pad_token_id",null);me(this,"bos_token_id",null);me(this,"eos_token_id",null);me(this,"encoder_no_repeat_ngram_size",0);me(this,"decoder_start_token_id",null);me(this,"generation_kwargs",{});Object.assign(this,(0,f.pick)(X,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(Ie,$,r)=>{r.r($),r.d($,{ClassifierFreeGuidanceLogitsProcessor:()=>W,ForcedBOSTokenLogitsProcessor:()=>g,ForcedEOSTokenLogitsProcessor:()=>v,LogitsProcessor:()=>j,LogitsProcessorList:()=>R,LogitsWarper:()=>X,MinLengthLogitsProcessor:()=>K,MinNewTokensLengthLogitsProcessor:()=>se,NoBadWordsLogitsProcessor:()=>ne,NoRepeatNGramLogitsProcessor:()=>b,RepetitionPenaltyLogitsProcessor:()=>O,SuppressTokensAtBeginLogitsProcessor:()=>M,TemperatureLogitsWarper:()=>U,TopKLogitsWarper:()=>I,TopPLogitsWarper:()=>q,WhisperTimeStampLogitsProcessor:()=>y});var f=r("./src/utils/generic.js");r("./src/utils/tensor.js");var A=r("./src/utils/maths.js");class j extends f.Callable{_call(w,x){throw Error("`_call` should be implemented in a subclass")}}class X extends f.Callable{_call(w,x){throw Error("`_call` should be implemented in a subclass")}}class R extends f.Callable{constructor(){super(),this.processors=[]}push(w){this.processors.push(w)}extend(w){this.processors.push(...w)}_call(w,x){let F=x;for(const ae of this.processors)F=ae(w,F);return F}[Symbol.iterator](){return this.processors.values()}}class g extends j{constructor(w){super(),this.bos_token_id=w}_call(w,x){for(let F=0;F<w.length;++F)if(w[F].length===1){const ae=x[F].data;ae.fill(-1/0),ae[this.bos_token_id]=0}return x}}class v extends j{constructor(w,x){super(),this.max_length=w,this.eos_token_id=Array.isArray(x)?x:[x]}_call(w,x){for(let F=0;F<w.length;++F)if(w[F].length===this.max_length-1){const ae=x[F].data;ae.fill(-1/0);for(const oe of this.eos_token_id)ae[oe]=0}return x}}class M extends j{constructor(w,x){super(),this.begin_suppress_tokens=w,this.begin_index=x}_call(w,x){for(let F=0;F<w.length;++F)if(w[F].length===this.begin_index){const ae=x[F].data;for(const oe of this.begin_suppress_tokens)ae[oe]=-1/0}return x}}class y extends j{constructor(w,x){super(),this.eos_token_id=Array.isArray(w.eos_token_id)?w.eos_token_id[0]:w.eos_token_id,this.no_timestamps_token_id=w.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=x.length,x.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=w.max_initial_timestamp_index}_call(w,x){for(let F=0;F<w.length;++F){const ae=x[F].data;if(ae[this.no_timestamps_token_id]=-1/0,w[F].length===this.begin_index-1){ae.fill(-1/0),ae[this.timestamp_begin]=0;continue}const oe=w[F].slice(this.begin_index),ve=oe.length>=1&&oe[oe.length-1]>=this.timestamp_begin,we=oe.length<2||oe[oe.length-2]>=this.timestamp_begin;if(ve&&(we?ae.subarray(this.timestamp_begin).fill(-1/0):ae.subarray(0,this.eos_token_id).fill(-1/0)),w[F].length===this.begin_index&&this.max_initial_timestamp_index!==null){const ke=this.timestamp_begin+this.max_initial_timestamp_index;ae.subarray(ke+1).fill(-1/0)}const re=(0,A.log_softmax)(ae),xe=Math.log(re.subarray(this.timestamp_begin).map(Math.exp).reduce((ke,Oe)=>ke+Oe)),ce=(0,A.max)(re.subarray(0,this.timestamp_begin))[0];xe>ce&&ae.subarray(0,this.timestamp_begin).fill(-1/0)}return x}}class b extends j{constructor(w){super(),this.no_repeat_ngram_size=w}getNgrams(w){const x=w.length,F=[];for(let oe=0;oe<x+1-this.no_repeat_ngram_size;++oe){const ve=[];for(let we=0;we<this.no_repeat_ngram_size;++we)ve.push(w[oe+we]);F.push(ve.map(Number))}const ae=new Map;for(const oe of F){const ve=oe.slice(0,oe.length-1),we=JSON.stringify(ve),re=ae.get(we)??[];re.push(oe[oe.length-1]),ae.set(we,re)}return ae}getGeneratedNgrams(w,x){const F=x.slice(x.length+1-this.no_repeat_ngram_size,x.length);return w.get(JSON.stringify(F.map(Number)))??[]}calcBannedNgramTokens(w){const x=[];if(w.length+1<this.no_repeat_ngram_size)return x;{const F=this.getNgrams(w);return this.getGeneratedNgrams(F,w)}}_call(w,x){for(let F=0;F<w.length;++F){const ae=x[F].data,oe=this.calcBannedNgramTokens(w[F]);for(const ve of oe)ae[ve]=-1/0}return x}}class O extends j{constructor(w){super(),this.penalty=w}_call(w,x){for(let F=0;F<w.length;++F){const ae=x[F].data;for(const oe of new Set(w[F])){const ve=Number(oe);ae[ve]<0?ae[ve]*=this.penalty:ae[ve]/=this.penalty}}return x}}class K extends j{constructor(w,x){super(),this.min_length=w,this.eos_token_id=Array.isArray(x)?x:[x]}_call(w,x){for(let F=0;F<w.length;++F)if(w[F].length<this.min_length){const ae=x[F].data;for(const oe of this.eos_token_id)ae[oe]=-1/0}return x}}class se extends j{constructor(w,x,F){super(),this.prompt_length_to_skip=w,this.min_new_tokens=x,this.eos_token_id=Array.isArray(F)?F:[F]}_call(w,x){for(let F=0;F<w.length;++F)if(w[F].length-this.prompt_length_to_skip<this.min_new_tokens){const oe=x[F].data;for(const ve of this.eos_token_id)oe[ve]=-1/0}return x}}class ne extends j{constructor(w,x){super(),this.bad_words_ids=w,this.eos_token_id=Array.isArray(x)?x:[x]}_call(w,x){for(let F=0;F<w.length;++F){const ae=x[F].data,oe=w[F];for(const ve of this.bad_words_ids){let we=!0;for(let re=1;re<=ve.length-1&&ve.length<oe.length;++re)if(ve.at(-re-1)!=oe.at(-re)){we=!1;break}we&&(ae[ve.at(-1)]=-1/0)}}return x}}class W extends j{constructor(w){if(super(),w<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${w}.`);this.guidance_scale=w}_call(w,x){if(x.dims[0]!==2*w.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${x.dims[0]} for the logits and ${w.length} for the input ids.`);const F=w.length,ae=x.slice([0,F],null),oe=x.slice([F,x.dims[0]],null);for(let ve=0;ve<oe.data.length;++ve)oe.data[ve]+=(ae.data[ve]-oe.data[ve])*this.guidance_scale;return oe}}class U extends X{constructor(w){super(),this.temperature=w}_call(w,x){const F=x.data;for(let ae=0;ae<F.length;++ae)F[ae]/=this.temperature;return x}}class q extends X{constructor(w,{filter_value:x=-1/0,min_tokens_to_keep:F=1}={}){if(super(),w<0||w>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${w}`);if(!Number.isInteger(F)||F<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${F}`);this.top_p=w,this.filter_value=x,this.min_tokens_to_keep=F}}class I extends X{constructor(w,{filter_value:x=-1/0,min_tokens_to_keep:F=1}={}){if(super(),!Number.isInteger(w)||w<0)throw new Error(`\`top_k\` must be a positive integer, but is ${w}`);this.top_k=Math.max(w,F),this.filter_value=x}}},"./src/generation/logits_sampler.js":(Ie,$,r)=>{r.r($),r.d($,{LogitsSampler:()=>X});var f=r("./src/utils/generic.js"),A=r("./src/utils/tensor.js"),j=r("./src/utils/maths.js");r("./src/generation/configuration_utils.js");class X extends f.Callable{constructor(y){super(),this.generation_config=y}async _call(y){return this.sample(y)}async sample(y){throw Error("sample should be implemented in subclasses.")}getLogits(y,b){let O=y.dims.at(-1),K=y.data;if(b===-1)K=K.slice(-O);else{let se=b*O;K=K.slice(se,se+O)}return K}randomSelect(y){let b=0;for(let K=0;K<y.length;++K)b+=y[K];let O=Math.random()*b;for(let K=0;K<y.length;++K)if(O-=y[K],O<=0)return K;return 0}static getSampler(y){if(y.do_sample)return new g(y);if(y.num_beams>1)return new v(y);if(y.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${y.num_return_sequences}.`);return new R(y)}}class R extends X{async sample(y){const b=(0,j.max)(y.data)[1];return[[BigInt(b),0]]}}class g extends X{async sample(y){let b=y.dims.at(-1);this.generation_config.top_k>0&&(b=Math.min(this.generation_config.top_k,b));const[O,K]=await(0,A.topk)(y,b),se=(0,j.softmax)(O.data);return Array.from({length:this.generation_config.num_beams},()=>{const ne=this.randomSelect(se);return[K.data[ne],Math.log(se[ne])]})}}class v extends X{async sample(y){let b=y.dims.at(-1);this.generation_config.top_k>0&&(b=Math.min(this.generation_config.top_k,b));const[O,K]=await(0,A.topk)(y,b),se=(0,j.softmax)(O.data);return Array.from({length:this.generation_config.num_beams},(ne,W)=>[K.data[W],Math.log(se[W])])}}},"./src/generation/stopping_criteria.js":(Ie,$,r)=>{r.r($),r.d($,{EosTokenCriteria:()=>R,InterruptableStoppingCriteria:()=>g,MaxLengthCriteria:()=>X,StoppingCriteria:()=>A,StoppingCriteriaList:()=>j});var f=r("./src/utils/generic.js");class A extends f.Callable{_call(M,y){throw Error("StoppingCriteria needs to be subclassed")}}class j extends f.Callable{constructor(){super(),this.criteria=[]}push(M){this.criteria.push(M)}extend(M){M instanceof j?M=M.criteria:M instanceof A&&(M=[M]),this.criteria.push(...M)}_call(M,y){const b=new Array(M.length).fill(!1);for(const O of this.criteria){const K=O(M,y);for(let se=0;se<b.length;++se)b[se]||(b[se]=K[se])}return b}[Symbol.iterator](){return this.criteria.values()}}class X extends A{constructor(M,y=null){super(),this.max_length=M,this.max_position_embeddings=y}_call(M){return M.map(y=>y.length>=this.max_length)}}class R extends A{constructor(M){super(),Array.isArray(M)||(M=[M]),this.eos_token_id=M}_call(M,y){return M.map(b=>{const O=b.at(-1);return this.eos_token_id.some(K=>O==K)})}}class g extends A{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(M,y){return new Array(M.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(Ie,$,r)=>{r.r($),r.d($,{BaseStreamer:()=>X,TextStreamer:()=>g,WhisperTextStreamer:()=>v});var f=r("./src/utils/core.js"),A=r("./src/tokenizers.js"),j=r("./src/env.js");class X{put(y){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const R=j.apis.IS_PROCESS_AVAILABLE?M=>process.stdout.write(M):M=>console.log(M);class g extends X{constructor(y,{skip_prompt:b=!1,callback_function:O=null,token_callback_function:K=null,skip_special_tokens:se=!0,decode_kwargs:ne={},...W}={}){super(),this.tokenizer=y,this.skip_prompt=b,this.callback_function=O??R,this.token_callback_function=K,this.decode_kwargs={skip_special_tokens:se,...ne,...W},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(y){var se;if(y.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const b=y[0];(se=this.token_callback_function)==null||se.call(this,b),this.token_cache=(0,f.mergeArrays)(this.token_cache,b);const O=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let K;O.endsWith(`
`)?(K=O.slice(this.print_len),this.token_cache=[],this.print_len=0):O.length>0&&(0,A.is_chinese_char)(O.charCodeAt(O.length-1))?(K=O.slice(this.print_len),this.print_len+=K.length):(K=O.slice(this.print_len,O.lastIndexOf(" ")+1),this.print_len+=K.length),this.on_finalized_text(K,!1)}end(){let y;this.token_cache.length>0?(y=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):y="",this.next_tokens_are_prompt=!0,this.on_finalized_text(y,!0)}on_finalized_text(y,b){var O,K;y.length>0&&((O=this.callback_function)==null||O.call(this,y)),b&&this.callback_function===R&&j.apis.IS_PROCESS_AVAILABLE&&((K=this.callback_function)==null||K.call(this,`
`))}}class v extends g{constructor(y,{skip_prompt:b=!1,callback_function:O=null,token_callback_function:K=null,on_chunk_start:se=null,on_chunk_end:ne=null,on_finalize:W=null,time_precision:U=.02,skip_special_tokens:q=!0,decode_kwargs:I={}}={}){super(y,{skip_prompt:b,skip_special_tokens:q,callback_function:O,token_callback_function:K,decode_kwargs:I}),this.timestamp_begin=y.timestamp_begin,this.on_chunk_start=se,this.on_chunk_end=ne,this.on_finalize=W,this.time_precision=U,this.waiting_for_timestamp=!1}put(y){var O,K;if(y.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const b=y[0];if(b.length===1){const se=Number(b[0])-this.timestamp_begin;if(se>=0){const ne=se*this.time_precision;this.waiting_for_timestamp?(O=this.on_chunk_end)==null||O.call(this,ne):(K=this.on_chunk_start)==null||K.call(this,ne),this.waiting_for_timestamp=!this.waiting_for_timestamp,y=[[]]}}return super.put(y)}end(){var y;super.end(),(y=this.on_finalize)==null||y.call(this)}}},"./src/models.js":(Ie,$,r)=>{r.r($),r.d($,{ASTForAudioClassification:()=>Uo,ASTModel:()=>Ra,ASTPreTrainedModel:()=>Yt,AlbertForMaskedLM:()=>as,AlbertForQuestionAnswering:()=>Rn,AlbertForSequenceClassification:()=>vn,AlbertModel:()=>Bn,AlbertPreTrainedModel:()=>Wr,AutoModel:()=>Ea,AutoModelForAudioClassification:()=>gc,AutoModelForAudioFrameClassification:()=>xp,AutoModelForCTC:()=>fc,AutoModelForCausalLM:()=>ic,AutoModelForDepthEstimation:()=>Tp,AutoModelForDocumentQuestionAnswering:()=>yc,AutoModelForImageClassification:()=>dc,AutoModelForImageFeatureExtraction:()=>Tc,AutoModelForImageMatting:()=>Mc,AutoModelForImageSegmentation:()=>cc,AutoModelForImageToImage:()=>bc,AutoModelForMaskGeneration:()=>_c,AutoModelForMaskedLM:()=>ac,AutoModelForNormalEstimation:()=>vc,AutoModelForObjectDetection:()=>hc,AutoModelForPoseEstimation:()=>xc,AutoModelForQuestionAnswering:()=>lc,AutoModelForSemanticSegmentation:()=>Pa,AutoModelForSeq2SeqLM:()=>sc,AutoModelForSequenceClassification:()=>vp,AutoModelForSpeechSeq2Seq:()=>rc,AutoModelForTextToSpectrogram:()=>nc,AutoModelForTextToWaveform:()=>oc,AutoModelForTokenClassification:()=>tc,AutoModelForUniversalSegmentation:()=>pc,AutoModelForVision2Seq:()=>uc,AutoModelForXVector:()=>wc,AutoModelForZeroShotObjectDetection:()=>mc,BartForConditionalGeneration:()=>Kt,BartForSequenceClassification:()=>ms,BartModel:()=>xt,BartPretrainedModel:()=>_t,BaseModelOutput:()=>je,BeitForImageClassification:()=>rn,BeitModel:()=>sn,BeitPreTrainedModel:()=>pu,BertForMaskedLM:()=>Ue,BertForQuestionAnswering:()=>Re,BertForSequenceClassification:()=>Ve,BertForTokenClassification:()=>Ne,BertModel:()=>Te,BertPreTrainedModel:()=>le,BlenderbotForConditionalGeneration:()=>Js,BlenderbotModel:()=>ze,BlenderbotPreTrainedModel:()=>Ws,BlenderbotSmallForConditionalGeneration:()=>Xs,BlenderbotSmallModel:()=>ks,BlenderbotSmallPreTrainedModel:()=>Or,BloomForCausalLM:()=>Nl,BloomModel:()=>Rl,BloomPreTrainedModel:()=>Mi,CLIPModel:()=>Ya,CLIPPreTrainedModel:()=>tn,CLIPSegForImageSegmentation:()=>nl,CLIPSegModel:()=>rl,CLIPSegPreTrainedModel:()=>Qo,CLIPTextModel:()=>Bc,CLIPTextModelWithProjection:()=>Ja,CLIPVisionModel:()=>Rc,CLIPVisionModelWithProjection:()=>Za,CamembertForMaskedLM:()=>Xr,CamembertForQuestionAnswering:()=>Yr,CamembertForSequenceClassification:()=>Sr,CamembertForTokenClassification:()=>$r,CamembertModel:()=>Nt,CamembertPreTrainedModel:()=>Tr,CausalLMOutput:()=>un,CausalLMOutputWithPast:()=>Ep,ChineseCLIPModel:()=>fr,ChineseCLIPPreTrainedModel:()=>Nc,ClapAudioModelWithProjection:()=>md,ClapModel:()=>nr,ClapPreTrainedModel:()=>aa,ClapTextModelWithProjection:()=>hd,CodeGenForCausalLM:()=>fl,CodeGenModel:()=>si,CodeGenPreTrainedModel:()=>uo,CohereForCausalLM:()=>Pl,CohereModel:()=>El,CoherePreTrainedModel:()=>hi,ConvBertForMaskedLM:()=>kt,ConvBertForQuestionAnswering:()=>ys,ConvBertForSequenceClassification:()=>It,ConvBertForTokenClassification:()=>os,ConvBertModel:()=>vt,ConvBertPreTrainedModel:()=>mt,ConvNextForImageClassification:()=>Xi,ConvNextModel:()=>Cu,ConvNextPreTrainedModel:()=>Qi,ConvNextV2ForImageClassification:()=>Ji,ConvNextV2Model:()=>ku,ConvNextV2PreTrainedModel:()=>Yi,DPTForDepthEstimation:()=>qc,DPTModel:()=>wu,DPTPreTrainedModel:()=>Ki,DebertaForMaskedLM:()=>Ir,DebertaForQuestionAnswering:()=>ar,DebertaForSequenceClassification:()=>Br,DebertaForTokenClassification:()=>Rr,DebertaModel:()=>Jr,DebertaPreTrainedModel:()=>dr,DebertaV2ForMaskedLM:()=>Dt,DebertaV2ForQuestionAnswering:()=>Ar,DebertaV2ForSequenceClassification:()=>Vs,DebertaV2ForTokenClassification:()=>Nr,DebertaV2Model:()=>Tt,DebertaV2PreTrainedModel:()=>ot,DecisionTransformerModel:()=>hp,DecisionTransformerPreTrainedModel:()=>Cd,DeiTForImageClassification:()=>Bi,DeiTModel:()=>_u,DeiTPreTrainedModel:()=>fo,DepthAnythingForDepthEstimation:()=>Mu,DepthAnythingPreTrainedModel:()=>yu,DepthProForDepthEstimation:()=>qi,DepthProPreTrainedModel:()=>yo,DetrForObjectDetection:()=>nn,DetrForSegmentation:()=>Ks,DetrModel:()=>Ai,DetrObjectDetectionOutput:()=>Oi,DetrPreTrainedModel:()=>Fr,DetrSegmentationOutput:()=>Fi,Dinov2ForImageClassification:()=>Yc,Dinov2Model:()=>Su,Dinov2PreTrainedModel:()=>Zi,Dinov2WithRegistersForImageClassification:()=>Iu,Dinov2WithRegistersModel:()=>$u,Dinov2WithRegistersPreTrainedModel:()=>ea,DistilBertForMaskedLM:()=>fn,DistilBertForQuestionAnswering:()=>es,DistilBertForSequenceClassification:()=>Os,DistilBertForTokenClassification:()=>Er,DistilBertModel:()=>lr,DistilBertPreTrainedModel:()=>Ms,DonutSwinModel:()=>Pu,DonutSwinPreTrainedModel:()=>Xc,EfficientNetForImageClassification:()=>Md,EfficientNetModel:()=>yd,EfficientNetPreTrainedModel:()=>ko,ElectraForMaskedLM:()=>sr,ElectraForQuestionAnswering:()=>Us,ElectraForSequenceClassification:()=>kr,ElectraForTokenClassification:()=>Qr,ElectraModel:()=>Ds,ElectraPreTrainedModel:()=>Cs,EsmForMaskedLM:()=>In,EsmForSequenceClassification:()=>An,EsmForTokenClassification:()=>On,EsmModel:()=>no,EsmPreTrainedModel:()=>jr,ExaoneForCausalLM:()=>li,ExaoneModel:()=>yl,ExaonePreTrainedModel:()=>ai,FalconForCausalLM:()=>pd,FalconModel:()=>cd,FalconPreTrainedModel:()=>ia,FastViTForImageClassification:()=>su,FastViTModel:()=>tu,FastViTPreTrainedModel:()=>Ci,Florence2ForConditionalGeneration:()=>Ka,Florence2PreTrainedModel:()=>Ga,GLPNForDepthEstimation:()=>Eu,GLPNModel:()=>Qc,GLPNPreTrainedModel:()=>bo,GPT2LMHeadModel:()=>il,GPT2Model:()=>ol,GPT2PreTrainedModel:()=>Xo,GPTBigCodeForCausalLM:()=>_l,GPTBigCodeModel:()=>ml,GPTBigCodePreTrainedModel:()=>ti,GPTJForCausalLM:()=>hl,GPTJModel:()=>pl,GPTJPreTrainedModel:()=>ei,GPTNeoForCausalLM:()=>ul,GPTNeoModel:()=>wr,GPTNeoPreTrainedModel:()=>Jo,GPTNeoXForCausalLM:()=>cl,GPTNeoXModel:()=>dl,GPTNeoXPreTrainedModel:()=>Zo,Gemma2ForCausalLM:()=>$l,Gemma2Model:()=>Sl,Gemma2PreTrainedModel:()=>_i,GemmaForCausalLM:()=>kl,GemmaModel:()=>Cl,GemmaPreTrainedModel:()=>mi,GlmForCausalLM:()=>Nn,GlmModel:()=>wl,GlmPreTrainedModel:()=>ii,GraniteForCausalLM:()=>Tl,GraniteModel:()=>ds,GranitePreTrainedModel:()=>pi,GroundingDinoForObjectDetection:()=>Au,GroundingDinoPreTrainedModel:()=>Jc,GroupViTModel:()=>yr,GroupViTPreTrainedModel:()=>eu,HeliumForCausalLM:()=>gl,HeliumModel:()=>co,HeliumPreTrainedModel:()=>oi,HieraForImageClassification:()=>Ni,HieraModel:()=>go,HieraPreTrainedModel:()=>Ri,HubertForCTC:()=>Zu,HubertForSequenceClassification:()=>ip,HubertModel:()=>Ju,HubertPreTrainedModel:()=>op,IJepaForImageClassification:()=>Hl,IJepaModel:()=>Kl,IJepaPreTrainedModel:()=>mo,Idefics3ForConditionalGeneration:()=>Ko,Idefics3PreTrainedModel:()=>Qa,ImageMattingOutput:()=>Ec,JAISLMHeadModel:()=>ll,JAISModel:()=>al,JAISPreTrainedModel:()=>Yo,JinaCLIPModel:()=>lo,JinaCLIPPreTrainedModel:()=>ao,JinaCLIPTextModel:()=>qo,JinaCLIPVisionModel:()=>gr,LlamaForCausalLM:()=>jc,LlamaModel:()=>ni,LlamaPreTrainedModel:()=>ri,LlavaForConditionalGeneration:()=>io,LlavaOnevisionForConditionalGeneration:()=>Va,LlavaPreTrainedModel:()=>Gr,LongT5ForConditionalGeneration:()=>Se,LongT5Model:()=>be,LongT5PreTrainedModel:()=>ue,M2M100ForConditionalGeneration:()=>ra,M2M100Model:()=>Bu,M2M100PreTrainedModel:()=>sa,MBartForCausalLM:()=>rr,MBartForConditionalGeneration:()=>Bt,MBartForSequenceClassification:()=>rs,MBartModel:()=>Fs,MBartPreTrainedModel:()=>us,MPNetForMaskedLM:()=>Zr,MPNetForQuestionAnswering:()=>Mn,MPNetForSequenceClassification:()=>wn,MPNetForTokenClassification:()=>yn,MPNetModel:()=>gn,MPNetPreTrainedModel:()=>ur,MT5ForConditionalGeneration:()=>gt,MT5Model:()=>pt,MT5PreTrainedModel:()=>Qe,MarianMTModel:()=>zu,MarianModel:()=>Lu,MarianPreTrainedModel:()=>xo,MaskFormerForInstanceSegmentation:()=>Tu,MaskFormerModel:()=>xu,MaskFormerPreTrainedModel:()=>Mo,MaskedLMOutput:()=>qs,MgpstrForSceneTextRecognition:()=>Ad,MgpstrModelOutput:()=>$d,MgpstrPreTrainedModel:()=>Id,MistralForCausalLM:()=>ld,MistralModel:()=>ad,MistralPreTrainedModel:()=>na,MobileBertForMaskedLM:()=>oo,MobileBertForQuestionAnswering:()=>mr,MobileBertForSequenceClassification:()=>Vr,MobileBertModel:()=>Fn,MobileBertPreTrainedModel:()=>Ur,MobileLLMForCausalLM:()=>bl,MobileLLMModel:()=>Ml,MobileLLMPreTrainedModel:()=>ui,MobileNetV1ForImageClassification:()=>ha,MobileNetV1Model:()=>cp,MobileNetV1PreTrainedModel:()=>pa,MobileNetV2ForImageClassification:()=>vd,MobileNetV2Model:()=>bd,MobileNetV2PreTrainedModel:()=>ma,MobileNetV3ForImageClassification:()=>Ed,MobileNetV3Model:()=>Td,MobileNetV3PreTrainedModel:()=>xd,MobileNetV4ForImageClassification:()=>Pd,MobileNetV4Model:()=>pp,MobileNetV4PreTrainedModel:()=>_a,MobileViTForImageClassification:()=>iu,MobileViTModel:()=>ou,MobileViTPreTrainedModel:()=>ki,MobileViTV2ForImageClassification:()=>Gc,MobileViTV2Model:()=>au,MobileViTV2PreTrainedModel:()=>Si,ModelOutput:()=>Ke,ModernBertForMaskedLM:()=>ct,ModernBertForSequenceClassification:()=>lt,ModernBertForTokenClassification:()=>ht,ModernBertModel:()=>dt,ModernBertPreTrainedModel:()=>st,Moondream1ForConditionalGeneration:()=>Wa,MoonshineForConditionalGeneration:()=>Ua,MoonshineModel:()=>cr,MoonshinePreTrainedModel:()=>Wo,MptForCausalLM:()=>Ul,MptModel:()=>jl,MptPreTrainedModel:()=>bi,MultiModalityCausalLM:()=>Sd,MultiModalityPreTrainedModel:()=>kd,MusicgenForCausalLM:()=>dp,MusicgenForConditionalGeneration:()=>So,MusicgenModel:()=>up,MusicgenPreTrainedModel:()=>ca,NomicBertModel:()=>ie,NomicBertPreTrainedModel:()=>L,OPTForCausalLM:()=>Wl,OPTModel:()=>Vl,OPTPreTrainedModel:()=>vi,Olmo2ForCausalLM:()=>Vc,Olmo2Model:()=>xl,Olmo2PreTrainedModel:()=>ci,OlmoForCausalLM:()=>vl,OlmoModel:()=>Uc,OlmoPreTrainedModel:()=>di,OpenELMForCausalLM:()=>Al,OpenELMModel:()=>Il,OpenELMPreTrainedModel:()=>fi,OwlViTForObjectDetection:()=>uu,OwlViTModel:()=>lu,OwlViTPreTrainedModel:()=>$i,Owlv2ForObjectDetection:()=>cu,Owlv2Model:()=>du,Owlv2PreTrainedModel:()=>Ii,PaliGemmaForConditionalGeneration:()=>qa,PaliGemmaPreTrainedModel:()=>Ha,PatchTSMixerForPrediction:()=>zd,PatchTSMixerModel:()=>Ld,PatchTSMixerPreTrainedModel:()=>fa,PatchTSTForPrediction:()=>Dd,PatchTSTModel:()=>Fd,PatchTSTPreTrainedModel:()=>Od,Phi3ForCausalLM:()=>Bl,Phi3Model:()=>zl,Phi3PreTrainedModel:()=>yi,Phi3VForCausalLM:()=>pr,Phi3VPreTrainedModel:()=>Xa,PhiForCausalLM:()=>Ll,PhiModel:()=>Dl,PhiPreTrainedModel:()=>wi,PreTrainedModel:()=>te,PretrainedMixin:()=>gs,PvtForImageClassification:()=>Ei,PvtModel:()=>Xl,PvtPreTrainedModel:()=>Ti,PyAnnoteForAudioFrameClassification:()=>Vu,PyAnnoteModel:()=>Uu,PyAnnotePreTrainedModel:()=>To,QuestionAnsweringModelOutput:()=>tr,Qwen2ForCausalLM:()=>Ol,Qwen2Model:()=>jn,Qwen2PreTrainedModel:()=>gi,Qwen2VLForConditionalGeneration:()=>Fl,Qwen2VLPreTrainedModel:()=>po,RTDetrForObjectDetection:()=>Un,RTDetrModel:()=>Kc,RTDetrObjectDetectionOutput:()=>Li,RTDetrPreTrainedModel:()=>Di,ResNetForImageClassification:()=>Hc,ResNetModel:()=>fu,ResNetPreTrainedModel:()=>ji,RoFormerForMaskedLM:()=>$e,RoFormerForQuestionAnswering:()=>ut,RoFormerForSequenceClassification:()=>We,RoFormerForTokenClassification:()=>Je,RoFormerModel:()=>_e,RoFormerPreTrainedModel:()=>H,RobertaForMaskedLM:()=>_r,RobertaForQuestionAnswering:()=>yt,RobertaForSequenceClassification:()=>_s,RobertaForTokenClassification:()=>Ss,RobertaModel:()=>or,RobertaPreTrainedModel:()=>Ot,SamImageSegmentationOutput:()=>Wn,SamModel:()=>vo,SamPreTrainedModel:()=>Zc,SapiensForDepthEstimation:()=>wo,SapiensForNormalEstimation:()=>vu,SapiensForSemanticSegmentation:()=>bu,SapiensPreTrainedModel:()=>Hi,SegformerForImageClassification:()=>_d,SegformerForSemanticSegmentation:()=>fd,SegformerModel:()=>lp,SegformerPreTrainedModel:()=>ln,Seq2SeqLMOutput:()=>qp,SequenceClassifierOutput:()=>Qt,SiglipModel:()=>el,SiglipPreTrainedModel:()=>Ho,SiglipTextModel:()=>tl,SiglipVisionModel:()=>sl,SpeechT5ForSpeechToText:()=>Pr,SpeechT5ForTextToSpeech:()=>Dr,SpeechT5HifiGan:()=>on,SpeechT5Model:()=>Kp,SpeechT5PreTrainedModel:()=>Co,SqueezeBertForMaskedLM:()=>Dn,SqueezeBertForQuestionAnswering:()=>zn,SqueezeBertForSequenceClassification:()=>Ln,SqueezeBertModel:()=>bn,SqueezeBertPreTrainedModel:()=>zt,StableLmForCausalLM:()=>wd,StableLmModel:()=>gd,StableLmPreTrainedModel:()=>da,Starcoder2ForCausalLM:()=>dd,Starcoder2Model:()=>ud,Starcoder2PreTrainedModel:()=>oa,StyleTextToSpeech2Model:()=>od,StyleTextToSpeech2PreTrainedModel:()=>nd,Swin2SRForImageSuperResolution:()=>gu,Swin2SRModel:()=>Gi,Swin2SRPreTrainedModel:()=>Wi,SwinForImageClassification:()=>Vn,SwinModel:()=>Vi,SwinPreTrainedModel:()=>Ui,T5ForConditionalGeneration:()=>Q,T5Model:()=>P,T5PreTrainedModel:()=>Ee,TableTransformerForObjectDetection:()=>mu,TableTransformerModel:()=>hu,TableTransformerObjectDetectionOutput:()=>zi,TableTransformerPreTrainedModel:()=>_o,TokenClassifierOutput:()=>Hs,TrOCRForCausalLM:()=>id,TrOCRPreTrainedModel:()=>an,UniSpeechForCTC:()=>sp,UniSpeechForSequenceClassification:()=>Ku,UniSpeechModel:()=>Gu,UniSpeechPreTrainedModel:()=>Eo,UniSpeechSatForAudioFrameClassification:()=>Qu,UniSpeechSatForCTC:()=>qu,UniSpeechSatForSequenceClassification:()=>rp,UniSpeechSatModel:()=>Hu,UniSpeechSatPreTrainedModel:()=>Gn,ViTForImageClassification:()=>xi,ViTMAEModel:()=>Jl,ViTMAEPreTrainedModel:()=>Yl,ViTMSNForImageClassification:()=>Zl,ViTMSNModel:()=>Wc,ViTMSNPreTrainedModel:()=>Pi,ViTModel:()=>Gl,ViTPreTrainedModel:()=>ho,VisionEncoderDecoderModel:()=>Go,VitMatteForImageMatting:()=>nu,VitMattePreTrainedModel:()=>ru,VitPoseForPoseEstimation:()=>Ql,VitPosePreTrainedModel:()=>ql,VitsModel:()=>ua,VitsModelOutput:()=>Pp,VitsPreTrainedModel:()=>la,Wav2Vec2BertForCTC:()=>np,Wav2Vec2BertForSequenceClassification:()=>Yu,Wav2Vec2BertModel:()=>Xu,Wav2Vec2BertPreTrainedModel:()=>Po,Wav2Vec2ForAudioFrameClassification:()=>ju,Wav2Vec2ForCTC:()=>Nu,Wav2Vec2ForSequenceClassification:()=>ep,Wav2Vec2Model:()=>Ru,Wav2Vec2PreTrainedModel:()=>Kr,WavLMForAudioFrameClassification:()=>rd,WavLMForCTC:()=>td,WavLMForSequenceClassification:()=>sd,WavLMForXVector:()=>ap,WavLMModel:()=>ed,WavLMPreTrainedModel:()=>xn,WeSpeakerResNetModel:()=>tp,WeSpeakerResNetPreTrainedModel:()=>Wu,WhisperForConditionalGeneration:()=>ja,WhisperModel:()=>Na,WhisperPreTrainedModel:()=>Vo,XLMForQuestionAnswering:()=>en,XLMForSequenceClassification:()=>Gs,XLMForTokenClassification:()=>$t,XLMModel:()=>Ls,XLMPreTrainedModel:()=>qt,XLMRobertaForMaskedLM:()=>La,XLMRobertaForQuestionAnswering:()=>Ba,XLMRobertaForSequenceClassification:()=>jo,XLMRobertaForTokenClassification:()=>za,XLMRobertaModel:()=>At,XLMRobertaPreTrainedModel:()=>qe,XLMWithLMHeadModel:()=>$s,XVectorOutput:()=>Hn,YolosForObjectDetection:()=>Fu,YolosModel:()=>Ou,YolosObjectDetectionOutput:()=>Du,YolosPreTrainedModel:()=>ta});var f=r("./src/configs.js"),A=r("./src/backends/onnx.js"),j=r("./src/utils/dtypes.js"),X=r("./src/utils/generic.js"),R=r("./src/utils/core.js"),g=r("./src/utils/hub.js"),v=r("./src/utils/constants.js"),M=r("./src/generation/logits_process.js"),y=r("./src/generation/configuration_utils.js"),b=r("./src/utils/tensor.js"),O=r("./src/utils/image.js"),K=r("./src/utils/maths.js"),se=r("./src/generation/stopping_criteria.js"),ne=r("./src/generation/logits_sampler.js"),W=r("./src/env.js"),U=r("./src/models/whisper/generation_whisper.js"),q=r("./src/models/whisper/common_whisper.js");const I={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9},S=new Map,w=new Map,x=new Map;async function F(_,T,N){var xs;const fe=((xs=N.config)==null?void 0:xs["transformers.js_config"])??{};let De=N.device??fe.device;De&&typeof De!="string"&&(De.hasOwnProperty(T)?De=De[T]:(console.warn(`device not specified for "${T}". Using the default device.`),De=null));const Ae=De??(W.apis.IS_NODE_ENV?"cpu":"wasm"),et=(0,A.deviceToExecutionProviders)(Ae);let rt=N.dtype??fe.dtype;if(typeof rt!="string"&&(rt&&rt.hasOwnProperty(T)?rt=rt[T]:(rt=j.DEFAULT_DEVICE_DTYPE_MAPPING[Ae]??j.DATA_TYPES.fp32,console.warn(`dtype not specified for "${T}". Using the default dtype (${rt}) for this device (${Ae}).`))),rt===j.DATA_TYPES.auto){let cs=fe.dtype;typeof cs!="string"&&(cs=cs[T]),cs&&cs!==j.DATA_TYPES.auto&&j.DATA_TYPES.hasOwnProperty(cs)?rt=cs:rt=j.DEFAULT_DEVICE_DTYPE_MAPPING[Ae]??j.DATA_TYPES.fp32}const ft=rt;if(j.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(ft)){if(ft===j.DATA_TYPES.fp16&&Ae==="webgpu"&&!await(0,j.isWebGpuFp16Supported)())throw new Error(`The device (${Ae}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${ft}. Should be one of: ${Object.keys(j.DATA_TYPES).join(", ")}`);const Mt=fe.kv_cache_dtype?typeof fe.kv_cache_dtype=="string"?fe.kv_cache_dtype:fe.kv_cache_dtype[ft]??"float32":void 0;if(Mt&&!["float32","float16"].includes(Mt))throw new Error(`Invalid kv_cache_dtype: ${Mt}. Should be one of: float32, float16`);const jt={dtype:ft,kv_cache_dtype:Mt},Vt=j.DEFAULT_DTYPE_SUFFIX_MAPPING[ft],Lt=`${N.subfolder??""}/${T}${Vt}.onnx`,Gt={...N.session_options};Gt.executionProviders??(Gt.executionProviders=et);const ts=fe.free_dimension_overrides;ts?Gt.freeDimensionOverrides??(Gt.freeDimensionOverrides=ts):Ae.startsWith("webnn")&&!Gt.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const ns=(0,g.getModelFile)(_,Lt,!0,N),Jt=N.use_external_data_format??fe.use_external_data_format;let is=[];if(Jt&&(Jt===!0||typeof Jt=="object"&&Jt.hasOwnProperty(T)&&Jt[T]===!0)){if(W.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const cs=`${T}${Vt}.onnx_data`,Ps=`${N.subfolder??""}/${cs}`;is.push(new Promise(async(As,Zs)=>{const Ys=await(0,g.getModelFile)(_,Ps,!0,N);As({path:cs,data:Ys})}))}else Gt.externalData!==void 0&&(is=Gt.externalData.map(async cs=>{if(typeof cs.data=="string"){const Ps=await(0,g.getModelFile)(_,cs.data,!0,N);return{...cs,data:Ps}}return cs}));if(is.length>0&&(Gt.externalData=await Promise.all(is)),Ae==="webgpu"){const cs=(0,f.getKeyValueShapes)(N.config,{prefix:"present"});if(Object.keys(cs).length>0&&!(0,A.isONNXProxy)()){const Ps={};for(const As in cs)Ps[As]="gpu-buffer";Gt.preferredOutputLocation=Ps}}return{buffer:await ns,session_options:Gt,session_config:jt}}async function ae(_,T,N){return Object.fromEntries(await Promise.all(Object.keys(T).map(async fe=>{const{buffer:De,session_options:Ae,session_config:et}=await F(_,T[fe],N),rt=await(0,A.createInferenceSession)(De,Ae,et);return[fe,rt]})))}async function oe(_,T,N){return Object.fromEntries(await Promise.all(Object.keys(T).map(async fe=>{const De=await(0,g.getModelJSON)(_,T[fe],!1,N);return[fe,De]})))}function ve(_,T){const N=Object.create(null),fe=[];for(const et of _.inputNames){const rt=T[et];if(!(rt instanceof b.Tensor)){fe.push(et);continue}N[et]=(0,A.isONNXProxy)()?rt.clone():rt}if(fe.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${fe.join(", ")}.`);const De=Object.keys(T).length,Ae=_.inputNames.length;if(De>Ae){let et=Object.keys(T).filter(rt=>!_.inputNames.includes(rt));console.warn(`WARNING: Too many inputs were provided (${De} > ${Ae}). The following inputs will be ignored: "${et.join(", ")}".`)}return N}async function we(_,T){const N=ve(_,T);try{const fe=Object.fromEntries(Object.entries(N).map(([Ae,et])=>[Ae,et.ort_tensor]));let De=await _.run(fe);return De=re(De),De}catch(fe){const De=Object.fromEntries(Object.entries(N).map(([Ae,{type:et,dims:rt,data:ft}])=>[Ae,{type:et,dims:rt,data:ft}]));throw console.error(`An error occurred during model execution: "${fe}".`),console.error("Inputs given to model:",De),fe}}function re(_){for(let T in _)(0,A.isONNXTensor)(_[T])?_[T]=new b.Tensor(_[T]):typeof _[T]=="object"&&re(_[T]);return _}function xe(_){if(_ instanceof b.Tensor)return _;if(_.length===0)throw Error("items must be non-empty");if(Array.isArray(_[0])){if(_.some(T=>T.length!==_[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new b.Tensor("int64",BigInt64Array.from(_.flat().map(T=>BigInt(T))),[_.length,_[0].length])}else return new b.Tensor("int64",BigInt64Array.from(_.map(T=>BigInt(T))),[1,_.length])}function ce(_){return new b.Tensor("bool",[_],[1])}async function ke(_,T){let{encoder_outputs:N,input_ids:fe,decoder_input_ids:De,...Ae}=T;if(!N){const rt=(0,R.pick)(T,_.sessions.model.inputNames);N=(await Oe(_,rt)).last_hidden_state}return Ae.input_ids=De,Ae.encoder_hidden_states=N,_.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(Ae.encoder_attention_mask=T.attention_mask),await Pe(_,Ae,!0)}async function Oe(_,T){const N=_.sessions.model,fe=(0,R.pick)(T,N.inputNames);if(N.inputNames.includes("inputs_embeds")&&!fe.inputs_embeds){if(!T.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");fe.inputs_embeds=await _.encode_text({input_ids:T.input_ids})}if(N.inputNames.includes("token_type_ids")&&!fe.token_type_ids){if(!fe.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");fe.token_type_ids=(0,b.zeros_like)(fe.input_ids)}if(N.inputNames.includes("pixel_mask")&&!fe.pixel_mask){if(!fe.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const De=fe.pixel_values.dims;fe.pixel_mask=(0,b.ones)([De[0],De[2],De[3]])}return await we(N,fe)}async function Pe(_,T,N=!1){const fe=_.sessions[N?"decoder_model_merged":"model"],{past_key_values:De,...Ae}=T;if(fe.inputNames.includes("use_cache_branch")&&(Ae.use_cache_branch=ce(!!De)),fe.inputNames.includes("position_ids")&&Ae.attention_mask&&!Ae.position_ids){const rt=_.config.model_type==="paligemma"?1:0;Ae.position_ids=J(Ae,De,rt)}_.addPastKeyValues(Ae,De);const et=(0,R.pick)(Ae,fe.inputNames);return await we(fe,et)}function tt({image_token_id:_,inputs_embeds:T,image_features:N,input_ids:fe,attention_mask:De}){const Ae=fe.tolist().map(Mt=>Mt.reduce((jt,Vt,Lt)=>(Vt==_&&jt.push(Lt),jt),[])),et=Ae.reduce((Mt,jt)=>Mt+jt.length,0),rt=N.dims[0];if(et!==rt)throw new Error(`Image features and image tokens do not match: tokens: ${et}, features ${rt}`);let ft=0;for(let Mt=0;Mt<Ae.length;++Mt){const jt=Ae[Mt],Vt=T[Mt];for(let Lt=0;Lt<jt.length;++Lt)Vt[jt[Lt]].data.set(N[ft++].data)}return{inputs_embeds:T,attention_mask:De}}async function Ge(_,{input_ids:T=null,attention_mask:N=null,pixel_values:fe=null,position_ids:De=null,inputs_embeds:Ae=null,past_key_values:et=null,generation_config:rt=null,logits_processor:ft=null,...Mt}){if(!Ae){if(Ae=await _.encode_text({input_ids:T,...Mt}),fe&&T.dims[1]!==1){const Vt=await _.encode_image({pixel_values:fe,...Mt});({inputs_embeds:Ae,attention_mask:N}=_._merge_input_ids_with_image_features({image_features:Vt,inputs_embeds:Ae,input_ids:T,attention_mask:N}))}else if(et&&fe&&T.dims[1]===1){const Vt=T.dims[1],Lt=Object.values(et)[0].dims.at(-2);N=(0,b.cat)([(0,b.ones)([T.dims[0],Lt]),N.slice(null,[N.dims[1]-Vt,N.dims[1]])],1)}}if(!De&&_.config.model_type==="qwen2_vl"){const{image_grid_thw:Vt,video_grid_thw:Lt}=Mt;[De]=_.get_rope_index(T,Vt,Lt,N)}return await Pe(_,{inputs_embeds:Ae,past_key_values:et,attention_mask:N,position_ids:De,generation_config:rt,logits_processor:ft},!0)}function ye(_,T=0){const[N,fe]=_.dims,De=_.data,Ae=new BigInt64Array(De.length);for(let et=0;et<N;++et){const rt=et*fe;let ft=BigInt(T);for(let Mt=0;Mt<fe;++Mt){const jt=rt+Mt;De[jt]===0n?Ae[jt]=BigInt(1):(Ae[jt]=ft,ft+=De[jt])}}return{data:Ae,dims:_.dims}}function J(_,T=null,N=0){const{input_ids:fe,inputs_embeds:De,attention_mask:Ae}=_,{data:et,dims:rt}=ye(Ae,N);let ft=new b.Tensor("int64",et,rt);if(T){const Mt=-(fe??De).dims.at(1);ft=ft.slice(null,[Mt,null])}return ft}function de(_,T,N,fe){if(N.past_key_values){const De=Object.values(N.past_key_values)[0].dims.at(-2),{input_ids:Ae,attention_mask:et}=N;if(!(et&&et.dims[1]>Ae.dims[1])){if(De<Ae.dims[1])N.input_ids=Ae.slice(null,[De,null]);else if(_.config.image_token_index!=null&&Ae.data.some(rt=>rt==_.config.image_token_index)){const rt=_.config.num_image_tokens;if(!rt)throw new Error("`num_image_tokens` is missing in the model configuration.");const ft=Ae.dims[1]-(De-rt);N.input_ids=Ae.slice(null,[-ft,null]),N.attention_mask=(0,b.ones)([1,De+ft])}}}return N}function Ce(_,T,N,fe){return N.past_key_values&&(T=T.map(De=>[De.at(-1)])),{...N,decoder_input_ids:xe(T)}}function Be(_,...T){return _.config.is_encoder_decoder?Ce(_,...T):de(_,...T)}function Ze(_,T,N,fe){const De=!!N.past_key_values;return fe.guidance_scale!==null&&fe.guidance_scale>1&&(De?N.input_ids=(0,b.cat)([N.input_ids,N.input_ids],0):(N.input_ids=(0,b.cat)([N.input_ids,(0,b.full_like)(N.input_ids,BigInt(fe.pad_token_id))],0),N.attention_mask=(0,b.cat)([N.attention_mask,(0,b.full_like)(N.attention_mask,0n)],0))),(De||!N.pixel_values)&&(N.pixel_values=(0,b.full)([0,0,3,384,384],1)),De&&(N.images_seq_mask=new b.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),N.images_emb_mask=new b.Tensor("bool",new Array(0).fill(!1),[1,1,0])),N}class te extends X.Callable{constructor(N,fe,De){super();me(this,"main_input_name","input_ids");me(this,"forward_params",["input_ids","attention_mask"]);this.config=N,this.sessions=fe,this.configs=De;const Ae=x.get(this.constructor),et=S.get(Ae);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,et){case I.DecoderOnly:this.can_generate=!0,this._forward=Pe,this._prepare_inputs_for_generation=de;break;case I.Seq2Seq:case I.Vision2Seq:case I.Musicgen:this.can_generate=!0,this._forward=ke,this._prepare_inputs_for_generation=Ce;break;case I.EncoderDecoder:this._forward=ke;break;case I.ImageTextToText:this.can_generate=!0,this._forward=Ge,this._prepare_inputs_for_generation=Be;break;case I.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=Be;break;case I.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=Ze;break;default:this._forward=Oe;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var fe;const N=[];for(const De of Object.values(this.sessions))(fe=De==null?void 0:De.handler)!=null&&fe.dispose&&N.push(De.handler.dispose());return await Promise.all(N)}static async from_pretrained(N,{progress_callback:fe=null,config:De=null,cache_dir:Ae=null,local_files_only:et=!1,revision:rt="main",model_file_name:ft=null,subfolder:Mt="onnx",device:jt=null,dtype:Vt=null,use_external_data_format:Lt=null,session_options:Gt={}}={}){let ts={progress_callback:fe,config:De,cache_dir:Ae,local_files_only:et,revision:rt,model_file_name:ft,subfolder:Mt,device:jt,dtype:Vt,use_external_data_format:Lt,session_options:Gt};const ns=x.get(this),Jt=S.get(ns);De=ts.config=await f.AutoConfig.from_pretrained(N,ts);let is;if(Jt===I.DecoderOnly)is=await Promise.all([ae(N,{model:ts.model_file_name??"model"},ts),oe(N,{generation_config:"generation_config.json"},ts)]);else if(Jt===I.Seq2Seq||Jt===I.Vision2Seq)is=await Promise.all([ae(N,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},ts),oe(N,{generation_config:"generation_config.json"},ts)]);else if(Jt===I.MaskGeneration)is=await Promise.all([ae(N,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},ts)]);else if(Jt===I.EncoderDecoder)is=await Promise.all([ae(N,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},ts)]);else if(Jt===I.ImageTextToText){const Is={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};De.is_encoder_decoder&&(Is.model="encoder_model"),is=await Promise.all([ae(N,Is,ts),oe(N,{generation_config:"generation_config.json"},ts)])}else if(Jt===I.Musicgen)is=await Promise.all([ae(N,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},ts),oe(N,{generation_config:"generation_config.json"},ts)]);else if(Jt===I.MultiModality)is=await Promise.all([ae(N,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},ts),oe(N,{generation_config:"generation_config.json"},ts)]);else if(Jt===I.Phi3V)is=await Promise.all([ae(N,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},ts),oe(N,{generation_config:"generation_config.json"},ts)]);else{if(Jt!==I.EncoderOnly){const Is=ns??(De==null?void 0:De.model_type);Is!=="custom"&&console.warn(`Model type for '${Is}' not found, assuming encoder-only architecture. Please report this at ${v.GITHUB_ISSUE_URL}.`)}is=await Promise.all([ae(N,{model:ts.model_file_name??"model"},ts)])}return new this(De,...is)}async _call(N){return await this.forward(N)}async forward(N){return await this._forward(this,N)}get generation_config(){var N;return((N=this.configs)==null?void 0:N.generation_config)??null}_get_logits_warper(N){const fe=new M.LogitsProcessorList;return N.temperature!==null&&N.temperature!==1&&fe.push(new M.TemperatureLogitsWarper(N.temperature)),N.top_k!==null&&N.top_k!==0&&fe.push(new M.TopKLogitsWarper(N.top_k)),N.top_p!==null&&N.top_p<1&&fe.push(new M.TopPLogitsWarper(N.top_p)),fe}_get_logits_processor(N,fe,De=null){const Ae=new M.LogitsProcessorList;if(N.repetition_penalty!==null&&N.repetition_penalty!==1&&Ae.push(new M.RepetitionPenaltyLogitsProcessor(N.repetition_penalty)),N.no_repeat_ngram_size!==null&&N.no_repeat_ngram_size>0&&Ae.push(new M.NoRepeatNGramLogitsProcessor(N.no_repeat_ngram_size)),N.bad_words_ids!==null&&Ae.push(new M.NoBadWordsLogitsProcessor(N.bad_words_ids,N.eos_token_id)),N.min_length!==null&&N.eos_token_id!==null&&N.min_length>0&&Ae.push(new M.MinLengthLogitsProcessor(N.min_length,N.eos_token_id)),N.min_new_tokens!==null&&N.eos_token_id!==null&&N.min_new_tokens>0&&Ae.push(new M.MinNewTokensLengthLogitsProcessor(fe,N.min_new_tokens,N.eos_token_id)),N.forced_bos_token_id!==null&&Ae.push(new M.ForcedBOSTokenLogitsProcessor(N.forced_bos_token_id)),N.forced_eos_token_id!==null&&Ae.push(new M.ForcedEOSTokenLogitsProcessor(N.max_length,N.forced_eos_token_id)),N.begin_suppress_tokens!==null){const et=fe>1||N.forced_bos_token_id===null?fe:fe+1;Ae.push(new M.SuppressTokensAtBeginLogitsProcessor(N.begin_suppress_tokens,et))}return N.guidance_scale!==null&&N.guidance_scale>1&&Ae.push(new M.ClassifierFreeGuidanceLogitsProcessor(N.guidance_scale)),De!==null&&Ae.extend(De),Ae}_prepare_generation_config(N,fe,De=y.GenerationConfig){const Ae={...this.config};for(const rt of["decoder","generator","text_config"])rt in Ae&&Object.assign(Ae,Ae[rt]);const et=new De(Ae);return Object.assign(et,this.generation_config??{}),N&&Object.assign(et,N),fe&&Object.assign(et,(0,R.pick)(fe,Object.getOwnPropertyNames(et))),et}_get_stopping_criteria(N,fe=null){const De=new se.StoppingCriteriaList;return N.max_length!==null&&De.push(new se.MaxLengthCriteria(N.max_length,this.config.max_position_embeddings??null)),N.eos_token_id!==null&&De.push(new se.EosTokenCriteria(N.eos_token_id)),fe&&De.extend(fe),De}_validate_model_class(){if(!this.can_generate){const N=[Ma,xa,$o,Bd],fe=x.get(this.constructor),De=new Set,Ae=this.config.model_type;for(const rt of N){const ft=rt.get(Ae);ft&&De.add(ft[0])}let et=`The current model class (${fe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw De.size>0&&(et+=` Please use the following class instead: ${[...De].join(", ")}`),Error(et)}}prepare_inputs_for_generation(...N){return this._prepare_inputs_for_generation(this,...N)}_update_model_kwargs_for_generation({generated_input_ids:N,outputs:fe,model_inputs:De,is_encoder_decoder:Ae}){return De.past_key_values=this.getPastKeyValues(fe,De.past_key_values),De.input_ids=new b.Tensor("int64",N.flat(),[N.length,1]),Ae||(De.attention_mask=(0,b.cat)([De.attention_mask,(0,b.ones)([De.attention_mask.dims[0],1])],1)),De.position_ids=null,De}_prepare_model_inputs({inputs:N,bos_token_id:fe,model_kwargs:De}){const Ae=(0,R.pick)(De,this.forward_params),et=this.main_input_name;if(et in Ae){if(N)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Ae[et]=N;return{inputs_tensor:Ae[et],model_inputs:Ae,model_input_name:et}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:N,model_inputs:fe,model_input_name:De,generation_config:Ae}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!fe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:rt,pixel_values:ft,attention_mask:Mt,...jt}=fe,Vt=await this._prepare_inputs_embeds(fe);fe={...jt,...(0,R.pick)(Vt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:et}=await Oe(this,fe);if(Ae.guidance_scale!==null&&Ae.guidance_scale>1)et=(0,b.cat)([et,(0,b.full_like)(et,0)],0),"attention_mask"in fe&&(fe.attention_mask=(0,b.cat)([fe.attention_mask,(0,b.zeros_like)(fe.attention_mask)],0));else if(fe.decoder_input_ids){const rt=xe(fe.decoder_input_ids).dims[0];if(rt!==et.dims[0]){if(et.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${et.dims[0]}) than the decoder inputs (${rt}).`);et=(0,b.cat)(Array.from({length:rt},()=>et),0)}}return fe.encoder_outputs=et,fe}_prepare_decoder_input_ids_for_generation({batch_size:N,model_input_name:fe,model_kwargs:De,decoder_start_token_id:Ae,bos_token_id:et,generation_config:rt}){let{decoder_input_ids:ft,...Mt}=De;if(!(ft instanceof b.Tensor)){if(ft)Array.isArray(ft[0])||(ft=Array.from({length:N},()=>ft));else if(Ae??(Ae=et),this.config.model_type==="musicgen")ft=Array.from({length:N*this.config.decoder.num_codebooks},()=>[Ae]);else if(Array.isArray(Ae)){if(Ae.length!==N)throw new Error(`\`decoder_start_token_id\` expcted to have length ${N} but got ${Ae.length}`);ft=Ae}else ft=Array.from({length:N},()=>[Ae]);ft=xe(ft)}return De.decoder_attention_mask=(0,b.ones_like)(ft),{input_ids:ft,model_inputs:Mt}}async generate({inputs:N=null,generation_config:fe=null,logits_processor:De=null,stopping_criteria:Ae=null,streamer:et=null,...rt}){this._validate_model_class(),fe=this._prepare_generation_config(fe,rt);let{inputs_tensor:ft,model_inputs:Mt,model_input_name:jt}=this._prepare_model_inputs({inputs:N,model_kwargs:rt});const Vt=this.config.is_encoder_decoder;Vt&&("encoder_outputs"in Mt||(Mt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ft,model_inputs:Mt,model_input_name:jt,generation_config:fe})));let Lt;Vt?{input_ids:Lt,model_inputs:Mt}=this._prepare_decoder_input_ids_for_generation({batch_size:Mt[jt].dims.at(0),model_input_name:jt,model_kwargs:Mt,decoder_start_token_id:fe.decoder_start_token_id,bos_token_id:fe.bos_token_id,generation_config:fe}):Lt=Mt[jt];let Gt=Lt.dims.at(-1);fe.max_new_tokens!==null&&(fe.max_length=Gt+fe.max_new_tokens);const ts=this._get_logits_processor(fe,Gt,De),ns=this._get_stopping_criteria(fe,Ae),Jt=Mt[jt].dims.at(0),is=ne.LogitsSampler.getSampler(fe),Is=new Array(Jt).fill(0),xs=Lt.tolist();et&&et.put(xs);let cs,Ps={};for(;;){if(Mt=this.prepare_inputs_for_generation(xs,Mt,fe),cs=await this.forward(Mt),fe.output_attentions&&fe.return_dict_in_generate){const ir=this.getAttentions(cs);for(const br in ir)br in Ps||(Ps[br]=[]),Ps[br].push(ir[br])}const Ys=cs.logits.slice(null,-1,null),Mr=ts(xs,Ys),dn=[];for(let ir=0;ir<Mr.dims.at(0);++ir){const br=Mr[ir],Io=await is(br);for(const[Ao,Oo]of Io){const ka=BigInt(Ao);Is[ir]+=Oo,xs[ir].push(ka),dn.push([ka]);break}}if(et&&et.put(dn),ns(xs).every(ir=>ir))break;Mt=this._update_model_kwargs_for_generation({generated_input_ids:dn,outputs:cs,model_inputs:Mt,is_encoder_decoder:Vt})}et&&et.end();const As=this.getPastKeyValues(cs,Mt.past_key_values,!0),Zs=new b.Tensor("int64",xs.flat(),[xs.length,xs[0].length]);if(fe.return_dict_in_generate)return{sequences:Zs,past_key_values:As,...Ps};for(const Ys of Object.values(cs))Ys.location==="gpu-buffer"&&Ys.dispose();return Zs}getPastKeyValues(N,fe,De=!1){const Ae=Object.create(null);for(const et in N)if(et.startsWith("present")){const rt=et.replace("present","past_key_values"),ft=et.includes("encoder");if(ft&&fe?Ae[rt]=fe[rt]:Ae[rt]=N[et],fe&&(!ft||De)){const Mt=fe[rt];Mt.location==="gpu-buffer"&&Mt.dispose()}}return Ae}getAttentions(N){const fe={};for(const De of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Ae in N)Ae.startsWith(De)&&(De in fe||(fe[De]=[]),fe[De].push(N[Ae]));return fe}addPastKeyValues(N,fe){var De,Ae,et;if(fe)Object.assign(N,fe);else{const rt=this.sessions.decoder_model_merged??this.sessions.model,ft=((De=rt==null?void 0:rt.config)==null?void 0:De.kv_cache_dtype)??"float32",Mt=ft==="float16"?new Uint16Array:[],jt=((et=(Ae=N[this.main_input_name]??N.attention_mask)==null?void 0:Ae.dims)==null?void 0:et[0])??1,Vt=(0,f.getKeyValueShapes)(this.config,{batch_size:jt});for(const Lt in Vt)N[Lt]=new b.Tensor(ft,Mt,Vt[Lt])}}async encode_image({pixel_values:N}){const fe=(await we(this.sessions.vision_encoder,{pixel_values:N})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${fe.dims[1]}).`),this.config.num_image_tokens=fe.dims[1]),fe}async encode_text({input_ids:N}){return(await we(this.sessions.embed_tokens,{input_ids:N})).inputs_embeds}}class Ke{}class je extends Ke{constructor({last_hidden_state:T,hidden_states:N=null,attentions:fe=null}){super(),this.last_hidden_state=T,this.hidden_states=N,this.attentions=fe}}class le extends te{}class Te extends le{}class Ue extends le{async _call(T){return new qs(await super._call(T))}}class Ve extends le{async _call(T){return new Qt(await super._call(T))}}class Ne extends le{async _call(T){return new Hs(await super._call(T))}}class Re extends le{async _call(T){return new tr(await super._call(T))}}class st extends te{}class dt extends st{}class ct extends st{async _call(T){return new qs(await super._call(T))}}class lt extends st{async _call(T){return new Qt(await super._call(T))}}class ht extends st{async _call(T){return new Hs(await super._call(T))}}class L extends te{}class ie extends L{}class H extends te{}class _e extends H{}class $e extends H{async _call(T){return new qs(await super._call(T))}}class We extends H{async _call(T){return new Qt(await super._call(T))}}class Je extends H{async _call(T){return new Hs(await super._call(T))}}class ut extends H{async _call(T){return new tr(await super._call(T))}}class mt extends te{}class vt extends mt{}class kt extends mt{async _call(T){return new qs(await super._call(T))}}class It extends mt{async _call(T){return new Qt(await super._call(T))}}class os extends mt{async _call(T){return new Hs(await super._call(T))}}class ys extends mt{async _call(T){return new tr(await super._call(T))}}class Cs extends te{}class Ds extends Cs{}class sr extends Cs{async _call(T){return new qs(await super._call(T))}}class kr extends Cs{async _call(T){return new Qt(await super._call(T))}}class Qr extends Cs{async _call(T){return new Hs(await super._call(T))}}class Us extends Cs{async _call(T){return new tr(await super._call(T))}}class Tr extends te{}class Nt extends Tr{}class Xr extends Tr{async _call(T){return new qs(await super._call(T))}}class Sr extends Tr{async _call(T){return new Qt(await super._call(T))}}class $r extends Tr{async _call(T){return new Hs(await super._call(T))}}class Yr extends Tr{async _call(T){return new tr(await super._call(T))}}class dr extends te{}class Jr extends dr{}class Ir extends dr{async _call(T){return new qs(await super._call(T))}}class Br extends dr{async _call(T){return new Qt(await super._call(T))}}class Rr extends dr{async _call(T){return new Hs(await super._call(T))}}class ar extends dr{async _call(T){return new tr(await super._call(T))}}class ot extends te{}class Tt extends ot{}class Dt extends ot{async _call(T){return new qs(await super._call(T))}}class Vs extends ot{async _call(T){return new Qt(await super._call(T))}}class Nr extends ot{async _call(T){return new Hs(await super._call(T))}}class Ar extends ot{async _call(T){return new tr(await super._call(T))}}class Ms extends te{}class lr extends Ms{}class Os extends Ms{async _call(T){return new Qt(await super._call(T))}}class Er extends Ms{async _call(T){return new Hs(await super._call(T))}}class es extends Ms{async _call(T){return new tr(await super._call(T))}}class fn extends Ms{async _call(T){return new qs(await super._call(T))}}class jr extends te{}class no extends jr{}class In extends jr{async _call(T){return new qs(await super._call(T))}}class An extends jr{async _call(T){return new Qt(await super._call(T))}}class On extends jr{async _call(T){return new Hs(await super._call(T))}}class Ur extends te{}class Fn extends Ur{}class oo extends Ur{async _call(T){return new qs(await super._call(T))}}class Vr extends Ur{async _call(T){return new Qt(await super._call(T))}}class mr extends Ur{async _call(T){return new tr(await super._call(T))}}class ur extends te{}class gn extends ur{}class Zr extends ur{async _call(T){return new qs(await super._call(T))}}class wn extends ur{async _call(T){return new Qt(await super._call(T))}}class yn extends ur{async _call(T){return new Hs(await super._call(T))}}class Mn extends ur{async _call(T){return new tr(await super._call(T))}}class zt extends te{}class bn extends zt{}class Dn extends zt{async _call(T){return new qs(await super._call(T))}}class Ln extends zt{async _call(T){return new Qt(await super._call(T))}}class zn extends zt{async _call(T){return new tr(await super._call(T))}}class Wr extends te{}class Bn extends Wr{}class vn extends Wr{async _call(T){return new Qt(await super._call(T))}}class Rn extends Wr{async _call(T){return new tr(await super._call(T))}}class as extends Wr{async _call(T){return new qs(await super._call(T))}}class Ee extends te{constructor(){super(...arguments);me(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class P extends Ee{}class Q extends Ee{}class ue extends te{}class be extends ue{}class Se extends ue{}class Qe extends te{}class pt extends Qe{}class gt extends Qe{}class _t extends te{}class xt extends _t{}class Kt extends _t{}class ms extends _t{async _call(T){return new Qt(await super._call(T))}}class us extends te{}class Fs extends us{}class Bt extends us{}class rs extends us{async _call(T){return new Qt(await super._call(T))}}class rr extends us{}class Ws extends te{}class ze extends Ws{}class Js extends Ws{}class Or extends te{}class ks extends Or{}class Xs extends Or{}class Ot extends te{}class or extends Ot{}class _r extends Ot{async _call(T){return new qs(await super._call(T))}}class _s extends Ot{async _call(T){return new Qt(await super._call(T))}}class Ss extends Ot{async _call(T){return new Hs(await super._call(T))}}class yt extends Ot{async _call(T){return new tr(await super._call(T))}}class qt extends te{}class Ls extends qt{}class $s extends qt{async _call(T){return new qs(await super._call(T))}}class Gs extends qt{async _call(T){return new Qt(await super._call(T))}}class $t extends qt{async _call(T){return new Hs(await super._call(T))}}class en extends qt{async _call(T){return new tr(await super._call(T))}}class qe extends te{}class At extends qe{}class La extends qe{async _call(T){return new qs(await super._call(T))}}class jo extends qe{async _call(T){return new Qt(await super._call(T))}}class za extends qe{async _call(T){return new Hs(await super._call(T))}}class Ba extends qe{async _call(T){return new tr(await super._call(T))}}class Yt extends te{}class Ra extends Yt{}class Uo extends Yt{}class Vo extends te{constructor(){super(...arguments);me(this,"requires_attention_mask",!1);me(this,"main_input_name","input_features");me(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Na extends Vo{}class ja extends Vo{_prepare_generation_config(T,N){return super._prepare_generation_config(T,N,U.WhisperGenerationConfig)}_retrieve_init_tokens(T){const N=[T.decoder_start_token_id];let fe=T.language;const De=T.task;if(T.is_multilingual){fe||(console.warn("No language specified - defaulting to English (en)."),fe="en");const et=`<|${(0,q.whisper_language_to_code)(fe)}|>`;N.push(T.lang_to_id[et]),N.push(T.task_to_id[De??"transcribe"])}else if(fe||De)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!T.return_timestamps&&T.no_timestamps_token_id&&N.at(-1)!==T.no_timestamps_token_id?N.push(T.no_timestamps_token_id):T.return_timestamps&&N.at(-1)===T.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),N.pop()),N.filter(Ae=>Ae!=null)}async generate({inputs:T=null,generation_config:N=null,logits_processor:fe=null,stopping_criteria:De=null,...Ae}){N=this._prepare_generation_config(N,Ae);const et=Ae.decoder_input_ids??this._retrieve_init_tokens(N);if(N.return_timestamps&&(fe??(fe=new M.LogitsProcessorList),fe.push(new M.WhisperTimeStampLogitsProcessor(N,et))),N.begin_suppress_tokens&&(fe??(fe=new M.LogitsProcessorList),fe.push(new M.SuppressTokensAtBeginLogitsProcessor(N.begin_suppress_tokens,et.length))),N.return_token_timestamps){if(!N.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");N.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),N.output_attentions=!0,N.return_dict_in_generate=!0}const rt=await super.generate({inputs:T,generation_config:N,logits_processor:fe,decoder_input_ids:et,...Ae});return N.return_token_timestamps&&(rt.token_timestamps=this._extract_token_timestamps(rt,N.alignment_heads,N.num_frames)),rt}_extract_token_timestamps(T,N,fe=null,De=.02){if(!T.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");fe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let Ae=this.config.median_filter_width;Ae===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),Ae=7);const et=T.cross_attentions,rt=Array.from({length:this.config.decoder_layers},(ns,Jt)=>(0,b.cat)(et.map(is=>is[Jt]),2)),ft=(0,b.stack)(N.map(([ns,Jt])=>{if(ns>=rt.length)throw new Error(`Layer index ${ns} is out of bounds for cross attentions (length ${rt.length}).`);return fe?rt[ns].slice(null,Jt,null,[0,fe]):rt[ns].slice(null,Jt)})).transpose(1,0,2,3),[Mt,jt]=(0,b.std_mean)(ft,-2,0,!0),Vt=ft.clone();for(let ns=0;ns<Vt.dims[0];++ns){const Jt=Vt[ns];for(let is=0;is<Jt.dims[0];++is){const Is=Jt[is],xs=Mt[ns][is][0].data,cs=jt[ns][is][0].data;for(let Ps=0;Ps<Is.dims[0];++Ps){let As=Is[Ps].data;for(let Zs=0;Zs<As.length;++Zs)As[Zs]=(As[Zs]-cs[Zs])/xs[Zs];As.set((0,K.medianFilter)(As,Ae))}}}const Lt=[(0,b.mean)(Vt,1)],Gt=T.sequences.dims,ts=new b.Tensor("float32",new Float32Array(Gt[0]*Gt[1]),Gt);for(let ns=0;ns<Gt[0];++ns){const Jt=Lt[ns].neg().squeeze_(0),[is,Is]=(0,K.dynamic_time_warping)(Jt.tolist()),xs=Array.from({length:is.length-1},(As,Zs)=>is[Zs+1]-is[Zs]),cs=(0,R.mergeArrays)([1],xs).map(As=>!!As),Ps=[];for(let As=0;As<cs.length;++As)cs[As]&&Ps.push(Is[As]*De);ts[ns].data.set(Ps,1)}return ts}}class Wo extends te{constructor(){super(...arguments);me(this,"requires_attention_mask",!1);me(this,"main_input_name","input_values");me(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class cr extends Wo{}class Ua extends Wo{}class Go extends te{constructor(){super(...arguments);me(this,"main_input_name","pixel_values");me(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Gr extends te{constructor(){super(...arguments);me(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class io extends Gr{_merge_input_ids_with_image_features({inputs_embeds:T,image_features:N,input_ids:fe,attention_mask:De}){const Ae=this.config.image_token_index,rt=fe.tolist().map(Lt=>Lt.findIndex(Gt=>Gt==Ae)),ft=rt.every(Lt=>Lt===-1),Mt=rt.every(Lt=>Lt!==-1);if(!ft&&!Mt)throw new Error("Every input should contain either 0 or 1 image token.");if(ft)return{inputs_embeds:T,attention_mask:De};const jt=[],Vt=[];for(let Lt=0;Lt<rt.length;++Lt){const Gt=rt[Lt],ts=T[Lt],ns=N[Lt],Jt=De[Lt];jt.push((0,b.cat)([ts.slice([0,Gt]),ns,ts.slice([Gt+1,ts.dims[0]])],0)),Vt.push((0,b.cat)([Jt.slice([0,Gt]),(0,b.ones)([ns.dims[0]]),Jt.slice([Gt+1,Jt.dims[0]])],0))}return{inputs_embeds:(0,b.stack)(jt,0),attention_mask:(0,b.stack)(Vt,0)}}}class Va extends io{}class Wa extends io{}class Ga extends te{constructor(){super(...arguments);me(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);me(this,"main_input_name","inputs_embeds")}}class Ka extends Ga{_merge_input_ids_with_image_features({inputs_embeds:T,image_features:N,input_ids:fe,attention_mask:De}){return{inputs_embeds:(0,b.cat)([N,T],1),attention_mask:(0,b.cat)([(0,b.ones)(N.dims.slice(0,2)),De],1)}}async _prepare_inputs_embeds({input_ids:T,pixel_values:N,inputs_embeds:fe,attention_mask:De}){if(!T&&!N)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let Ae,et;return T&&(Ae=await this.encode_text({input_ids:T})),N&&(et=await this.encode_image({pixel_values:N})),Ae&&et?{inputs_embeds:fe,attention_mask:De}=this._merge_input_ids_with_image_features({inputs_embeds:Ae,image_features:et,input_ids:T,attention_mask:De}):fe=Ae||et,{inputs_embeds:fe,attention_mask:De}}async forward({input_ids:T,pixel_values:N,attention_mask:fe,decoder_input_ids:De,decoder_attention_mask:Ae,encoder_outputs:et,past_key_values:rt,inputs_embeds:ft,decoder_inputs_embeds:Mt}){if(ft||({inputs_embeds:ft,attention_mask:fe}=await this._prepare_inputs_embeds({input_ids:T,pixel_values:N,inputs_embeds:ft,attention_mask:fe})),!et){let{last_hidden_state:Lt}=await Oe(this,{inputs_embeds:ft,attention_mask:fe});et=Lt}if(!Mt){if(!De)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Mt=await this.encode_text({input_ids:De})}return await Pe(this,{inputs_embeds:Mt,attention_mask:Ae,encoder_attention_mask:fe,encoder_hidden_states:et,past_key_values:rt},!0)}}class Ha extends te{constructor(){super(...arguments);me(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class qa extends Ha{_merge_input_ids_with_image_features(T){const N=T.image_features.dims.at(-1),fe=T.image_features.view(-1,N);return tt({image_token_id:this.config.image_token_index,...T,image_features:fe})}}class Qa extends te{constructor(){super(...arguments);me(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Ko extends Qa{async encode_image({pixel_values:T,pixel_attention_mask:N}){return(await we(this.sessions.vision_encoder,{pixel_values:T,pixel_attention_mask:N})).image_features}_merge_input_ids_with_image_features(T){const N=T.image_features.dims.at(-1),fe=T.image_features.view(-1,N);return tt({image_token_id:this.config.image_token_id,...T,image_features:fe})}}class Xa extends te{constructor(){super(...arguments);me(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class pr extends Xa{async forward({input_ids:T=null,attention_mask:N=null,pixel_values:fe=null,image_sizes:De=null,position_ids:Ae=null,inputs_embeds:et=null,past_key_values:rt=null,generation_config:ft=null,logits_processor:Mt=null,...jt}){if(!et){let Lt;if(fe&&T.dims[1]!==1){if(!De)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:Lt}=await we(this.sessions.vision_encoder,{pixel_values:fe,image_sizes:De}))}else{const Gt=this.config.normalized_config.hidden_size;Lt=new b.Tensor("float32",[],[0,Gt])}({inputs_embeds:et}=await we(this.sessions.prepare_inputs_embeds,{input_ids:T,image_features:Lt}))}return await Pe(this,{inputs_embeds:et,past_key_values:rt,attention_mask:N,position_ids:Ae,generation_config:ft,logits_processor:Mt},!1)}}class tn extends te{}class Ya extends tn{}class Bc extends tn{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"text_model"})}}class Ja extends tn{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"text_model"})}}class Rc extends tn{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"vision_model"})}}class Za extends tn{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"vision_model"})}}class Ho extends te{}class el extends Ho{}class tl extends Ho{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"text_model"})}}class sl extends tn{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"vision_model"})}}class Nc extends te{}class fr extends Nc{}class ao extends te{}class lo extends ao{async forward(T){const N=!T.input_ids,fe=!T.pixel_values;if(N&&fe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(N&&(T.input_ids=(0,b.ones)([T.pixel_values.dims[0],1])),fe){const{image_size:Mt}=this.config.vision_config;T.pixel_values=(0,b.full)([0,3,Mt,Mt],0)}const{text_embeddings:De,image_embeddings:Ae,l2norm_text_embeddings:et,l2norm_image_embeddings:rt}=await super.forward(T),ft={};return N||(ft.text_embeddings=De,ft.l2norm_text_embeddings=et),fe||(ft.image_embeddings=Ae,ft.l2norm_image_embeddings=rt),ft}}class qo extends ao{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"text_model"})}}class gr extends ao{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"vision_model"})}}class Qo extends te{}class rl extends Qo{}class nl extends Qo{}class Xo extends te{}class ol extends Xo{}class il extends Xo{}class Yo extends te{}class al extends Yo{}class ll extends Yo{}class Jo extends te{}class wr extends Jo{}class ul extends Jo{}class Zo extends te{}class dl extends Zo{}class cl extends Zo{}class ei extends te{}class pl extends ei{}class hl extends ei{}class ti extends te{}class ml extends ti{}class _l extends ti{}class uo extends te{}class si extends uo{}class fl extends uo{}class ri extends te{}class ni extends ri{}class jc extends ri{}class oi extends te{}class co extends oi{}class gl extends oi{}class ii extends te{}class wl extends ii{}class Nn extends ii{}class ai extends te{}class yl extends ai{}class li extends ai{}class ui extends te{}class Ml extends ui{}class bl extends ui{}class di extends te{}class Uc extends di{}class vl extends di{}class ci extends te{}class xl extends ci{}class Vc extends ci{}class pi extends te{}class ds extends pi{}class Tl extends pi{}class hi extends te{}class El extends hi{}class Pl extends hi{}class mi extends te{}class Cl extends mi{}class kl extends mi{}class _i extends te{}class Sl extends _i{}class $l extends _i{}class fi extends te{}class Il extends fi{}class Al extends fi{}class gi extends te{}class jn extends gi{}class Ol extends gi{}class po extends te{constructor(){super(...arguments);me(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Fl extends po{get_rope_index(T,N,fe,De){const{vision_config:Ae,image_token_id:et,video_token_id:rt,vision_start_token_id:ft}=this.config,Mt=Ae.spatial_merge_size??2,jt=[];if(N||fe){let Vt=T.tolist();De||(De=(0,b.ones_like)(T));const Lt=De.tolist(),Gt=Array.from({length:3},Is=>Array.from({length:T.dims[0]},xs=>Array.from({length:T.dims[1]},cs=>1))),ts=N?N.tolist():[],ns=fe?fe.tolist():[];let Jt=0,is=0;for(let Is=0;Is<Vt.length;++Is){const xs=Vt[Is].filter((Ts,Rs)=>Lt[Is][Rs]==1),Ps=xs.reduce((Ts,Rs,Hr)=>(Rs==ft&&Ts.push(Hr),Ts),[]).map(Ts=>xs[Ts+1]),As=Ps.filter(Ts=>Ts==et).length,Zs=Ps.filter(Ts=>Ts==rt).length;let Ys=[],Mr=0,dn=As,Ca=Zs;for(let Ts=0;Ts<Ps.length;++Ts){const Rs=xs.findIndex((qr,hr)=>hr>Mr&&qr==et),Hr=xs.findIndex((qr,hr)=>hr>Mr&&qr==rt),Tn=dn>0&&Rs!==-1?Rs:xs.length+1,En=Ca>0&&Hr!==-1?Hr:xs.length+1;let Pn,Sa,$a,Pc;Tn<En?([Sa,$a,Pc]=ts[Jt],++Jt,--dn,Pn=Tn):([Sa,$a,Pc]=ns[is],++is,--Ca,Pn=En);const[Cp,Fo,qn]=[Number(Sa),Math.floor(Number($a)/Mt),Math.floor(Number(Pc)/Mt)],Lr=Pn-Mr,Cc=Ys.length>0?(0,K.max)(Ys.at(-1))[0]+1:0;Ys.push(Array.from({length:3*Lr},(qr,hr)=>Cc+hr%Lr));const Qn=Lr+Cc,Xn=Cp*Fo*qn,kc=Array.from({length:Xn},(qr,hr)=>Qn+Math.floor(hr/(Fo*qn))),Sc=Array.from({length:Xn},(qr,hr)=>Qn+Math.floor(hr/qn)%Fo),$c=Array.from({length:Xn},(qr,hr)=>Qn+hr%qn);Ys.push([kc,Sc,$c].flat()),Mr=Pn+Xn}if(Mr<xs.length){const Ts=Ys.length>0?(0,K.max)(Ys.at(-1))[0]+1:0,Rs=xs.length-Mr;Ys.push(Array.from({length:3*Rs},(Hr,Tn)=>Ts+Tn%Rs))}const ir=Ys.reduce((Ts,Rs)=>Ts+Rs.length,0),br=new Array(ir);let Io=0;for(let Ts=0;Ts<3;++Ts)for(let Rs=0;Rs<Ys.length;++Rs){const Hr=Ys[Rs],Tn=Hr.length/3;for(let En=Ts*Tn;En<(Ts+1)*Tn;++En)br[Io++]=Hr[En]}let Ao=0;const Oo=Lt[Is];for(let Ts=0;Ts<Oo.length;++Ts)if(Oo[Ts]==1){for(let Rs=0;Rs<3;++Rs)Gt[Rs][Is][Ts]=br[Rs*ir/3+Ao];++Ao}const ka=(0,K.max)(br)[0];jt.push(ka+1-Vt[Is].length)}return[new b.Tensor("int64",Gt.flat(1/0),[3,T.dims[0],T.dims[1]]),new b.Tensor("int64",jt,[jt.length,1])]}else if(De){const{data:Vt,dims:Lt}=ye(De),Gt=BigInt64Array.from({length:3*Vt.length},(ns,Jt)=>Vt[Jt%Vt.length]),ts=Array.from({length:Lt[0]},(ns,Jt)=>(0,K.max)(Vt.subarray(Lt[1]*Jt,Lt[1]*(Jt+1)))[0]+1n+BigInt(Lt[1]));return[new b.Tensor("int64",Gt,[3,...Lt]),new b.Tensor("int64",ts,[ts.length,1])]}else{const[Vt,Lt]=T.dims,Gt=BigInt64Array.from({length:3*Vt*Lt},(ts,ns)=>BigInt(Math.floor(ns%Lt/Vt)));return[new b.Tensor("int64",Gt,[3,...T.dims]),(0,b.zeros)([Vt,1])]}}async encode_image({pixel_values:T,image_grid_thw:N}){return(await we(this.sessions.vision_encoder,{pixel_values:T,grid_thw:N})).image_features}_merge_input_ids_with_image_features(T){return tt({image_token_id:this.config.image_token_id,...T})}prepare_inputs_for_generation(T,N,fe){if(N.attention_mask&&!N.position_ids)if(!N.past_key_values)[N.position_ids,N.rope_deltas]=this.get_rope_index(N.input_ids,N.image_grid_thw,N.video_grid_thw,N.attention_mask);else{N.pixel_values=null;const De=BigInt(Object.values(N.past_key_values)[0].dims.at(-2)),Ae=N.rope_deltas.map(et=>De+et);N.position_ids=(0,b.stack)([Ae,Ae,Ae],0)}return N}}class wi extends te{}class Dl extends wi{}class Ll extends wi{}class yi extends te{}class zl extends yi{}class Bl extends yi{}class Mi extends te{}class Rl extends Mi{}class Nl extends Mi{}class bi extends te{}class jl extends bi{}class Ul extends bi{}class vi extends te{}class Vl extends vi{}class Wl extends vi{}class ho extends te{}class Gl extends ho{}class xi extends ho{async _call(T){return new Qt(await super._call(T))}}class mo extends te{}class Kl extends mo{}class Hl extends mo{async _call(T){return new Qt(await super._call(T))}}class ql extends te{}class Ql extends ql{}class Ti extends te{}class Xl extends Ti{}class Ei extends Ti{async _call(T){return new Qt(await super._call(T))}}class Yl extends te{}class Jl extends Yl{}class Pi extends te{}class Wc extends Pi{}class Zl extends Pi{async _call(T){return new Qt(await super._call(T))}}class eu extends te{}class yr extends eu{}class Ci extends te{}class tu extends Ci{}class su extends Ci{async _call(T){return new Qt(await super._call(T))}}class ru extends te{}class nu extends ru{async _call(T){return new Ec(await super._call(T))}}class ki extends te{}class ou extends ki{}class iu extends ki{async _call(T){return new Qt(await super._call(T))}}class Si extends te{}class au extends Si{}class Gc extends Si{async _call(T){return new Qt(await super._call(T))}}class $i extends te{}class lu extends $i{}class uu extends $i{}class Ii extends te{}class du extends Ii{}class cu extends Ii{}class pu extends te{}class sn extends pu{}class rn extends pu{async _call(T){return new Qt(await super._call(T))}}class Fr extends te{}class Ai extends Fr{}class nn extends Fr{async _call(T){return new Oi(await super._call(T))}}class Ks extends Fr{async _call(T){return new Fi(await super._call(T))}}class Oi extends Ke{constructor({logits:T,pred_boxes:N}){super(),this.logits=T,this.pred_boxes=N}}class Fi extends Ke{constructor({logits:T,pred_boxes:N,pred_masks:fe}){super(),this.logits=T,this.pred_boxes=N,this.pred_masks=fe}}class Di extends te{}class Kc extends Di{}class Un extends Di{async _call(T){return new Li(await super._call(T))}}class Li extends Ke{constructor({logits:T,pred_boxes:N}){super(),this.logits=T,this.pred_boxes=N}}class _o extends te{}class hu extends _o{}class mu extends _o{async _call(T){return new zi(await super._call(T))}}class zi extends Oi{}class fo extends te{}class _u extends fo{}class Bi extends fo{async _call(T){return new Qt(await super._call(T))}}class Ri extends te{}class go extends Ri{}class Ni extends Ri{async _call(T){return new Qt(await super._call(T))}}class ji extends te{}class fu extends ji{}class Hc extends ji{async _call(T){return new Qt(await super._call(T))}}class Ui extends te{}class Vi extends Ui{}class Vn extends Ui{async _call(T){return new Qt(await super._call(T))}}class Wi extends te{}class Gi extends Wi{}class gu extends Wi{}class Ki extends te{}class wu extends Ki{}class qc extends Ki{}class yu extends te{}class Mu extends yu{}class Hi extends te{}class bu extends Hi{}class wo extends Hi{}class vu extends Hi{}class yo extends te{}class qi extends yo{}class Mo extends te{}class xu extends Mo{}class Tu extends Mo{}class bo extends te{}class Qc extends bo{}class Eu extends bo{}class Xc extends te{}class Pu extends Xc{}class Qi extends te{}class Cu extends Qi{}class Xi extends Qi{async _call(T){return new Qt(await super._call(T))}}class Yi extends te{}class ku extends Yi{}class Ji extends Yi{async _call(T){return new Qt(await super._call(T))}}class Zi extends te{}class Su extends Zi{}class Yc extends Zi{async _call(T){return new Qt(await super._call(T))}}class ea extends te{}class $u extends ea{}class Iu extends ea{async _call(T){return new Qt(await super._call(T))}}class Jc extends te{}class Au extends Jc{}class ta extends te{}class Ou extends ta{}class Fu extends ta{async _call(T){return new Du(await super._call(T))}}class Du extends Ke{constructor({logits:T,pred_boxes:N}){super(),this.logits=T,this.pred_boxes=N}}class Zc extends te{}class vo extends Zc{async get_image_embeddings({pixel_values:T}){return await Oe(this,{pixel_values:T})}async forward(T){if((!T.image_embeddings||!T.image_positional_embeddings)&&(T={...T,...await this.get_image_embeddings(T)}),!T.input_labels&&T.input_points){const fe=T.input_points.dims.slice(0,-1),De=fe.reduce((Ae,et)=>Ae*et,1);T.input_labels=new b.Tensor("int64",new BigInt64Array(De).fill(1n),fe)}const N={image_embeddings:T.image_embeddings,image_positional_embeddings:T.image_positional_embeddings};return T.input_points&&(N.input_points=T.input_points),T.input_labels&&(N.input_labels=T.input_labels),T.input_boxes&&(N.input_boxes=T.input_boxes),await we(this.sessions.prompt_encoder_mask_decoder,N)}async _call(T){return new Wn(await super._call(T))}}class Wn extends Ke{constructor({iou_scores:T,pred_masks:N}){super(),this.iou_scores=T,this.pred_masks=N}}class xo extends te{}class Lu extends xo{}class zu extends xo{}class sa extends te{}class Bu extends sa{}class ra extends sa{}class Kr extends te{}class Ru extends Kr{}class Nu extends Kr{async _call(T){return new un(await super._call(T))}}class ep extends Kr{async _call(T){return new Qt(await super._call(T))}}class ju extends Kr{async _call(T){return new Hs(await super._call(T))}}class To extends te{}class Uu extends To{}class Vu extends To{async _call(T){return new Hs(await super._call(T))}}class Wu extends te{}class tp extends Wu{}class Eo extends te{}class Gu extends Eo{}class sp extends Eo{async _call(T){return new un(await super._call(T))}}class Ku extends Eo{async _call(T){return new Qt(await super._call(T))}}class Gn extends te{}class Hu extends Gn{}class qu extends Gn{async _call(T){return new un(await super._call(T))}}class rp extends Gn{async _call(T){return new Qt(await super._call(T))}}class Qu extends Gn{async _call(T){return new Hs(await super._call(T))}}class Po extends te{}class Xu extends Po{}class np extends Po{async _call(T){return new un(await super._call(T))}}class Yu extends Po{async _call(T){return new Qt(await super._call(T))}}class op extends te{}class Ju extends Kr{}class Zu extends Kr{async _call(T){return new un(await super._call(T))}}class ip extends Kr{async _call(T){return new Qt(await super._call(T))}}class xn extends te{}class ed extends xn{}class td extends xn{async _call(T){return new un(await super._call(T))}}class sd extends xn{async _call(T){return new Qt(await super._call(T))}}class ap extends xn{async _call(T){return new Hn(await super._call(T))}}class rd extends xn{async _call(T){return new Hs(await super._call(T))}}class nd extends te{}class od extends nd{}class Co extends te{}class Kp extends Co{}class Pr extends Co{}class Dr extends Co{async generate_speech(T,N,{threshold:fe=.5,minlenratio:De=0,maxlenratio:Ae=20,vocoder:et=null}={}){const rt={input_ids:T},{encoder_outputs:ft,encoder_attention_mask:Mt}=await Oe(this,rt),jt=ft.dims[1]/this.config.reduction_factor,Vt=Math.floor(jt*Ae),Lt=Math.floor(jt*De),Gt=this.config.num_mel_bins;let ts=[],ns=null,Jt=null,is=0;for(;;){++is;const cs=ce(!!Jt);let Ps;Jt?Ps=Jt.output_sequence_out:Ps=new b.Tensor("float32",new Float32Array(Gt),[1,1,Gt]);let As={use_cache_branch:cs,output_sequence:Ps,encoder_attention_mask:Mt,speaker_embeddings:N,encoder_hidden_states:ft};this.addPastKeyValues(As,ns),Jt=await we(this.sessions.decoder_model_merged,As),ns=this.getPastKeyValues(Jt,ns);const{prob:Zs,spectrum:Ys}=Jt;if(ts.push(Ys),is>=Lt&&(Array.from(Zs.data).filter(Mr=>Mr>=fe).length>0||is>=Vt))break}const Is=(0,b.cat)(ts),{waveform:xs}=await we(et.sessions.model,{spectrogram:Is});return{spectrogram:Is,waveform:xs}}}class on extends te{constructor(){super(...arguments);me(this,"main_input_name","spectrogram")}}class an extends te{}class id extends an{}class na extends te{}class ad extends na{}class ld extends na{}class oa extends te{}class ud extends oa{}class dd extends oa{}class ia extends te{}class cd extends ia{}class pd extends ia{}class aa extends te{}class nr extends aa{}class hd extends aa{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"text_model"})}}class md extends aa{static async from_pretrained(T,N={}){return super.from_pretrained(T,{...N,model_file_name:N.model_file_name??"audio_model"})}}class la extends te{}class ua extends la{async _call(T){return new Pp(await super._call(T))}}class ln extends te{}class lp extends ln{}class _d extends ln{}class fd extends ln{}class da extends te{}class gd extends da{}class wd extends da{}class ko extends te{}class yd extends ko{}class Md extends ko{async _call(T){return new Qt(await super._call(T))}}class ca extends te{}class up extends ca{}class dp extends ca{}class So extends te{constructor(){super(...arguments);me(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(N){const[fe,De]=N.dims,Ae=this.config.decoder.num_codebooks,et=De-Ae;let rt=0;for(let jt=0;jt<N.size;++jt){if(N.data[jt]===this.config.decoder.pad_token_id)continue;const Vt=jt%De,Lt=Math.floor(jt/De)%Ae,Gt=Vt-Lt;Gt>0&&Gt<=et&&(N.data[rt++]=N.data[jt])}const ft=Math.floor(fe/Ae),Mt=rt/(ft*Ae);return new b.Tensor(N.type,N.data.slice(0,rt),[ft,Ae,Mt])}prepare_inputs_for_generation(N,fe,De){let Ae=structuredClone(N);for(let rt=0;rt<Ae.length;++rt)for(let ft=0;ft<Ae[rt].length;++ft)rt%this.config.decoder.num_codebooks>=ft&&(Ae[rt][ft]=BigInt(this.config.decoder.pad_token_id));return De.guidance_scale!==null&&De.guidance_scale>1&&(Ae=Ae.concat(Ae)),super.prepare_inputs_for_generation(Ae,fe,De)}async generate(N){const fe=await super.generate(N),De=this._apply_and_filter_by_delay_pattern_mask(fe).unsqueeze_(0),{audio_values:Ae}=await we(this.sessions.encodec_decode,{audio_codes:De});return Ae}}class pa extends te{}class cp extends pa{}class ha extends pa{async _call(T){return new Qt(await super._call(T))}}class ma extends te{}class bd extends ma{}class vd extends ma{async _call(T){return new Qt(await super._call(T))}}class xd extends te{}class Td extends xd{}class Ed extends xd{async _call(T){return new Qt(await super._call(T))}}class _a extends te{}class pp extends _a{}class Pd extends _a{async _call(T){return new Qt(await super._call(T))}}class Cd extends te{}class hp extends Cd{}class kd extends te{}class Sd extends kd{constructor(...N){super(...N);me(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(N){const fe=this._generation_mode??"text";let De;if(fe==="text"||!N.past_key_values){const Mt=this.sessions.prepare_inputs_embeds,jt=(0,R.pick)(N,Mt.inputNames);De=await we(Mt,jt)}else{const Mt=this.sessions.gen_img_embeds,jt=(0,R.pick)({image_ids:N.input_ids},Mt.inputNames);De=await we(Mt,jt)}const Ae={...N,...De},et=await Pe(this,Ae),rt=this.sessions[fe==="text"?"lm_head":"gen_head"];if(!rt)throw new Error(`Unable to find "${rt}" generation head`);const ft=await we(rt,(0,R.pick)(et,rt.inputNames));return{...De,...et,...ft}}async generate(N){return this._generation_mode="text",super.generate(N)}async generate_images(N){this._generation_mode="image";const fe=(N.inputs??N[this.main_input_name]).dims[1],Ae=(await super.generate(N)).slice(null,[fe,null]),et=this.sessions.image_decode,{decoded_image:rt}=await we(et,{generated_tokens:Ae}),ft=rt.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Mt=[];for(const jt of ft){const Vt=O.RawImage.fromTensor(jt);Mt.push(Vt)}return Mt}}class $d extends Ke{constructor({char_logits:T,bpe_logits:N,wp_logits:fe}){super(),this.char_logits=T,this.bpe_logits=N,this.wp_logits=fe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Id extends te{}class Ad extends Id{async _call(T){return new $d(await super._call(T))}}class Od extends te{}class Fd extends Od{}class Dd extends Od{}class fa extends te{}class Ld extends fa{}class zd extends fa{}class gs{static async from_pretrained(T,{progress_callback:N=null,config:fe=null,cache_dir:De=null,local_files_only:Ae=!1,revision:et="main",model_file_name:rt=null,subfolder:ft="onnx",device:Mt=null,dtype:jt=null,use_external_data_format:Vt=null,session_options:Lt={}}={}){const Gt={progress_callback:N,config:fe,cache_dir:De,local_files_only:Ae,revision:et,model_file_name:rt,subfolder:ft,device:Mt,dtype:jt,use_external_data_format:Vt,session_options:Lt};if(Gt.config=await f.AutoConfig.from_pretrained(T,Gt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const ts of this.MODEL_CLASS_MAPPINGS){const ns=ts.get(Gt.config.model_type);if(ns)return await ns[1].from_pretrained(T,Gt)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${Gt.config.model_type}", attempting to construct from base class.`),await te.from_pretrained(T,Gt);throw Error(`Unsupported model type: ${Gt.config.model_type}`)}}me(gs,"MODEL_CLASS_MAPPINGS",null),me(gs,"BASE_IF_FAIL",!1);const mp=new Map([["bert",["BertModel",Te]],["modernbert",["ModernBertModel",dt]],["nomic_bert",["NomicBertModel",ie]],["roformer",["RoFormerModel",_e]],["electra",["ElectraModel",Ds]],["esm",["EsmModel",no]],["convbert",["ConvBertModel",vt]],["camembert",["CamembertModel",Nt]],["deberta",["DebertaModel",Jr]],["deberta-v2",["DebertaV2Model",Tt]],["mpnet",["MPNetModel",gn]],["albert",["AlbertModel",Bn]],["distilbert",["DistilBertModel",lr]],["roberta",["RobertaModel",or]],["xlm",["XLMModel",Ls]],["xlm-roberta",["XLMRobertaModel",At]],["clap",["ClapModel",nr]],["clip",["CLIPModel",Ya]],["clipseg",["CLIPSegModel",rl]],["chinese_clip",["ChineseCLIPModel",fr]],["siglip",["SiglipModel",el]],["jina_clip",["JinaCLIPModel",lo]],["mobilebert",["MobileBertModel",Fn]],["squeezebert",["SqueezeBertModel",bn]],["wav2vec2",["Wav2Vec2Model",Ru]],["wav2vec2-bert",["Wav2Vec2BertModel",Xu]],["unispeech",["UniSpeechModel",Gu]],["unispeech-sat",["UniSpeechSatModel",Hu]],["hubert",["HubertModel",Ju]],["wavlm",["WavLMModel",ed]],["audio-spectrogram-transformer",["ASTModel",Ra]],["vits",["VitsModel",ua]],["pyannote",["PyAnnoteModel",Uu]],["wespeaker-resnet",["WeSpeakerResNetModel",tp]],["detr",["DetrModel",Ai]],["rt_detr",["RTDetrModel",Kc]],["table-transformer",["TableTransformerModel",hu]],["vit",["ViTModel",Gl]],["ijepa",["IJepaModel",Kl]],["pvt",["PvtModel",Xl]],["vit_msn",["ViTMSNModel",Wc]],["vit_mae",["ViTMAEModel",Jl]],["groupvit",["GroupViTModel",yr]],["fastvit",["FastViTModel",tu]],["mobilevit",["MobileViTModel",ou]],["mobilevitv2",["MobileViTV2Model",au]],["owlvit",["OwlViTModel",lu]],["owlv2",["Owlv2Model",du]],["beit",["BeitModel",sn]],["deit",["DeiTModel",_u]],["hiera",["HieraModel",go]],["convnext",["ConvNextModel",Cu]],["convnextv2",["ConvNextV2Model",ku]],["dinov2",["Dinov2Model",Su]],["dinov2_with_registers",["Dinov2WithRegistersModel",$u]],["resnet",["ResNetModel",fu]],["swin",["SwinModel",Vi]],["swin2sr",["Swin2SRModel",Gi]],["donut-swin",["DonutSwinModel",Pu]],["yolos",["YolosModel",Ou]],["dpt",["DPTModel",wu]],["glpn",["GLPNModel",Qc]],["hifigan",["SpeechT5HifiGan",on]],["efficientnet",["EfficientNetModel",yd]],["decision_transformer",["DecisionTransformerModel",hp]],["patchtst",["PatchTSTForPrediction",Fd]],["patchtsmixer",["PatchTSMixerForPrediction",Ld]],["mobilenet_v1",["MobileNetV1Model",cp]],["mobilenet_v2",["MobileNetV2Model",bd]],["mobilenet_v3",["MobileNetV3Model",Td]],["mobilenet_v4",["MobileNetV4Model",pp]],["maskformer",["MaskFormerModel",xu]],["mgp-str",["MgpstrForSceneTextRecognition",Ad]],["style_text_to_speech_2",["StyleTextToSpeech2Model",od]]]),_p=new Map([["t5",["T5Model",P]],["longt5",["LongT5Model",be]],["mt5",["MT5Model",pt]],["bart",["BartModel",xt]],["mbart",["MBartModel",Fs]],["marian",["MarianModel",Lu]],["whisper",["WhisperModel",Na]],["m2m_100",["M2M100Model",Bu]],["blenderbot",["BlenderbotModel",ze]],["blenderbot-small",["BlenderbotSmallModel",ks]]]),fp=new Map([["bloom",["BloomModel",Rl]],["jais",["JAISModel",al]],["gpt2",["GPT2Model",ol]],["gptj",["GPTJModel",pl]],["gpt_bigcode",["GPTBigCodeModel",ml]],["gpt_neo",["GPTNeoModel",wr]],["gpt_neox",["GPTNeoXModel",dl]],["codegen",["CodeGenModel",si]],["llama",["LlamaModel",ni]],["exaone",["ExaoneModel",yl]],["olmo",["OlmoModel",Uc]],["olmo2",["Olmo2Model",xl]],["mobilellm",["MobileLLMModel",Ml]],["granite",["GraniteModel",ds]],["cohere",["CohereModel",El]],["gemma",["GemmaModel",Cl]],["gemma2",["Gemma2Model",Sl]],["helium",["HeliumModel",co]],["glm",["GlmModel",wl]],["openelm",["OpenELMModel",Il]],["qwen2",["Qwen2Model",jn]],["phi",["PhiModel",Dl]],["phi3",["Phi3Model",zl]],["mpt",["MptModel",jl]],["opt",["OPTModel",Vl]],["mistral",["MistralModel",ad]],["starcoder2",["Starcoder2Model",ud]],["falcon",["FalconModel",cd]],["stablelm",["StableLmModel",gd]]]),Bd=new Map([["speecht5",["SpeechT5ForSpeechToText",Pr]],["whisper",["WhisperForConditionalGeneration",ja]],["moonshine",["MoonshineForConditionalGeneration",Ua]]]),Kn=new Map([["speecht5",["SpeechT5ForTextToSpeech",Dr]]]),ga=new Map([["vits",["VitsModel",ua]],["musicgen",["MusicgenForConditionalGeneration",So]]]),wa=new Map([["bert",["BertForSequenceClassification",Ve]],["modernbert",["ModernBertForSequenceClassification",lt]],["roformer",["RoFormerForSequenceClassification",We]],["electra",["ElectraForSequenceClassification",kr]],["esm",["EsmForSequenceClassification",An]],["convbert",["ConvBertForSequenceClassification",It]],["camembert",["CamembertForSequenceClassification",Sr]],["deberta",["DebertaForSequenceClassification",Br]],["deberta-v2",["DebertaV2ForSequenceClassification",Vs]],["mpnet",["MPNetForSequenceClassification",wn]],["albert",["AlbertForSequenceClassification",vn]],["distilbert",["DistilBertForSequenceClassification",Os]],["roberta",["RobertaForSequenceClassification",_s]],["xlm",["XLMForSequenceClassification",Gs]],["xlm-roberta",["XLMRobertaForSequenceClassification",jo]],["bart",["BartForSequenceClassification",ms]],["mbart",["MBartForSequenceClassification",rs]],["mobilebert",["MobileBertForSequenceClassification",Vr]],["squeezebert",["SqueezeBertForSequenceClassification",Ln]]]),ya=new Map([["bert",["BertForTokenClassification",Ne]],["modernbert",["ModernBertForTokenClassification",ht]],["roformer",["RoFormerForTokenClassification",Je]],["electra",["ElectraForTokenClassification",Qr]],["esm",["EsmForTokenClassification",On]],["convbert",["ConvBertForTokenClassification",os]],["camembert",["CamembertForTokenClassification",$r]],["deberta",["DebertaForTokenClassification",Rr]],["deberta-v2",["DebertaV2ForTokenClassification",Nr]],["mpnet",["MPNetForTokenClassification",yn]],["distilbert",["DistilBertForTokenClassification",Er]],["roberta",["RobertaForTokenClassification",Ss]],["xlm",["XLMForTokenClassification",$t]],["xlm-roberta",["XLMRobertaForTokenClassification",za]]]),$o=new Map([["t5",["T5ForConditionalGeneration",Q]],["longt5",["LongT5ForConditionalGeneration",Se]],["mt5",["MT5ForConditionalGeneration",gt]],["bart",["BartForConditionalGeneration",Kt]],["mbart",["MBartForConditionalGeneration",Bt]],["marian",["MarianMTModel",zu]],["m2m_100",["M2M100ForConditionalGeneration",ra]],["blenderbot",["BlenderbotForConditionalGeneration",Js]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Xs]]]),Ma=new Map([["bloom",["BloomForCausalLM",Nl]],["gpt2",["GPT2LMHeadModel",il]],["jais",["JAISLMHeadModel",ll]],["gptj",["GPTJForCausalLM",hl]],["gpt_bigcode",["GPTBigCodeForCausalLM",_l]],["gpt_neo",["GPTNeoForCausalLM",ul]],["gpt_neox",["GPTNeoXForCausalLM",cl]],["codegen",["CodeGenForCausalLM",fl]],["llama",["LlamaForCausalLM",jc]],["exaone",["ExaoneForCausalLM",li]],["olmo",["OlmoForCausalLM",vl]],["olmo2",["Olmo2ForCausalLM",Vc]],["mobilellm",["MobileLLMForCausalLM",bl]],["granite",["GraniteForCausalLM",Tl]],["cohere",["CohereForCausalLM",Pl]],["gemma",["GemmaForCausalLM",kl]],["gemma2",["Gemma2ForCausalLM",$l]],["helium",["HeliumForCausalLM",gl]],["glm",["GlmForCausalLM",Nn]],["openelm",["OpenELMForCausalLM",Al]],["qwen2",["Qwen2ForCausalLM",Ol]],["phi",["PhiForCausalLM",Ll]],["phi3",["Phi3ForCausalLM",Bl]],["mpt",["MptForCausalLM",Ul]],["opt",["OPTForCausalLM",Wl]],["mbart",["MBartForCausalLM",rr]],["mistral",["MistralForCausalLM",ld]],["starcoder2",["Starcoder2ForCausalLM",dd]],["falcon",["FalconForCausalLM",pd]],["trocr",["TrOCRForCausalLM",id]],["stablelm",["StableLmForCausalLM",wd]],["phi3_v",["Phi3VForCausalLM",pr]]]),gp=new Map([["multi_modality",["MultiModalityCausalLM",Sd]]]),ba=new Map([["bert",["BertForMaskedLM",Ue]],["modernbert",["ModernBertForMaskedLM",ct]],["roformer",["RoFormerForMaskedLM",$e]],["electra",["ElectraForMaskedLM",sr]],["esm",["EsmForMaskedLM",In]],["convbert",["ConvBertForMaskedLM",kt]],["camembert",["CamembertForMaskedLM",Xr]],["deberta",["DebertaForMaskedLM",Ir]],["deberta-v2",["DebertaV2ForMaskedLM",Dt]],["mpnet",["MPNetForMaskedLM",Zr]],["albert",["AlbertForMaskedLM",as]],["distilbert",["DistilBertForMaskedLM",fn]],["roberta",["RobertaForMaskedLM",_r]],["xlm",["XLMWithLMHeadModel",$s]],["xlm-roberta",["XLMRobertaForMaskedLM",La]],["mobilebert",["MobileBertForMaskedLM",oo]],["squeezebert",["SqueezeBertForMaskedLM",Dn]]]),va=new Map([["bert",["BertForQuestionAnswering",Re]],["roformer",["RoFormerForQuestionAnswering",ut]],["electra",["ElectraForQuestionAnswering",Us]],["convbert",["ConvBertForQuestionAnswering",ys]],["camembert",["CamembertForQuestionAnswering",Yr]],["deberta",["DebertaForQuestionAnswering",ar]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ar]],["mpnet",["MPNetForQuestionAnswering",Mn]],["albert",["AlbertForQuestionAnswering",Rn]],["distilbert",["DistilBertForQuestionAnswering",es]],["roberta",["RobertaForQuestionAnswering",yt]],["xlm",["XLMForQuestionAnswering",en]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Ba]],["mobilebert",["MobileBertForQuestionAnswering",mr]],["squeezebert",["SqueezeBertForQuestionAnswering",zn]]]),xa=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Go]],["idefics3",["Idefics3ForConditionalGeneration",Ko]]]),wp=new Map([["llava",["LlavaForConditionalGeneration",io]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Va]],["moondream1",["Moondream1ForConditionalGeneration",Wa]],["florence2",["Florence2ForConditionalGeneration",Ka]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Fl]],["idefics3",["Idefics3ForConditionalGeneration",Ko]],["paligemma",["PaliGemmaForConditionalGeneration",qa]]]),Rd=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Go]]]),Nd=new Map([["vit",["ViTForImageClassification",xi]],["ijepa",["IJepaForImageClassification",Hl]],["pvt",["PvtForImageClassification",Ei]],["vit_msn",["ViTMSNForImageClassification",Zl]],["fastvit",["FastViTForImageClassification",su]],["mobilevit",["MobileViTForImageClassification",iu]],["mobilevitv2",["MobileViTV2ForImageClassification",Gc]],["beit",["BeitForImageClassification",rn]],["deit",["DeiTForImageClassification",Bi]],["hiera",["HieraForImageClassification",Ni]],["convnext",["ConvNextForImageClassification",Xi]],["convnextv2",["ConvNextV2ForImageClassification",Ji]],["dinov2",["Dinov2ForImageClassification",Yc]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Iu]],["resnet",["ResNetForImageClassification",Hc]],["swin",["SwinForImageClassification",Vn]],["segformer",["SegformerForImageClassification",_d]],["efficientnet",["EfficientNetForImageClassification",Md]],["mobilenet_v1",["MobileNetV1ForImageClassification",ha]],["mobilenet_v2",["MobileNetV2ForImageClassification",vd]],["mobilenet_v3",["MobileNetV3ForImageClassification",Ed]],["mobilenet_v4",["MobileNetV4ForImageClassification",Pd]]]),jd=new Map([["detr",["DetrForObjectDetection",nn]],["rt_detr",["RTDetrForObjectDetection",Un]],["table-transformer",["TableTransformerForObjectDetection",mu]],["yolos",["YolosForObjectDetection",Fu]]]),Ta=new Map([["owlvit",["OwlViTForObjectDetection",uu]],["owlv2",["Owlv2ForObjectDetection",cu]],["grounding-dino",["GroundingDinoForObjectDetection",Au]]]),Ud=new Map([["detr",["DetrForSegmentation",Ks]],["clipseg",["CLIPSegForImageSegmentation",nl]]]),Vd=new Map([["segformer",["SegformerForSemanticSegmentation",fd]],["sapiens",["SapiensForSemanticSegmentation",bu]]]),Wd=new Map([["detr",["DetrForSegmentation",Ks]],["maskformer",["MaskFormerForInstanceSegmentation",Tu]]]),Gd=new Map([["sam",["SamModel",vo]]]),yp=new Map([["wav2vec2",["Wav2Vec2ForCTC",Nu]],["wav2vec2-bert",["Wav2Vec2BertForCTC",np]],["unispeech",["UniSpeechForCTC",sp]],["unispeech-sat",["UniSpeechSatForCTC",qu]],["wavlm",["WavLMForCTC",td]],["hubert",["HubertForCTC",Zu]]]),Kd=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",ep]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Yu]],["unispeech",["UniSpeechForSequenceClassification",Ku]],["unispeech-sat",["UniSpeechSatForSequenceClassification",rp]],["wavlm",["WavLMForSequenceClassification",sd]],["hubert",["HubertForSequenceClassification",ip]],["audio-spectrogram-transformer",["ASTForAudioClassification",Uo]]]),Hd=new Map([["wavlm",["WavLMForXVector",ap]]]),qd=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Qu]],["wavlm",["WavLMForAudioFrameClassification",rd]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",ju]],["pyannote",["PyAnnoteForAudioFrameClassification",Vu]]]),Qd=new Map([["vitmatte",["VitMatteForImageMatting",nu]]]),Hp=new Map([["patchtst",["PatchTSTForPrediction",Dd]],["patchtsmixer",["PatchTSMixerForPrediction",zd]]]),Xd=new Map([["swin2sr",["Swin2SRForImageSuperResolution",gu]]]),Yd=new Map([["dpt",["DPTForDepthEstimation",qc]],["depth_anything",["DepthAnythingForDepthEstimation",Mu]],["glpn",["GLPNForDepthEstimation",Eu]],["sapiens",["SapiensForDepthEstimation",wo]],["depth_pro",["DepthProForDepthEstimation",qi]]]),Jd=new Map([["sapiens",["SapiensForNormalEstimation",vu]]]),Mp=new Map([["vitpose",["VitPoseForPoseEstimation",Ql]]]),Zd=new Map([["clip",["CLIPVisionModelWithProjection",Za]],["siglip",["SiglipVisionModel",sl]],["jina_clip",["JinaCLIPVisionModel",gr]]]),ec=[[mp,I.EncoderOnly],[_p,I.EncoderDecoder],[fp,I.DecoderOnly],[wa,I.EncoderOnly],[ya,I.EncoderOnly],[$o,I.Seq2Seq],[Bd,I.Seq2Seq],[Ma,I.DecoderOnly],[gp,I.MultiModality],[ba,I.EncoderOnly],[va,I.EncoderOnly],[xa,I.Vision2Seq],[wp,I.ImageTextToText],[Nd,I.EncoderOnly],[Ud,I.EncoderOnly],[Wd,I.EncoderOnly],[Vd,I.EncoderOnly],[Qd,I.EncoderOnly],[Hp,I.EncoderOnly],[Xd,I.EncoderOnly],[Yd,I.EncoderOnly],[Jd,I.EncoderOnly],[Mp,I.EncoderOnly],[jd,I.EncoderOnly],[Ta,I.EncoderOnly],[Gd,I.MaskGeneration],[yp,I.EncoderOnly],[Kd,I.EncoderOnly],[Kn,I.Seq2Seq],[ga,I.EncoderOnly],[Hd,I.EncoderOnly],[qd,I.EncoderOnly],[Zd,I.EncoderOnly]];for(const[_,T]of ec)for(const[N,fe]of _.values())S.set(N,T),x.set(fe,N),w.set(N,fe);const bp=[["MusicgenForConditionalGeneration",So,I.Musicgen],["Phi3VForCausalLM",pr,I.Phi3V],["CLIPTextModelWithProjection",Ja,I.EncoderOnly],["SiglipTextModel",tl,I.EncoderOnly],["JinaCLIPTextModel",qo,I.EncoderOnly],["ClapTextModelWithProjection",hd,I.EncoderOnly],["ClapAudioModelWithProjection",md,I.EncoderOnly]];for(const[_,T,N]of bp)S.set(_,N),x.set(T,_),w.set(_,T);class Ea extends gs{}me(Ea,"MODEL_CLASS_MAPPINGS",ec.map(T=>T[0])),me(Ea,"BASE_IF_FAIL",!0);class vp extends gs{}me(vp,"MODEL_CLASS_MAPPINGS",[wa]);class tc extends gs{}me(tc,"MODEL_CLASS_MAPPINGS",[ya]);class sc extends gs{}me(sc,"MODEL_CLASS_MAPPINGS",[$o]);class rc extends gs{}me(rc,"MODEL_CLASS_MAPPINGS",[Bd]);class nc extends gs{}me(nc,"MODEL_CLASS_MAPPINGS",[Kn]);class oc extends gs{}me(oc,"MODEL_CLASS_MAPPINGS",[ga]);class ic extends gs{}me(ic,"MODEL_CLASS_MAPPINGS",[Ma]);class ac extends gs{}me(ac,"MODEL_CLASS_MAPPINGS",[ba]);class lc extends gs{}me(lc,"MODEL_CLASS_MAPPINGS",[va]);class uc extends gs{}me(uc,"MODEL_CLASS_MAPPINGS",[xa]);class dc extends gs{}me(dc,"MODEL_CLASS_MAPPINGS",[Nd]);class cc extends gs{}me(cc,"MODEL_CLASS_MAPPINGS",[Ud]);class Pa extends gs{}me(Pa,"MODEL_CLASS_MAPPINGS",[Vd]);class pc extends gs{}me(pc,"MODEL_CLASS_MAPPINGS",[Wd]);class hc extends gs{}me(hc,"MODEL_CLASS_MAPPINGS",[jd]);class mc extends gs{}me(mc,"MODEL_CLASS_MAPPINGS",[Ta]);class _c extends gs{}me(_c,"MODEL_CLASS_MAPPINGS",[Gd]);class fc extends gs{}me(fc,"MODEL_CLASS_MAPPINGS",[yp]);class gc extends gs{}me(gc,"MODEL_CLASS_MAPPINGS",[Kd]);class wc extends gs{}me(wc,"MODEL_CLASS_MAPPINGS",[Hd]);class xp extends gs{}me(xp,"MODEL_CLASS_MAPPINGS",[qd]);class yc extends gs{}me(yc,"MODEL_CLASS_MAPPINGS",[Rd]);class Mc extends gs{}me(Mc,"MODEL_CLASS_MAPPINGS",[Qd]);class bc extends gs{}me(bc,"MODEL_CLASS_MAPPINGS",[Xd]);class Tp extends gs{}me(Tp,"MODEL_CLASS_MAPPINGS",[Yd]);class vc extends gs{}me(vc,"MODEL_CLASS_MAPPINGS",[Jd]);class xc extends gs{}me(xc,"MODEL_CLASS_MAPPINGS",[Mp]);class Tc extends gs{}me(Tc,"MODEL_CLASS_MAPPINGS",[Zd]);class qp extends Ke{constructor({logits:T,past_key_values:N,encoder_outputs:fe,decoder_attentions:De=null,cross_attentions:Ae=null}){super(),this.logits=T,this.past_key_values=N,this.encoder_outputs=fe,this.decoder_attentions=De,this.cross_attentions=Ae}}class Qt extends Ke{constructor({logits:T,...N}){super(),this.logits=T;const fe=Object.values(N);fe.length>0&&(this.attentions=fe)}}class Hn extends Ke{constructor({logits:T,embeddings:N}){super(),this.logits=T,this.embeddings=N}}class Hs extends Ke{constructor({logits:T}){super(),this.logits=T}}class qs extends Ke{constructor({logits:T}){super(),this.logits=T}}class tr extends Ke{constructor({start_logits:T,end_logits:N}){super(),this.start_logits=T,this.end_logits=N}}class un extends Ke{constructor({logits:T}){super(),this.logits=T}}class Ep extends Ke{constructor({logits:T,past_key_values:N}){super(),this.logits=T,this.past_key_values=N}}class Ec extends Ke{constructor({alphas:T}){super(),this.alphas=T}}class Pp extends Ke{constructor({waveform:T,spectrogram:N}){super(),this.waveform=T,this.spectrogram=N}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(Ie,$,r)=>{r.r($),r.d($,{ASTFeatureExtractor:()=>j});var f=r("./src/base/feature_extraction_utils.js");r("./src/utils/tensor.js");var A=r("./src/utils/audio.js");class j extends f.FeatureExtractor{constructor(R){super(R);const g=this.config.sampling_rate,v=(0,A.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(g/2),g,null,"kaldi",!0);for(let M=0;M<v.length;++M)v[M].push(0);this.mel_filters=v,this.window=(0,A.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(R,g){return(0,A.spectrogram)(R,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:g,transpose:!0})}async _call(R){(0,f.validate_audio_inputs)(R,"ASTFeatureExtractor");const g=await this._extract_fbank_features(R,this.config.max_length);if(this.config.do_normalize){const v=this.std*2,M=g.data;for(let y=0;y<M.length;++y)M[y]=(M[y]-this.mean)/v}return{input_values:g.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(Ie,$,r)=>{r.r($),r.d($,{AutoFeatureExtractor:()=>X});var f=r("./src/utils/constants.js"),A=r("./src/utils/hub.js");r("./src/base/feature_extraction_utils.js");var j=r("./src/models/feature_extractors.js");class X{static async from_pretrained(g,v={}){const M=await(0,A.getModelJSON)(g,f.FEATURE_EXTRACTOR_NAME,!0,v),y=M.feature_extractor_type,b=j[y];if(!b)throw new Error(`Unknown feature_extractor_type: '${y}'. Please report this at ${f.GITHUB_ISSUE_URL}.`);return new b(M)}}},"./src/models/auto/image_processing_auto.js":(Ie,$,r)=>{r.r($),r.d($,{AutoImageProcessor:()=>R});var f=r("./src/utils/constants.js"),A=r("./src/utils/hub.js"),j=r("./src/base/image_processors_utils.js"),X=r("./src/models/image_processors.js");class R{static async from_pretrained(v,M={}){const y=await(0,A.getModelJSON)(v,f.IMAGE_PROCESSOR_NAME,!0,M),b=y.image_processor_type??y.feature_extractor_type;let O=X[b];return O||(b!==void 0&&console.warn(`Image processor type '${b}' not found, assuming base ImageProcessor. Please report this at ${f.GITHUB_ISSUE_URL}.`),O=j.ImageProcessor),new O(y)}}},"./src/models/auto/processing_auto.js":(Ie,$,r)=>{r.r($),r.d($,{AutoProcessor:()=>v});var f=r("./src/utils/constants.js"),A=r("./src/utils/hub.js"),j=r("./src/base/processing_utils.js"),X=r("./src/models/processors.js"),R=r("./src/models/image_processors.js"),g=r("./src/models/feature_extractors.js");class v{static async from_pretrained(y,b={}){const O=await(0,A.getModelJSON)(y,f.IMAGE_PROCESSOR_NAME,!0,b),{image_processor_type:K,feature_extractor_type:se,processor_class:ne}=O;if(ne&&X[ne])return X[ne].from_pretrained(y,b);if(!K&&!se)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const W={};if(K){const q=R[K];if(!q)throw new Error(`Unknown image_processor_type: '${K}'.`);W.image_processor=new q(O)}if(se){const q=R[se];if(q)W.image_processor=new q(O);else{const I=g[se];if(!I)throw new Error(`Unknown feature_extractor_type: '${se}'.`);W.feature_extractor=new I(O)}}const U={};return new j.Processor(U,W)}}},"./src/models/beit/image_processing_beit.js":(Ie,$,r)=>{r.r($),r.d($,{BeitFeatureExtractor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(Ie,$,r)=>{r.r($),r.d($,{BitImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(Ie,$,r)=>{r.r($),r.d($,{ChineseCLIPFeatureExtractor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(Ie,$,r)=>{r.r($),r.d($,{ClapFeatureExtractor:()=>j});var f=r("./src/base/feature_extraction_utils.js");r("./src/utils/tensor.js");var A=r("./src/utils/audio.js");class j extends f.FeatureExtractor{constructor(R){super(R),this.mel_filters=(0,A.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,A.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,A.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(R,g,v,M){let y;const b=R.length-g;if(b>0)if(v==="rand_trunc"){const O=Math.floor(Math.random()*(b+1));R=R.subarray(O,O+g),y=await this._extract_fbank_features(R,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${v}" not implemented`);else{if(b<0){let O=new Float64Array(g);if(O.set(R),M==="repeat")for(let K=R.length;K<g;K+=R.length)O.set(R.subarray(0,Math.min(R.length,g-K)),K);else if(M==="repeatpad")for(let K=R.length;K<-b;K+=R.length)O.set(R,K);R=O}if(v==="fusion")throw new Error(`Truncation strategy "${v}" not implemented`);y=await this._extract_fbank_features(R,this.mel_filters_slaney,this.config.nb_max_samples)}return y.unsqueeze_(0)}async _extract_fbank_features(R,g,v=null){return(0,A.spectrogram)(R,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:g,log_mel:"dB",max_num_frames:v,do_pad:!1,transpose:!0})}async _call(R,{max_length:g=null}={}){return(0,f.validate_audio_inputs)(R,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(R,g??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(Ie,$,r)=>{r.r($),r.d($,{CLIPFeatureExtractor:()=>j,CLIPImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/convnext/image_processing_convnext.js":(Ie,$,r)=>{r.r($),r.d($,{ConvNextFeatureExtractor:()=>j,ConvNextImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{constructor(R){super(R),this.crop_pct=this.config.crop_pct??224/256}async resize(R){var v;const g=(v=this.size)==null?void 0:v.shortest_edge;if(g===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(g<384){const M=Math.floor(g/this.crop_pct),[y,b]=this.get_resize_output_image_size(R,{shortest_edge:M});R=await R.resize(y,b,{resample:this.resample}),R=await R.center_crop(g,g)}else R=await R.resize(g,g,{resample:this.resample});return R}}class j extends A{}},"./src/models/deit/image_processing_deit.js":(Ie,$,r)=>{r.r($),r.d($,{DeiTFeatureExtractor:()=>j,DeiTImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/detr/image_processing_detr.js":(Ie,$,r)=>{r.r($),r.d($,{DetrFeatureExtractor:()=>X,DetrImageProcessor:()=>j});var f=r("./src/base/image_processors_utils.js"),A=r("./src/utils/tensor.js");class j extends f.ImageProcessor{async _call(g){const v=await super._call(g),M=[v.pixel_values.dims[0],64,64],y=(0,A.full)(M,1n);return{...v,pixel_mask:y}}post_process_object_detection(...g){return(0,f.post_process_object_detection)(...g)}post_process_panoptic_segmentation(...g){return(0,f.post_process_panoptic_segmentation)(...g)}post_process_instance_segmentation(...g){return(0,f.post_process_instance_segmentation)(...g)}}class X extends j{}},"./src/models/donut/image_processing_donut.js":(Ie,$,r)=>{r.r($),r.d($,{DonutFeatureExtractor:()=>j,DonutImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{pad_image(R,g,v,M={}){const[y,b,O]=g;let K=this.image_mean;Array.isArray(this.image_mean)||(K=new Array(O).fill(K));let se=this.image_std;Array.isArray(se)||(se=new Array(O).fill(K));const ne=K.map((W,U)=>-W/se[U]);return super.pad_image(R,g,v,{center:!0,constant_values:ne,...M})}}class j extends A{}},"./src/models/dpt/image_processing_dpt.js":(Ie,$,r)=>{r.r($),r.d($,{DPTFeatureExtractor:()=>j,DPTImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/efficientnet/image_processing_efficientnet.js":(Ie,$,r)=>{r.r($),r.d($,{EfficientNetImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{constructor(X){super(X),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(R=>R*R))}}},"./src/models/feature_extractors.js":(Ie,$,r)=>{r.r($),r.d($,{ASTFeatureExtractor:()=>f.ASTFeatureExtractor,ClapFeatureExtractor:()=>A.ClapFeatureExtractor,ImageFeatureExtractor:()=>b.ImageProcessor,MoonshineFeatureExtractor:()=>j.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>X.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>R.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>g.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>v.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>M.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>y.WhisperFeatureExtractor});var f=r("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),A=r("./src/models/clap/feature_extraction_clap.js"),j=r("./src/models/moonshine/feature_extraction_moonshine.js"),X=r("./src/models/pyannote/feature_extraction_pyannote.js"),R=r("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),g=r("./src/models/speecht5/feature_extraction_speecht5.js"),v=r("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),M=r("./src/models/wespeaker/feature_extraction_wespeaker.js"),y=r("./src/models/whisper/feature_extraction_whisper.js"),b=r("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(Ie,$,r)=>{r.r($),r.d($,{Florence2Processor:()=>X});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js");class X extends f.Processor{constructor(g,v){super(g,v);const{tasks_answer_post_processing_type:M,task_prompts_without_inputs:y,task_prompts_with_input:b}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(M??{})),this.task_prompts_without_inputs=new Map(Object.entries(y??{})),this.task_prompts_with_input=new Map(Object.entries(b??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(g){typeof g=="string"&&(g=[g]);const v=[];for(const M of g)if(this.task_prompts_without_inputs.has(M))v.push(this.task_prompts_without_inputs.get(M));else{for(const[y,b]of this.task_prompts_with_input)if(M.includes(y)){v.push(b.replaceAll("{input}",M).replaceAll(y,""));break}v.length!==g.length&&v.push(M)}return v}post_process_generation(g,v,M){const y=this.tasks_answer_post_processing_type.get(v)??"pure_text";g=g.replaceAll("<s>","").replaceAll("</s>","");let b;switch(y){case"pure_text":b=g;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const O=y==="ocr"?"quad_boxes":"bboxes",K=g.matchAll(this.regexes[O]),se=[],ne=[];for(const[W,U,...q]of K)se.push(U?U.trim():se.at(-1)??""),ne.push(q.map((I,S)=>(Number(I)+.5)/this.size_per_bin*M[S%2]));b={labels:se,[O]:ne};break;default:throw new Error(`Task "${v}" (of type "${y}") not yet implemented.`)}return{[v]:b}}async _call(g,v=null,M={}){if(!g&&!v)throw new Error("Either text or images must be provided");const y=await this.image_processor(g,M),b=v?this.tokenizer(v,M):{};return{...y,...b}}}me(X,"tokenizer_class",j.AutoTokenizer),me(X,"image_processor_class",A.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(Ie,$,r)=>{r.r($),r.d($,{GLPNFeatureExtractor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(Ie,$,r)=>{r.r($),r.d($,{GroundingDinoImageProcessor:()=>j});var f=r("./src/base/image_processors_utils.js"),A=r("./src/utils/tensor.js");class j extends f.ImageProcessor{async _call(R){const g=await super._call(R),v=g.pixel_values.dims,M=(0,A.ones)([v[0],v[2],v[3]]);return{...g,pixel_mask:M}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(Ie,$,r)=>{r.r($),r.d($,{GroundingDinoProcessor:()=>g});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js"),X=r("./src/base/image_processors_utils.js");function R(v,M){const b=v.dims.at(-1)-1,O=v.tolist();O.fill(!1,0,1),O.fill(!1,b);const K=M.tolist();return O.map((se,ne)=>se?ne:null).filter(se=>se!==null).map(se=>K[se])}class g extends f.Processor{async _call(M,y,b={}){const O=M?await this.image_processor(M,b):{};return{...y?this.tokenizer(y,b):{},...O}}post_process_grounded_object_detection(M,y,{box_threshold:b=.25,text_threshold:O=.25,target_sizes:K=null}={}){const{logits:se,pred_boxes:ne}=M,W=se.dims[0];if(K!==null&&K.length!==W)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const U=se.dims.at(1),q=se.sigmoid(),I=q.max(-1).tolist(),S=ne.tolist().map(x=>x.map(F=>(0,X.center_to_corners_format)(F))),w=[];for(let x=0;x<W;++x){const F=K!==null?K[x]:null;F!==null&&(S[x]=S[x].map(re=>re.map((xe,ce)=>xe*F[(ce+1)%2])));const ae=I[x],oe=[],ve=[],we=[];for(let re=0;re<U;++re){const xe=ae[re];if(xe<=b)continue;const ce=S[x][re],ke=q[x][re];oe.push(xe),we.push(ce);const Oe=R(ke.gt(O),y[x]);ve.push(Oe)}w.push({scores:oe,boxes:we,labels:this.batch_decode(ve)})}return w}}me(g,"tokenizer_class",j.AutoTokenizer),me(g,"image_processor_class",A.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(Ie,$,r)=>{r.r($),r.d($,{Idefics3ImageProcessor:()=>j});var f=r("./src/base/image_processors_utils.js"),A=r("./src/utils/tensor.js");class j extends f.ImageProcessor{constructor(R){super(R),this.do_image_splitting=R.do_image_splitting??!0,this.max_image_size=R.max_image_size}get_resize_for_vision_encoder(R,g){let[v,M]=R.dims.slice(-2);const y=M/v;return M>=v?(M=Math.ceil(M/g)*g,v=Math.floor(M/y),v=Math.ceil(v/g)*g):(v=Math.ceil(v/g)*g,M=Math.floor(v*y),M=Math.ceil(M/g)*g),{height:v,width:M}}async _call(R,{do_image_splitting:g=null,return_row_col_info:v=!1}={}){let M;if(!Array.isArray(R))M=[[R]];else{if(R.length===0||!R[0])throw new Error("No images provided.");Array.isArray(R[0])?M=R:M=[R]}let y=[],b=[],O=[];const K=[],se=[];for(const x of M){let F=await Promise.all(x.map(ve=>this.preprocess(ve)));K.push(...F.map(ve=>ve.original_size)),se.push(...F.map(ve=>ve.reshaped_input_size)),F.forEach(ve=>ve.pixel_values.unsqueeze_(0));const{longest_edge:ae}=this.max_image_size;let oe;if(g??this.do_image_splitting){let ve=new Array(F.length),we=new Array(F.length);oe=await Promise.all(F.map(async(re,xe)=>{const ce=this.get_resize_for_vision_encoder(re.pixel_values,ae),ke=await(0,A.interpolate_4d)(re.pixel_values,{size:[ce.height,ce.width]}),{frames:Oe,num_splits_h:Pe,num_splits_w:tt}=await this.split_image(ke,this.max_image_size);return ve[xe]=Pe,we[xe]=tt,(0,A.cat)(Oe,0)})),b.push(ve),O.push(we)}else{const ve=[ae,ae];oe=await Promise.all(F.map(we=>(0,A.interpolate_4d)(we.pixel_values,{size:ve}))),b.push(new Array(F.length).fill(0)),O.push(new Array(F.length).fill(0))}y.push((0,A.cat)(oe,0))}const ne=y.length,[W,U,q,I]=y[0].dims;let S,w;if(ne===1)S=y[0].unsqueeze_(0),w=(0,A.full)([ne,W,q,I],!0);else{const x=Math.max(...y.map(oe=>oe.dims.at(0)));w=(0,A.full)([ne,x,q,I],!0);const F=w.data,ae=x*q*I;for(let oe=0;oe<ne;++oe){const ve=y[oe].dims[0];if(ve<x){y[oe]=(0,A.cat)([y[oe],(0,A.full)([x-ve,U,q,I],0)],0);const we=oe*ae+ve*q*I,re=(oe+1)*ae;F.fill(!1,we,re)}}S=(0,A.stack)(y,0)}return{pixel_values:S,pixel_attention_mask:w,original_sizes:K,reshaped_input_sizes:se,...v?{rows:b,cols:O}:{}}}async split_image(R,{longest_edge:g}){const v=g,M=g,y=[],[b,O]=R.dims.slice(-2);let K=0,se=0;if(b>v||O>M){K=Math.ceil(b/v),se=Math.ceil(O/M);const ne=Math.ceil(b/K),W=Math.ceil(O/se);for(let I=0;I<K;++I)for(let S=0;S<se;++S){let w,x,F,ae;I===K-1?(x=b-ne,ae=b):(x=I*ne,ae=(I+1)*ne),S===se-1?(w=O-W,F=O):(w=S*W,F=(S+1)*W);const oe=[x,w],ve=[ae,F],we=await(0,A.slice)(R,oe,ve,[2,3]);y.push(we)}const U=v,q=M;(b!==U||O!==q)&&(R=await(0,A.interpolate_4d)(R,{size:[U,q]}))}return y.push(R),{frames:y,num_splits_h:K,num_splits_w:se}}}},"./src/models/idefics3/processing_idefics3.js":(Ie,$,r)=>{r.r($),r.d($,{Idefics3Processor:()=>M});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js");r("./src/utils/image.js");var X=r("./src/utils/core.js");function R(y,b,O,K,se,ne){let W="";for(let U=0;U<b;++U){for(let q=0;q<O;++q)W+=K+`<row_${U+1}_col_${q+1}>`+se.repeat(y);W+=`
`}return W+=`
${K}${ne}`+se.repeat(y)+`${K}`,W}function g(y,b,O,K){return`${b}${K}`+O.repeat(y)+`${b}`}function v(y,b,O,K,se,ne){return y===0&&b===0?g(O,K,se,ne):R(O,y,b,K,se,ne)}class M extends f.Processor{constructor(){super(...arguments);me(this,"fake_image_token","<fake_token_around_image>");me(this,"image_token","<image>");me(this,"global_img_token","<global-img>")}async _call(O,K=null,se={}){se.return_row_col_info??(se.return_row_col_info=!0);let ne;K&&(ne=await this.image_processor(K,se)),Array.isArray(O)||(O=[O]);const W=ne.rows??[new Array(O.length).fill(0)],U=ne.cols??[new Array(O.length).fill(0)],q=this.config.image_seq_len,I=[],S=[];for(let x=0;x<O.length;++x){const F=O[x],ae=W[x],oe=U[x];I.push((0,X.count)(F,this.image_token));const ve=ae.map((xe,ce)=>v(xe,oe[ce],q,this.fake_image_token,this.image_token,this.global_img_token)),we=F.split(this.image_token);if(we.length===0)throw new Error("The image token should be present in the text.");let re=we[0];for(let xe=0;xe<ve.length;++xe)re+=ve[xe]+we[xe+1];S.push(re)}return{...this.tokenizer(S),...ne}}}me(M,"image_processor_class",A.AutoImageProcessor),me(M,"tokenizer_class",j.AutoTokenizer),me(M,"uses_processor_config",!0)},"./src/models/image_processors.js":(Ie,$,r)=>{r.r($),r.d($,{BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BitImageProcessor:()=>A.BitImageProcessor,CLIPFeatureExtractor:()=>X.CLIPFeatureExtractor,CLIPImageProcessor:()=>X.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>j.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>R.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>R.ConvNextImageProcessor,DPTFeatureExtractor:()=>y.DPTFeatureExtractor,DPTImageProcessor:()=>y.DPTImageProcessor,DeiTFeatureExtractor:()=>g.DeiTFeatureExtractor,DeiTImageProcessor:()=>g.DeiTImageProcessor,DetrFeatureExtractor:()=>v.DetrFeatureExtractor,DetrImageProcessor:()=>v.DetrImageProcessor,DonutFeatureExtractor:()=>M.DonutFeatureExtractor,DonutImageProcessor:()=>M.DonutImageProcessor,EfficientNetImageProcessor:()=>b.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>O.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>K.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>se.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>W.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>U.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>q.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>I.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>I.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>S.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>S.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>w.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>w.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>x.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>x.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>F.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>F.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>ae.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>ae.MobileViTImageProcessor,NougatImageProcessor:()=>oe.NougatImageProcessor,OwlViTFeatureExtractor:()=>we.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>we.OwlViTImageProcessor,Owlv2ImageProcessor:()=>ve.Owlv2ImageProcessor,Phi3VImageProcessor:()=>re.Phi3VImageProcessor,PvtImageProcessor:()=>xe.PvtImageProcessor,Qwen2VLImageProcessor:()=>ce.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>ke.RTDetrImageProcessor,SamImageProcessor:()=>Oe.SamImageProcessor,SegformerFeatureExtractor:()=>Pe.SegformerFeatureExtractor,SegformerImageProcessor:()=>Pe.SegformerImageProcessor,SiglipImageProcessor:()=>tt.SiglipImageProcessor,Swin2SRImageProcessor:()=>Ge.Swin2SRImageProcessor,VLMImageProcessor:()=>ne.VLMImageProcessor,ViTFeatureExtractor:()=>ye.ViTFeatureExtractor,ViTImageProcessor:()=>ye.ViTImageProcessor,VitMatteImageProcessor:()=>J.VitMatteImageProcessor,VitPoseImageProcessor:()=>de.VitPoseImageProcessor,YolosFeatureExtractor:()=>Ce.YolosFeatureExtractor,YolosImageProcessor:()=>Ce.YolosImageProcessor});var f=r("./src/models/beit/image_processing_beit.js"),A=r("./src/models/bit/image_processing_bit.js"),j=r("./src/models/chinese_clip/image_processing_chinese_clip.js"),X=r("./src/models/clip/image_processing_clip.js"),R=r("./src/models/convnext/image_processing_convnext.js"),g=r("./src/models/deit/image_processing_deit.js"),v=r("./src/models/detr/image_processing_detr.js"),M=r("./src/models/donut/image_processing_donut.js"),y=r("./src/models/dpt/image_processing_dpt.js"),b=r("./src/models/efficientnet/image_processing_efficientnet.js"),O=r("./src/models/glpn/image_processing_glpn.js"),K=r("./src/models/grounding_dino/image_processing_grounding_dino.js"),se=r("./src/models/idefics3/image_processing_idefics3.js"),ne=r("./src/models/janus/image_processing_janus.js"),W=r("./src/models/jina_clip/image_processing_jina_clip.js"),U=r("./src/models/llava_onevision/image_processing_llava_onevision.js"),q=r("./src/models/mask2former/image_processing_mask2former.js"),I=r("./src/models/maskformer/image_processing_maskformer.js"),S=r("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),w=r("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),x=r("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),F=r("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),ae=r("./src/models/mobilevit/image_processing_mobilevit.js"),oe=r("./src/models/nougat/image_processing_nougat.js"),ve=r("./src/models/owlv2/image_processing_owlv2.js"),we=r("./src/models/owlvit/image_processing_owlvit.js"),re=r("./src/models/phi3_v/image_processing_phi3_v.js"),xe=r("./src/models/pvt/image_processing_pvt.js"),ce=r("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),ke=r("./src/models/rt_detr/image_processing_rt_detr.js"),Oe=r("./src/models/sam/image_processing_sam.js"),Pe=r("./src/models/segformer/image_processing_segformer.js"),tt=r("./src/models/siglip/image_processing_siglip.js"),Ge=r("./src/models/swin2sr/image_processing_swin2sr.js"),ye=r("./src/models/vit/image_processing_vit.js"),J=r("./src/models/vitmatte/image_processing_vitmatte.js"),de=r("./src/models/vitpose/image_processing_vitpose.js"),Ce=r("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(Ie,$,r)=>{r.r($),r.d($,{VLMImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{constructor(X){super({do_pad:!0,pad_size:{width:X.image_size,height:X.image_size},...X}),this.constant_values=this.config.background_color.map(R=>R*this.rescale_factor)}pad_image(X,R,g,v){return super.pad_image(X,R,g,{constant_values:this.constant_values,center:!0,...v})}}},"./src/models/janus/processing_janus.js":(Ie,$,r)=>{r.r($),r.d($,{VLChatProcessor:()=>v});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js"),X=r("./src/utils/core.js"),R=r("./src/utils/tensor.js"),g=r("./src/utils/image.js");class v extends f.Processor{constructor(y,b){super(y,b),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(y,{images:b=null,chat_template:O="default"}={}){b?Array.isArray(b)||(b=[b]):b=await Promise.all(y.filter(oe=>oe.images).flatMap(oe=>oe.images).map(oe=>g.RawImage.read(oe)));const K=this.tokenizer,se=K.apply_chat_template(y,{tokenize:!1,add_generation_prompt:!0,chat_template:O}),ne=oe=>K.encode(oe,{add_special_tokens:!1}),W=se.split(this.image_tag),U=W.length-1;if(b.length!==U)throw new Error(`Number of images provided (${b.length}) does not match number of "${this.image_tag}" image tags (${U})`);const[q,I,S]=K.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let w=ne(W[0]),x=new Array(w.length).fill(!1);for(let oe=1;oe<W.length;++oe){const ve=new Array(this.num_image_tokens).fill(q),we=ne(W[oe]);w=(0,X.mergeArrays)(w,[I],ve,[S],we);const re=new Array(this.num_image_tokens).fill(!0);x=(0,X.mergeArrays)(x,[!1],re,[!1],new Array(we.length).fill(!1))}const F=[1,w.length],ae={input_ids:new R.Tensor("int64",w,F),attention_mask:new R.Tensor("int64",new Array(w.length).fill(1),F),images_seq_mask:new R.Tensor("bool",x,F),images_emb_mask:new R.Tensor("bool",new Array(U*this.num_image_tokens).fill(!0),[1,U,this.num_image_tokens])};if(b&&b.length>0){const oe=await this.image_processor(b);return oe.pixel_values.unsqueeze_(0),{...ae,...oe}}return ae}}me(v,"image_processor_class",A.AutoImageProcessor),me(v,"tokenizer_class",j.AutoTokenizer),me(v,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(Ie,$,r)=>{r.r($),r.d($,{JinaCLIPImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{constructor(X){const{resize_mode:R,fill_color:g,interpolation:v,size:M,...y}=X,b=R==="squash"?{width:M,height:M}:R==="shortest"?{shortest_edge:M}:{longest_edge:M},O=v==="bicubic"?3:2;super({...y,size:b,resample:O,do_center_crop:!0,crop_size:M,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(Ie,$,r)=>{r.r($),r.d($,{JinaCLIPProcessor:()=>X});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js");class X extends f.Processor{async _call(g=null,v=null,M={}){if(!g&&!v)throw new Error("Either text or images must be provided");const y=g?this.tokenizer(g,M):{},b=v?await this.image_processor(v,M):{};return{...y,...b}}}me(X,"tokenizer_class",j.AutoTokenizer),me(X,"image_processor_class",A.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(Ie,$,r)=>{r.r($),r.d($,{LlavaOnevisionImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(Ie,$,r)=>{r.r($),r.d($,{Mask2FormerImageProcessor:()=>A});var f=r("./src/models/maskformer/image_processing_maskformer.js");class A extends f.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(Ie,$,r)=>{r.r($),r.d($,{MaskFormerFeatureExtractor:()=>j,MaskFormerImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{post_process_panoptic_segmentation(...R){return(0,f.post_process_panoptic_segmentation)(...R)}post_process_instance_segmentation(...R){return(0,f.post_process_instance_segmentation)(...R)}}class j extends A{}},"./src/models/mgp_str/processing_mgp_str.js":(Ie,$,r)=>{r.r($),r.d($,{MgpstrProcessor:()=>g});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js"),X=r("./src/utils/maths.js");const R={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class g extends f.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(M,y){if(!R.hasOwnProperty(y))throw new Error(`Format ${y} is not supported.`);const[b,O]=R[y],K=this[b].bind(this),[se,ne]=M.dims,W=[],U=[],q=M.tolist();for(let S=0;S<se;++S){const w=q[S],x=[],F=[];for(let oe=1;oe<ne;++oe){const[ve,we]=(0,X.max)((0,X.softmax)(w[oe]));if(F.push(ve),we==O)break;x.push(we)}const ae=F.length>0?F.reduce((oe,ve)=>oe*ve,1):0;U.push(x),W.push(ae)}return[K(U),W]}char_decode(M){return this.char_tokenizer.batch_decode(M).map(y=>y.replaceAll(" ",""))}bpe_decode(M){return this.bpe_tokenizer.batch_decode(M)}wp_decode(M){return this.wp_tokenizer.batch_decode(M).map(y=>y.replaceAll(" ",""))}batch_decode([M,y,b]){const[O,K]=this._decode_helper(M,"char"),[se,ne]=this._decode_helper(y,"bpe"),[W,U]=this._decode_helper(b,"wp"),q=[],I=[];for(let S=0;S<O.length;++S){const[w,x]=(0,X.max)([K[S],ne[S],U[S]]);q.push([O[S],se[S],W[S]][x]),I.push(w)}return{generated_text:q,scores:I,char_preds:O,bpe_preds:se,wp_preds:W}}static async from_pretrained(...M){const y=await super.from_pretrained(...M),b=await j.AutoTokenizer.from_pretrained("Xenova/gpt2"),O=await j.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return y.components={image_processor:y.image_processor,char_tokenizer:y.tokenizer,bpe_tokenizer:b,wp_tokenizer:O},y}async _call(M,y=null){const b=await this.image_processor(M);return y&&(b.labels=this.tokenizer(y).input_ids),b}}me(g,"tokenizer_class",j.AutoTokenizer),me(g,"image_processor_class",A.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(Ie,$,r)=>{r.r($),r.d($,{MobileNetV1FeatureExtractor:()=>j,MobileNetV1ImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(Ie,$,r)=>{r.r($),r.d($,{MobileNetV2FeatureExtractor:()=>j,MobileNetV2ImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(Ie,$,r)=>{r.r($),r.d($,{MobileNetV3FeatureExtractor:()=>j,MobileNetV3ImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(Ie,$,r)=>{r.r($),r.d($,{MobileNetV4FeatureExtractor:()=>j,MobileNetV4ImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/mobilevit/image_processing_mobilevit.js":(Ie,$,r)=>{r.r($),r.d($,{MobileViTFeatureExtractor:()=>j,MobileViTImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/moonshine/feature_extraction_moonshine.js":(Ie,$,r)=>{r.r($),r.d($,{MoonshineFeatureExtractor:()=>j});var f=r("./src/base/feature_extraction_utils.js"),A=r("./src/utils/tensor.js");class j extends f.FeatureExtractor{async _call(R){(0,f.validate_audio_inputs)(R,"MoonshineFeatureExtractor"),R instanceof Float64Array&&(R=new Float32Array(R));const g=[1,R.length];return{input_values:new A.Tensor("float32",R,g)}}}},"./src/models/moonshine/processing_moonshine.js":(Ie,$,r)=>{r.r($),r.d($,{MoonshineProcessor:()=>X});var f=r("./src/models/auto/feature_extraction_auto.js"),A=r("./src/tokenizers.js"),j=r("./src/base/processing_utils.js");class X extends j.Processor{async _call(g){return await this.feature_extractor(g)}}me(X,"tokenizer_class",A.AutoTokenizer),me(X,"feature_extractor_class",f.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(Ie,$,r)=>{r.r($),r.d($,{NougatImageProcessor:()=>A});var f=r("./src/models/donut/image_processing_donut.js");class A extends f.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(Ie,$,r)=>{r.r($),r.d($,{Owlv2ImageProcessor:()=>A});var f=r("./src/models/owlvit/image_processing_owlvit.js");class A extends f.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(Ie,$,r)=>{r.r($),r.d($,{OwlViTFeatureExtractor:()=>j,OwlViTImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{post_process_object_detection(...R){return(0,f.post_process_object_detection)(...R)}}class j extends A{}},"./src/models/owlvit/processing_owlvit.js":(Ie,$,r)=>{r.r($),r.d($,{OwlViTProcessor:()=>X});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js");class X extends f.Processor{}me(X,"tokenizer_class",j.AutoTokenizer),me(X,"image_processor_class",A.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(Ie,$,r)=>{r.r($),r.d($,{PaliGemmaProcessor:()=>g});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js");const X="<image>";function R(v,M,y,b,O){return`${b.repeat(y*O)}${M}${v}
`}class g extends f.Processor{async _call(M,y=null,b={}){y||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),y=""),Array.isArray(M)||(M=[M]),Array.isArray(y)||(y=[y]);const O=this.tokenizer.bos_token,K=this.image_processor.config.image_seq_length;let se;y.some(U=>U.includes(X))?se=y.map(U=>{const q=U.replaceAll(X,X.repeat(K)),I=q.lastIndexOf(X),S=I===-1?0:I+X.length;return q.slice(0,S)+O+q.slice(S)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),se=y.map(U=>R(U,O,K,X,M.length)));const ne=this.tokenizer(se,b);return{...await this.image_processor(M,b),...ne}}}me(g,"tokenizer_class",j.AutoTokenizer),me(g,"image_processor_class",A.AutoImageProcessor),me(g,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(Ie,$,r)=>{r.r($),r.d($,{Phi3VImageProcessor:()=>M});var f=r("./src/base/image_processors_utils.js"),A=r("./src/utils/tensor.js");const j=336,X=[2,3],{ceil:R,floor:g,sqrt:v}=Math;class M extends f.ImageProcessor{constructor(b){super({...b,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=b.num_crops}calc_num_image_tokens_from_image_size(b,O){const{num_img_tokens:K}=this.config;return g((g(O/j)*g(b/j)+1)*K+1+(g(O/j)+1)*v(K))}get_resize_output_image_size(b,O){const K=this._num_crops,[se,ne]=b.size;let W=se/ne,U=1;for(;U*Math.ceil(U/W)<=K;)U+=1;U-=1;const q=Math.floor(U*336),I=Math.floor(q/W);return[q,I]}pad_image(b,O,K,se={}){const[ne,W]=O,U=j*R(ne/j),q=j*R(W/j),I=[1,1,1].map((S,w)=>(S-this.image_mean[w])/this.image_std[w]);return super.pad_image(b,O,{width:q,height:U},{center:!0,constant_values:I,...se})}async _call(b,{num_crops:O=null}={}){if(this._num_crops=O??(O=this.config.num_crops),O<4||v(O)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(b)||(b=[b]);const K=b.length,se=await Promise.all(b.map(x=>this.preprocess(x))),ne=se.map(x=>x.original_size),W=se.map(x=>x.reshaped_input_size),U=[];for(const{pixel_values:x}of se){x.unsqueeze_(0);const[F,ae]=x.dims.slice(-2),oe=await(0,A.interpolate_4d)(x,{size:[j,j],mode:"bicubic"});if(O>0){const ve=[],we=v(O),re=g(ae/we),xe=g(F/we);for(let ke=0;ke<we;++ke)for(let Oe=0;Oe<we;++Oe){let Pe,tt,Ge,ye;ke===we-1?(tt=F-xe,ye=F):(tt=ke*xe,ye=(ke+1)*xe),Oe===we-1?(Pe=ae-re,Ge=ae):(Pe=Oe*re,Ge=(Oe+1)*re);const J=[tt,Pe],de=[ye,Ge],Ce=await(0,A.slice)(x,J,de,X);ve.push(Ce)}const ce=await(0,A.interpolate_4d)((0,A.cat)(ve,0),{size:[j,j],mode:"bicubic"});U.push((0,A.cat)([oe,ce],0))}else U.push(oe)}const q=(0,A.stack)(U,0),I=W.map(x=>x.map(F=>j*R(F/j))),S=new A.Tensor("int64",I.flat(),[K,2]),w=I.map(([x,F])=>this.calc_num_image_tokens_from_image_size(F,x));return{pixel_values:q,original_sizes:ne,reshaped_input_sizes:W,image_sizes:S,num_img_tokens:w}}}},"./src/models/phi3_v/processing_phi3_v.js":(Ie,$,r)=>{r.r($),r.d($,{Phi3VProcessor:()=>g});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js");r("./src/utils/image.js");const X="<|image|>",R=/<\|image_\d+\|>/g;class g extends f.Processor{async _call(M,y=null,{padding:b=!0,truncation:O=!0,num_crops:K=null}={}){Array.isArray(M)||(M=[M]);let se,ne;if(y){ne=await this.image_processor(y,{num_crops:K});const{num_img_tokens:W}=ne,U=M.map((I,S)=>I.split(R).join(X.repeat(W[S])));se=this.tokenizer(U,{padding:b,truncation:O});const q=this.tokenizer.model.convert_tokens_to_ids([X])[0];se.input_ids.map_(I=>I==q?-I:I)}else se=this.tokenizer(M);return{...se,...ne}}}me(g,"image_processor_class",A.AutoImageProcessor),me(g,"tokenizer_class",j.AutoTokenizer)},"./src/models/processors.js":(Ie,$,r)=>{r.r($),r.d($,{Florence2Processor:()=>f.Florence2Processor,GroundingDinoProcessor:()=>A.GroundingDinoProcessor,Idefics3Processor:()=>j.Idefics3Processor,JinaCLIPProcessor:()=>R.JinaCLIPProcessor,MgpstrProcessor:()=>g.MgpstrProcessor,MoonshineProcessor:()=>v.MoonshineProcessor,OwlViTProcessor:()=>M.OwlViTProcessor,PaliGemmaProcessor:()=>b.PaliGemmaProcessor,Phi3VProcessor:()=>y.Phi3VProcessor,PyAnnoteProcessor:()=>O.PyAnnoteProcessor,Qwen2VLProcessor:()=>K.Qwen2VLProcessor,SamProcessor:()=>se.SamProcessor,SpeechT5Processor:()=>ne.SpeechT5Processor,VLChatProcessor:()=>X.VLChatProcessor,Wav2Vec2Processor:()=>W.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>U.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>q.WhisperProcessor});var f=r("./src/models/florence2/processing_florence2.js"),A=r("./src/models/grounding_dino/processing_grounding_dino.js"),j=r("./src/models/idefics3/processing_idefics3.js"),X=r("./src/models/janus/processing_janus.js"),R=r("./src/models/jina_clip/processing_jina_clip.js"),g=r("./src/models/mgp_str/processing_mgp_str.js"),v=r("./src/models/moonshine/processing_moonshine.js"),M=r("./src/models/owlvit/processing_owlvit.js"),y=r("./src/models/phi3_v/processing_phi3_v.js"),b=r("./src/models/paligemma/processing_paligemma.js"),O=r("./src/models/pyannote/processing_pyannote.js"),K=r("./src/models/qwen2_vl/processing_qwen2_vl.js"),se=r("./src/models/sam/processing_sam.js"),ne=r("./src/models/speecht5/processing_speecht5.js"),W=r("./src/models/wav2vec2/processing_wav2vec2.js"),U=r("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),q=r("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(Ie,$,r)=>{r.r($),r.d($,{PvtImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(Ie,$,r)=>{r.r($),r.d($,{PyAnnoteFeatureExtractor:()=>X});var f=r("./src/base/feature_extraction_utils.js"),A=r("./src/utils/tensor.js"),j=r("./src/utils/maths.js");class X extends f.FeatureExtractor{async _call(g){(0,f.validate_audio_inputs)(g,"PyAnnoteFeatureExtractor"),g instanceof Float64Array&&(g=new Float32Array(g));const v=[1,1,g.length];return{input_values:new A.Tensor("float32",g,v)}}samples_to_frames(g){return(g-this.config.offset)/this.config.step}post_process_speaker_diarization(g,v){const M=v/this.samples_to_frames(v)/this.config.sampling_rate,y=[];for(const b of g.tolist()){const O=[];let K=-1;for(let se=0;se<b.length;++se){const ne=(0,j.softmax)(b[se]),[W,U]=(0,j.max)(ne),[q,I]=[se,se+1];U!==K?(K=U,O.push({id:U,start:q,end:I,score:W})):(O.at(-1).end=I,O.at(-1).score+=W)}y.push(O.map(({id:se,start:ne,end:W,score:U})=>({id:se,start:ne*M,end:W*M,confidence:U/(W-ne)})))}return y}}},"./src/models/pyannote/processing_pyannote.js":(Ie,$,r)=>{r.r($),r.d($,{PyAnnoteProcessor:()=>j});var f=r("./src/base/processing_utils.js"),A=r("./src/models/pyannote/feature_extraction_pyannote.js");class j extends f.Processor{async _call(R){return await this.feature_extractor(R)}post_process_speaker_diarization(...R){return this.feature_extractor.post_process_speaker_diarization(...R)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}me(j,"feature_extractor_class",A.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(Ie,$,r)=>{r.r($),r.d($,{Qwen2VLImageProcessor:()=>j});var f=r("./src/base/image_processors_utils.js"),A=r("./src/utils/tensor.js");class j extends f.ImageProcessor{async _call(R,...g){const{pixel_values:v,original_sizes:M,reshaped_input_sizes:y}=await super._call(R,...g);let b=v;const{temporal_patch_size:O,merge_size:K,patch_size:se}=this.config;b.dims[0]===1&&(b=(0,A.cat)(Array.from({length:O},()=>b),0));const ne=b.dims[0]/O,W=b.dims[1],U=Math.floor(b.dims[2]/se),q=Math.floor(b.dims[3]/se),I=b.view(ne,O,W,Math.floor(U/K),K,se,Math.floor(q/K),K,se).permute(0,3,6,4,7,2,1,5,8).view(ne*U*q,W*O*se*se),S=new A.Tensor("int64",[ne,U,q],[1,3]);return{pixel_values:I,image_grid_thw:S,original_sizes:M,reshaped_input_sizes:y}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(Ie,$,r)=>{r.r($),r.d($,{Qwen2VLProcessor:()=>X});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js"),j=r("./src/tokenizers.js");r("./src/utils/image.js");class X extends f.Processor{async _call(g,v=null,...M){Array.isArray(g)||(g=[g]);let y,b;if(v&&(y=await this.image_processor(v),b=y.image_grid_thw),b){let K=this.image_processor.config.merge_size**2,se=0;const ne=b.tolist();g=g.map(W=>{for(;W.includes("<|image_pad|>");){const U=Number(ne[se++].reduce((q,I)=>q*I,1n));W=W.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(U/K)))}return W.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(g),...y}}}me(X,"image_processor_class",A.AutoImageProcessor),me(X,"tokenizer_class",j.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(Ie,$,r)=>{r.r($),r.d($,{RTDetrImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{post_process_object_detection(...X){return(0,f.post_process_object_detection)(...X)}}},"./src/models/sam/image_processing_sam.js":(Ie,$,r)=>{r.r($),r.d($,{SamImageProcessor:()=>X});var f=r("./src/base/image_processors_utils.js"),A=r("./src/utils/core.js"),j=r("./src/utils/tensor.js");class X extends f.ImageProcessor{reshape_input_points(g,v,M,y=!1){g=structuredClone(g);let b=(0,A.calculateDimensions)(g);if(b.length===3)y||(b=[1,...b]),g=[g];else if(b.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let O=0;O<g.length;++O){let K=v[O],se=M[O],ne=[se[0]/K[0],se[1]/K[1]];for(let W=0;W<g[O].length;++W)for(let U=0;U<g[O][W].length;++U)for(let q=0;q<g[O][W][U].length;++q)g[O][W][U][q]*=ne[q%2]}return new j.Tensor("float32",Float32Array.from(g.flat(1/0)),b)}add_input_labels(g,v){let M=(0,A.calculateDimensions)(g);if(M.length===2)M=[1,...M],g=[g];else if(M.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(M.some((y,b)=>y!==v.dims[b]))throw Error(`The first ${M.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new j.Tensor("int64",g.flat(1/0).map(BigInt),M)}async _call(g,{input_points:v=null,input_labels:M=null,input_boxes:y=null}={}){const b=await super._call(g);if(v&&(b.input_points=this.reshape_input_points(v,b.original_sizes,b.reshaped_input_sizes)),M){if(!b.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");b.input_labels=this.add_input_labels(M,b.input_points)}return y&&(b.input_boxes=this.reshape_input_points(y,b.original_sizes,b.reshaped_input_sizes,!0)),b}async post_process_masks(g,v,M,{mask_threshold:y=0,binarize:b=!0,pad_size:O=null}={}){const K=[];O=O??this.pad_size;const se=[O.height,O.width];for(let ne=0;ne<v.length;++ne){const W=v[ne],U=M[ne];let q=await(0,j.interpolate_4d)(g[ne],{mode:"bilinear",size:se});if(q=q.slice(null,null,[0,U[0]],[0,U[1]]),q=await(0,j.interpolate_4d)(q,{mode:"bilinear",size:W}),b){const I=q.data,S=new Uint8Array(I.length);for(let w=0;w<I.length;++w)I[w]>y&&(S[w]=1);q=new j.Tensor("bool",S,q.dims)}K.push(q)}return K}generate_crop_boxes(g,v,{crop_n_layers:M=0,overlap_ratio:y=512/1500,points_per_crop:b=32,crop_n_points_downscale_factor:O=1}={}){}}},"./src/models/sam/processing_sam.js":(Ie,$,r)=>{r.r($),r.d($,{SamProcessor:()=>j});var f=r("./src/base/processing_utils.js"),A=r("./src/models/auto/image_processing_auto.js");class j extends f.Processor{async _call(...R){return await this.image_processor(...R)}post_process_masks(...R){return this.image_processor.post_process_masks(...R)}reshape_input_points(...R){return this.image_processor.reshape_input_points(...R)}}me(j,"image_processor_class",A.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(Ie,$,r)=>{r.r($),r.d($,{SeamlessM4TFeatureExtractor:()=>X});var f=r("./src/base/feature_extraction_utils.js"),A=r("./src/utils/tensor.js"),j=r("./src/utils/audio.js");class X extends f.FeatureExtractor{constructor(g){super(g);const v=this.config.sampling_rate,M=(0,j.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(v/2),v,null,"kaldi",!0);for(let y=0;y<M.length;++y)M[y].push(0);this.mel_filters=M,this.window=(0,j.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(g,v){return g=g.map(M=>M*32768),(0,j.spectrogram)(g,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:v,transpose:!0})}async _call(g,{padding:v=!0,pad_to_multiple_of:M=2,do_normalize_per_mel_bins:y=!0,return_attention_mask:b=!0}={}){(0,f.validate_audio_inputs)(g,"SeamlessM4TFeatureExtractor");let O=await this._extract_fbank_features(g,this.config.max_length);if(y){const[S,w]=O.dims,x=O.data;for(let F=0;F<w;++F){let ae=0;for(let re=0;re<S;++re)ae+=x[re*w+F];const oe=ae/S;let ve=0;for(let re=0;re<S;++re)ve+=(x[re*w+F]-oe)**2;ve/=S-1;const we=Math.sqrt(ve+1e-7);for(let re=0;re<S;++re){const xe=re*w+F;x[xe]=(x[xe]-oe)/we}}}let K;if(v){const[S,w]=O.dims,x=O.data,F=S%M;if(F>0){const ae=new Float32Array(w*(S+F));ae.set(x),ae.fill(this.config.padding_value,x.length);const oe=S+F;O=new A.Tensor(O.type,ae,[oe,w]),b&&(K=new A.Tensor("int64",new BigInt64Array(oe),[1,oe]),K.data.fill(1n,0,S))}}const[se,ne]=O.dims,W=this.config.stride;if(se%W!==0)throw new Error(`The number of frames (${se}) must be a multiple of the stride (${W}).`);const q=O.view(1,Math.floor(se/W),ne*W),I={input_features:q};if(b){const S=q.dims[1],w=new BigInt64Array(S);if(K){const x=K.data;for(let F=1,ae=0;F<se;F+=W,++ae)w[ae]=x[F]}else w.fill(1n);I.attention_mask=new A.Tensor("int64",w,[1,S])}return I}}},"./src/models/segformer/image_processing_segformer.js":(Ie,$,r)=>{r.r($),r.d($,{SegformerFeatureExtractor:()=>j,SegformerImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{post_process_semantic_segmentation(...R){return(0,f.post_process_semantic_segmentation)(...R)}}class j extends A{}},"./src/models/siglip/image_processing_siglip.js":(Ie,$,r)=>{r.r($),r.d($,{SiglipImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(Ie,$,r)=>{r.r($),r.d($,{SpeechT5FeatureExtractor:()=>A});var f=r("./src/base/feature_extraction_utils.js");class A extends f.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(Ie,$,r)=>{r.r($),r.d($,{SpeechT5Processor:()=>X});var f=r("./src/base/processing_utils.js"),A=r("./src/tokenizers.js"),j=r("./src/models/auto/feature_extraction_auto.js");class X extends f.Processor{async _call(g){return await this.feature_extractor(g)}}me(X,"tokenizer_class",A.AutoTokenizer),me(X,"feature_extractor_class",j.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(Ie,$,r)=>{r.r($),r.d($,{Swin2SRImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{pad_image(X,R,g,v={}){const[M,y,b]=R;return super.pad_image(X,R,{width:y+(g-y%g)%g,height:M+(g-M%g)%g},{mode:"symmetric",center:!1,constant_values:-1,...v})}}},"./src/models/vit/image_processing_vit.js":(Ie,$,r)=>{r.r($),r.d($,{ViTFeatureExtractor:()=>j,ViTImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{}class j extends A{}},"./src/models/vitmatte/image_processing_vitmatte.js":(Ie,$,r)=>{r.r($),r.d($,{VitMatteImageProcessor:()=>j});var f=r("./src/base/image_processors_utils.js"),A=r("./src/utils/tensor.js");class j extends f.ImageProcessor{async _call(R,g){Array.isArray(R)||(R=[R]),Array.isArray(g)||(g=[g]);const v=await Promise.all(R.map(b=>this.preprocess(b))),M=await Promise.all(g.map(b=>this.preprocess(b,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,A.stack)(v.map((b,O)=>(0,A.cat)([b.pixel_values,M[O].pixel_values],0)),0),original_sizes:v.map(b=>b.original_size),reshaped_input_sizes:v.map(b=>b.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(Ie,$,r)=>{r.r($),r.d($,{VitPoseImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{post_process_pose_estimation(X,R,{threshold:g=null}={}){const v=X.tolist(),[M,y,b,O]=X.dims,K=[];for(let se=0;se<M;++se){const ne=v[se],W=R[se],U=[];for(let q=0;q<W.length;++q){const I=W[q],S=[],w=[],x=[],F=I.at(-2)/O,ae=I.at(-1)/b;for(let oe=0;oe<ne.length;++oe){let[ve,we]=[0,0],re=0,xe=-1/0;const ce=ne[oe];for(let Oe=0;Oe<ce.length;++Oe){const Pe=ce[Oe];for(let tt=0;tt<Pe.length;++tt){const Ge=Pe[tt];re+=Ge,xe=Math.max(xe,Ge),ve+=(tt+.5)*Ge,we+=Oe*Ge}}if(g!=null&&xe<g)continue;const ke=[F*ve/re,ae*we/re];S.push(ke),x.push(oe),w.push(xe)}U.push({bbox:I,scores:w,labels:x,keypoints:S})}K.push(U)}return K}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(Ie,$,r)=>{r.r($),r.d($,{Wav2Vec2FeatureExtractor:()=>j});var f=r("./src/base/feature_extraction_utils.js"),A=r("./src/utils/tensor.js");class j extends f.FeatureExtractor{_zero_mean_unit_var_norm(R){const v=R.reduce((y,b)=>y+b,0)/R.length,M=R.reduce((y,b)=>y+(b-v)**2,0)/R.length;return R.map(y=>(y-v)/Math.sqrt(M+1e-7))}async _call(R){(0,f.validate_audio_inputs)(R,"Wav2Vec2FeatureExtractor"),R instanceof Float64Array&&(R=new Float32Array(R));let g=R;this.config.do_normalize&&(g=this._zero_mean_unit_var_norm(g));const v=[1,g.length];return{input_values:new A.Tensor("float32",g,v),attention_mask:new A.Tensor("int64",new BigInt64Array(g.length).fill(1n),v)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(Ie,$,r)=>{r.r($),r.d($,{Wav2Vec2Processor:()=>X});var f=r("./src/tokenizers.js"),A=r("./src/models/auto/feature_extraction_auto.js"),j=r("./src/base/processing_utils.js");class X extends j.Processor{async _call(g){return await this.feature_extractor(g)}}me(X,"tokenizer_class",f.AutoTokenizer),me(X,"feature_extractor_class",A.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(Ie,$,r)=>{r.r($),r.d($,{Wav2Vec2ProcessorWithLM:()=>X});var f=r("./src/tokenizers.js"),A=r("./src/models/auto/feature_extraction_auto.js"),j=r("./src/base/processing_utils.js");class X extends j.Processor{async _call(g){return await this.feature_extractor(g)}}me(X,"tokenizer_class",f.AutoTokenizer),me(X,"feature_extractor_class",A.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(Ie,$,r)=>{r.r($),r.d($,{WeSpeakerFeatureExtractor:()=>j});var f=r("./src/base/feature_extraction_utils.js");r("./src/utils/tensor.js");var A=r("./src/utils/audio.js");class j extends f.FeatureExtractor{constructor(R){super(R);const g=this.config.sampling_rate,v=(0,A.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(g/2),g,null,"kaldi",!0);for(let M=0;M<v.length;++M)v[M].push(0);this.mel_filters=v,this.window=(0,A.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(R){return R=R.map(g=>g*32768),(0,A.spectrogram)(R,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(R){(0,f.validate_audio_inputs)(R,"WeSpeakerFeatureExtractor");const g=(await this._extract_fbank_features(R)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const v=g.mean(1).data,M=g.data,[y,b,O]=g.dims;for(let K=0;K<y;++K){const se=K*b*O,ne=K*O;for(let W=0;W<b;++W){const U=se+W*O;for(let q=0;q<O;++q)M[U+q]-=v[ne+q]}}}return{input_features:g}}}},"./src/models/whisper/common_whisper.js":(Ie,$,r)=>{r.r($),r.d($,{WHISPER_LANGUAGE_MAPPING:()=>A,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>j,whisper_language_to_code:()=>X});const f=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],A=new Map(f),j=new Map([...f.map(([R,g])=>[g,R]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function X(R){R=R.toLowerCase();let g=j.get(R);if(g===void 0)if(A.has(R))g=R;else{const M=R.length===2?A.keys():A.values();throw new Error(`Language "${R}" is not supported. Must be one of: ${JSON.stringify(M)}`)}return g}},"./src/models/whisper/feature_extraction_whisper.js":(Ie,$,r)=>{r.r($),r.d($,{WhisperFeatureExtractor:()=>X});var f=r("./src/base/feature_extraction_utils.js");r("./src/utils/tensor.js");var A=r("./src/utils/audio.js"),j=r("./src/utils/maths.js");class X extends f.FeatureExtractor{constructor(g){var v;super(g),(v=this.config).mel_filters??(v.mel_filters=(0,A.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,A.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(g){const v=await(0,A.spectrogram)(g,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),M=v.data,y=(0,j.max)(M)[0];for(let b=0;b<M.length;++b)M[b]=(Math.max(M[b],y-8)+4)/4;return v}async _call(g){(0,f.validate_audio_inputs)(g,"WhisperFeatureExtractor");let v;return g.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),v=g.slice(0,this.config.n_samples)):(v=new Float32Array(this.config.n_samples),v.set(g)),{input_features:(await this._extract_fbank_features(v)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(Ie,$,r)=>{r.r($),r.d($,{WhisperGenerationConfig:()=>A});var f=r("./src/generation/configuration_utils.js");class A extends f.GenerationConfig{constructor(){super(...arguments);me(this,"return_timestamps",null);me(this,"return_token_timestamps",null);me(this,"num_frames",null);me(this,"alignment_heads",null);me(this,"task",null);me(this,"language",null);me(this,"no_timestamps_token_id",null);me(this,"prompt_ids",null);me(this,"is_multilingual",null);me(this,"lang_to_id",null);me(this,"task_to_id",null);me(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(Ie,$,r)=>{r.r($),r.d($,{WhisperProcessor:()=>X});var f=r("./src/models/auto/feature_extraction_auto.js"),A=r("./src/tokenizers.js"),j=r("./src/base/processing_utils.js");class X extends j.Processor{async _call(g){return await this.feature_extractor(g)}}me(X,"tokenizer_class",A.AutoTokenizer),me(X,"feature_extractor_class",f.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(Ie,$,r)=>{r.r($),r.d($,{YolosFeatureExtractor:()=>j,YolosImageProcessor:()=>A});var f=r("./src/base/image_processors_utils.js");class A extends f.ImageProcessor{post_process_object_detection(...R){return(0,f.post_process_object_detection)(...R)}}class j extends A{}},"./src/ops/registry.js":(Ie,$,r)=>{r.r($),r.d($,{TensorOpRegistry:()=>g});var f=r("./src/backends/onnx.js"),A=r("./src/utils/tensor.js"),j=r("./src/env.js");const X=j.apis.IS_BROWSER_ENV||j.apis.IS_WEBWORKER_ENV,R=async(v,M,y)=>{const b=await(0,f.createInferenceSession)(new Uint8Array(v),M);let O=Promise.resolve();return async K=>{const se=(0,f.isONNXProxy)(),ne=Object.fromEntries(Object.entries(K).map(([U,q])=>[U,(se?q.clone():q).ort_tensor])),W=await(O=X?O.then(()=>b.run(ne)):b.run(ne));return Array.isArray(y)?y.map(U=>new A.Tensor(W[U])):new A.Tensor(W[y])}};class g{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=R([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=R([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=R([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=R([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=R([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=R([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=R([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=R([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}me(g,"session_options",{})},"./src/pipelines.js":(Ie,$,r)=>{r.r($),r.d($,{AudioClassificationPipeline:()=>we,AutomaticSpeechRecognitionPipeline:()=>xe,DepthEstimationPipeline:()=>Ce,DocumentQuestionAnsweringPipeline:()=>ye,FeatureExtractionPipeline:()=>oe,FillMaskPipeline:()=>q,ImageClassificationPipeline:()=>ke,ImageFeatureExtractionPipeline:()=>ve,ImageSegmentationPipeline:()=>Oe,ImageToImagePipeline:()=>de,ImageToTextPipeline:()=>ce,ObjectDetectionPipeline:()=>tt,Pipeline:()=>se,QuestionAnsweringPipeline:()=>U,SummarizationPipeline:()=>S,Text2TextGenerationPipeline:()=>I,TextClassificationPipeline:()=>ne,TextGenerationPipeline:()=>F,TextToAudioPipeline:()=>J,TokenClassificationPipeline:()=>W,TranslationPipeline:()=>w,ZeroShotAudioClassificationPipeline:()=>re,ZeroShotClassificationPipeline:()=>ae,ZeroShotImageClassificationPipeline:()=>Pe,ZeroShotObjectDetectionPipeline:()=>Ge,pipeline:()=>te});var f=r("./src/tokenizers.js"),A=r("./src/models.js"),j=r("./src/models/auto/processing_auto.js");r("./src/base/processing_utils.js");var X=r("./src/utils/generic.js"),R=r("./src/utils/core.js"),g=r("./src/utils/maths.js"),v=r("./src/utils/audio.js"),M=r("./src/utils/tensor.js"),y=r("./src/utils/image.js");async function b(je){return Array.isArray(je)||(je=[je]),await Promise.all(je.map(le=>y.RawImage.read(le)))}async function O(je,le){return Array.isArray(je)||(je=[je]),await Promise.all(je.map(Te=>typeof Te=="string"||Te instanceof URL?(0,v.read_audio)(Te,le):Te instanceof Float64Array?new Float32Array(Te):Te))}function K(je,le){le&&(je=je.map(Re=>Re|0));const[Te,Ue,Ve,Ne]=je;return{xmin:Te,ymin:Ue,xmax:Ve,ymax:Ne}}class se extends X.Callable{constructor({task:le,model:Te,tokenizer:Ue=null,processor:Ve=null}){super(),this.task=le,this.model=Te,this.tokenizer=Ue,this.processor=Ve}async dispose(){await this.model.dispose()}}class ne extends se{constructor(le){super(le)}async _call(le,{top_k:Te=1}={}){const Ue=this.tokenizer(le,{padding:!0,truncation:!0}),Ve=await this.model(Ue),Ne=this.model.config.problem_type==="multi_label_classification"?dt=>dt.sigmoid():dt=>new M.Tensor("float32",(0,g.softmax)(dt.data),dt.dims),Re=this.model.config.id2label,st=[];for(const dt of Ve.logits){const ct=Ne(dt),lt=await(0,M.topk)(ct,Te),ht=lt[0].tolist(),ie=lt[1].tolist().map((H,_e)=>({label:Re?Re[H]:`LABEL_${H}`,score:ht[_e]}));Te===1?st.push(...ie):st.push(ie)}return Array.isArray(le)||Te===1?st:st[0]}}class W extends se{constructor(le){super(le)}async _call(le,{ignore_labels:Te=["O"]}={}){const Ue=Array.isArray(le),Ve=this.tokenizer(Ue?le:[le],{padding:!0,truncation:!0}),Re=(await this.model(Ve)).logits,st=this.model.config.id2label,dt=[];for(let ct=0;ct<Re.dims[0];++ct){const lt=Ve.input_ids[ct],ht=Re[ct],L=[];for(let ie=0;ie<ht.dims[0];++ie){const H=ht[ie],_e=(0,g.max)(H.data)[1],$e=st?st[_e]:`LABEL_${_e}`;if(Te.includes($e))continue;const We=this.tokenizer.decode([lt[ie].item()],{skip_special_tokens:!0});if(We==="")continue;const Je=(0,g.softmax)(H.data);L.push({entity:$e,score:Je[_e],index:ie,word:We})}dt.push(L)}return Ue?dt:dt[0]}}class U extends se{constructor(le){super(le)}async _call(le,Te,{top_k:Ue=1}={}){const Ve=this.tokenizer(le,{text_pair:Te,padding:!0,truncation:!0}),{start_logits:Ne,end_logits:Re}=await this.model(Ve),st=Ve.input_ids.tolist(),dt=Ve.attention_mask.tolist(),ct=this.tokenizer.all_special_ids,lt=[];for(let ht=0;ht<Ne.dims[0];++ht){const L=st[ht],ie=L.findIndex(ut=>ut==this.tokenizer.sep_token_id);dt[ht].map((ut,mt)=>ut==1&&(mt===0||mt>ie&&ct.findIndex(vt=>vt==L[mt])===-1));const H=Ne[ht].tolist(),_e=Re[ht].tolist();for(let ut=1;ut<H.length;++ut)(dt[ht]==0||ut<=ie||ct.findIndex(mt=>mt==L[ut])!==-1)&&(H[ut]=-1/0,_e[ut]=-1/0);const $e=(0,g.softmax)(H).map((ut,mt)=>[ut,mt]),We=(0,g.softmax)(_e).map((ut,mt)=>[ut,mt]);$e[0][0]=0,We[0][0]=0;const Je=(0,R.product)($e,We).filter(ut=>ut[0][1]<=ut[1][1]).map(ut=>[ut[0][1],ut[1][1],ut[0][0]*ut[1][0]]).sort((ut,mt)=>mt[2]-ut[2]);for(let ut=0;ut<Math.min(Je.length,Ue);++ut){const[mt,vt,kt]=Je[ut],It=L.slice(mt,vt+1),os=this.tokenizer.decode(It,{skip_special_tokens:!0});lt.push({answer:os,score:kt})}}return Ue===1?lt[0]:lt}}class q extends se{constructor(le){super(le)}async _call(le,{top_k:Te=5}={}){const Ue=this.tokenizer(le,{padding:!0,truncation:!0}),{logits:Ve}=await this.model(Ue),Ne=[],Re=Ue.input_ids.tolist();for(let st=0;st<Re.length;++st){const dt=Re[st],ct=dt.findIndex(H=>H==this.tokenizer.mask_token_id);if(ct===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const lt=Ve[st][ct],ht=await(0,M.topk)(new M.Tensor("float32",(0,g.softmax)(lt.data),lt.dims),Te),L=ht[0].tolist(),ie=ht[1].tolist();Ne.push(ie.map((H,_e)=>{const $e=dt.slice();return $e[ct]=H,{score:L[_e],token:Number(H),token_str:this.tokenizer.decode([H]),sequence:this.tokenizer.decode($e,{skip_special_tokens:!0})}}))}return Array.isArray(le)?Ne:Ne[0]}}class I extends se{constructor(Te){super(Te);me(this,"_key","generated_text")}async _call(Te,Ue={}){Array.isArray(Te)||(Te=[Te]),this.model.config.prefix&&(Te=Te.map(ct=>this.model.config.prefix+ct));const Ve=this.model.config.task_specific_params;Ve&&Ve[this.task]&&Ve[this.task].prefix&&(Te=Te.map(ct=>Ve[this.task].prefix+ct));const Ne=this.tokenizer,Re={padding:!0,truncation:!0};let st;this instanceof w&&"_build_translation_inputs"in Ne?st=Ne._build_translation_inputs(Te,Re,Ue):st=Ne(Te,Re);const dt=await this.model.generate({...st,...Ue});return Ne.batch_decode(dt,{skip_special_tokens:!0}).map(ct=>({[this._key]:ct}))}}class S extends I{constructor(Te){super(Te);me(this,"_key","summary_text")}}class w extends I{constructor(Te){super(Te);me(this,"_key","translation_text")}}function x(je){return Array.isArray(je)&&je.every(le=>"role"in le&&"content"in le)}class F extends se{constructor(le){super(le)}async _call(le,Te={}){let Ue=!1,Ve=!1,Ne;if(typeof le=="string")Ne=le=[le];else if(Array.isArray(le)&&le.every(ie=>typeof ie=="string"))Ue=!0,Ne=le;else{if(x(le))le=[le];else if(Array.isArray(le)&&le.every(x))Ue=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Ve=!0,Ne=le.map(ie=>this.tokenizer.apply_chat_template(ie,{tokenize:!1,add_generation_prompt:!0}))}const Re=Te.add_special_tokens??!1,st=Ve?!1:Te.return_full_text??!0;this.tokenizer.padding_side="left";const dt=this.tokenizer(Ne,{add_special_tokens:Re,padding:!0,truncation:!0}),ct=await this.model.generate({...dt,...Te}),lt=this.tokenizer.batch_decode(ct,{skip_special_tokens:!0});let ht;!st&&dt.input_ids.dims.at(-1)>0&&(ht=this.tokenizer.batch_decode(dt.input_ids,{skip_special_tokens:!0}).map(ie=>ie.length));const L=Array.from({length:le.length},ie=>[]);for(let ie=0;ie<lt.length;++ie){const H=Math.floor(ie/ct.dims[0]*le.length);ht&&(lt[ie]=lt[ie].slice(ht[H])),L[H].push({generated_text:Ve?[...le[H],{role:"assistant",content:lt[ie]}]:lt[ie]})}return!Ue&&L.length===1?L[0]:L}}class ae extends se{constructor(le){super(le),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Te,Ue])=>[Te.toLowerCase(),Ue])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(le,Te,{hypothesis_template:Ue="This example is {}.",multi_label:Ve=!1}={}){const Ne=Array.isArray(le);Ne||(le=[le]),Array.isArray(Te)||(Te=[Te]);const Re=Te.map(ct=>Ue.replace("{}",ct)),st=Ve||Te.length===1,dt=[];for(const ct of le){const lt=[];for(const ie of Re){const H=this.tokenizer(ct,{text_pair:ie,padding:!0,truncation:!0}),_e=await this.model(H);st?lt.push([_e.logits.data[this.contradiction_id],_e.logits.data[this.entailment_id]]):lt.push(_e.logits.data[this.entailment_id])}const L=(st?lt.map(ie=>(0,g.softmax)(ie)[1]):(0,g.softmax)(lt)).map((ie,H)=>[ie,H]).sort((ie,H)=>H[0]-ie[0]);dt.push({sequence:ct,labels:L.map(ie=>Te[ie[1]]),scores:L.map(ie=>ie[0])})}return Ne?dt:dt[0]}}class oe extends se{constructor(le){super(le)}async _call(le,{pooling:Te="none",normalize:Ue=!1,quantize:Ve=!1,precision:Ne="binary"}={}){const Re=this.tokenizer(le,{padding:!0,truncation:!0}),st=await this.model(Re);let dt=st.last_hidden_state??st.logits??st.token_embeddings;if(Te!=="none")if(Te==="mean")dt=(0,M.mean_pooling)(dt,Re.attention_mask);else if(Te==="cls")dt=dt.slice(null,0);else throw Error(`Pooling method '${Te}' not supported.`);return Ue&&(dt=dt.normalize(2,-1)),Ve&&(dt=(0,M.quantize_embeddings)(dt,Ne)),dt}}class ve extends se{constructor(le){super(le)}async _call(le,{pool:Te=null}={}){const Ue=await b(le),{pixel_values:Ve}=await this.processor(Ue),Ne=await this.model({pixel_values:Ve});let Re;if(Te){if(!("pooler_output"in Ne))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Re=Ne.pooler_output}else Re=Ne.last_hidden_state??Ne.logits??Ne.image_embeds;return Re}}class we extends se{constructor(le){super(le)}async _call(le,{top_k:Te=5}={}){const Ue=this.processor.feature_extractor.config.sampling_rate,Ve=await O(le,Ue),Ne=this.model.config.id2label,Re=[];for(const st of Ve){const dt=await this.processor(st),lt=(await this.model(dt)).logits[0],ht=await(0,M.topk)(new M.Tensor("float32",(0,g.softmax)(lt.data),lt.dims),Te),L=ht[0].tolist(),H=ht[1].tolist().map((_e,$e)=>({label:Ne?Ne[_e]:`LABEL_${_e}`,score:L[$e]}));Re.push(H)}return Array.isArray(le)?Re:Re[0]}}class re extends se{constructor(le){super(le)}async _call(le,Te,{hypothesis_template:Ue="This is a sound of {}."}={}){const Ve=!Array.isArray(le);Ve&&(le=[le]);const Ne=Te.map(lt=>Ue.replace("{}",lt)),Re=this.tokenizer(Ne,{padding:!0,truncation:!0}),st=this.processor.feature_extractor.config.sampling_rate,dt=await O(le,st),ct=[];for(const lt of dt){const ht=await this.processor(lt),L=await this.model({...Re,...ht}),ie=(0,g.softmax)(L.logits_per_audio.data);ct.push([...ie].map((H,_e)=>({score:H,label:Te[_e]})))}return Ve?ct[0]:ct}}class xe extends se{constructor(le){super(le)}async _call(le,Te={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(le,Te);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(le,Te);case"moonshine":return this._call_moonshine(le,Te);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(le,Te){Te.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Te.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Ue=!Array.isArray(le);Ue&&(le=[le]);const Ve=this.processor.feature_extractor.config.sampling_rate,Ne=await O(le,Ve),Re=[];for(const st of Ne){const dt=await this.processor(st),lt=(await this.model(dt)).logits[0],ht=[];for(const ie of lt)ht.push((0,g.max)(ie.data)[1]);const L=this.tokenizer.decode(ht);Re.push({text:L})}return Ue?Re[0]:Re}async _call_whisper(le,Te){const Ue=Te.return_timestamps??!1,Ve=Te.chunk_length_s??0,Ne=Te.force_full_sequences??!1;let Re=Te.stride_length_s??null;const st={...Te};Ue==="word"&&(st.return_token_timestamps=!0,st.return_timestamps=!1);const dt=!Array.isArray(le);dt&&(le=[le]);const ct=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,lt=this.processor.feature_extractor.config.hop_length,ht=this.processor.feature_extractor.config.sampling_rate,L=await O(le,ht),ie=[];for(const H of L){let _e=[];if(Ve>0){if(Re===null)Re=Ve/6;else if(Ve<=Re)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Je=ht*Ve,ut=ht*Re,mt=Je-2*ut;let vt=0;for(;;){const kt=vt+Je,It=H.subarray(vt,kt),os=await this.processor(It),ys=vt===0,Cs=kt>=H.length;if(_e.push({stride:[It.length,ys?0:ut,Cs?0:ut],input_features:os.input_features,is_last:Cs}),Cs)break;vt+=mt}}else _e=[{stride:[H.length,0,0],input_features:(await this.processor(H)).input_features,is_last:!0}];for(const Je of _e){st.num_frames=Math.floor(Je.stride[0]/lt);const ut=await this.model.generate({inputs:Je.input_features,...st});Ue==="word"?(Je.tokens=ut.sequences.tolist()[0],Je.token_timestamps=ut.token_timestamps.tolist()[0].map(mt=>(0,g.round)(mt,2))):Je.tokens=ut[0].tolist(),Je.stride=Je.stride.map(mt=>mt/ht)}const[$e,We]=this.tokenizer._decode_asr(_e,{time_precision:ct,return_timestamps:Ue,force_full_sequences:Ne});ie.push({text:$e,...We})}return dt?ie[0]:ie}async _call_moonshine(le,Te){const Ue=!Array.isArray(le);Ue&&(le=[le]);const Ve=this.processor.feature_extractor.config.sampling_rate,Ne=await O(le,Ve),Re=[];for(const st of Ne){const dt=await this.processor(st),ct=Math.floor(st.length/Ve)*6,lt=await this.model.generate({max_new_tokens:ct,...Te,...dt}),ht=this.processor.batch_decode(lt,{skip_special_tokens:!0})[0];Re.push({text:ht})}return Ue?Re[0]:Re}}class ce extends se{constructor(le){super(le)}async _call(le,Te={}){const Ue=Array.isArray(le),Ve=await b(le),{pixel_values:Ne}=await this.processor(Ve),Re=[];for(const st of Ne){st.dims=[1,...st.dims];const dt=await this.model.generate({inputs:st,...Te}),ct=this.tokenizer.batch_decode(dt,{skip_special_tokens:!0}).map(lt=>({generated_text:lt.trim()}));Re.push(ct)}return Ue?Re:Re[0]}}class ke extends se{constructor(le){super(le)}async _call(le,{top_k:Te=5}={}){const Ue=await b(le),{pixel_values:Ve}=await this.processor(Ue),Ne=await this.model({pixel_values:Ve}),Re=this.model.config.id2label,st=[];for(const dt of Ne.logits){const ct=await(0,M.topk)(new M.Tensor("float32",(0,g.softmax)(dt.data),dt.dims),Te),lt=ct[0].tolist(),L=ct[1].tolist().map((ie,H)=>({label:Re?Re[ie]:`LABEL_${ie}`,score:lt[H]}));st.push(L)}return Array.isArray(le)?st:st[0]}}class Oe extends se{constructor(le){super(le),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(le,{threshold:Te=.5,mask_threshold:Ue=.5,overlap_mask_area_threshold:Ve=.8,label_ids_to_fuse:Ne=null,target_sizes:Re=null,subtask:st=null}={}){if(Array.isArray(le)&&le.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const ct=await b(le),lt=ct.map(We=>[We.height,We.width]),{pixel_values:ht,pixel_mask:L}=await this.processor(ct),ie=await this.model({pixel_values:ht,pixel_mask:L});let H=null;if(st!==null)H=this.subtasks_mapping[st];else for(let[We,Je]of Object.entries(this.subtasks_mapping))if(Je in this.processor.image_processor){H=this.processor.image_processor[Je].bind(this.processor.image_processor),st=We;break}const _e=this.model.config.id2label,$e=[];if(st==="panoptic"||st==="instance"){const We=H(ie,Te,Ue,Ve,Ne,Re??lt)[0],Je=We.segmentation;for(const ut of We.segments_info){const mt=new Uint8ClampedArray(Je.data.length);for(let kt=0;kt<Je.data.length;++kt)Je.data[kt]===ut.id&&(mt[kt]=255);const vt=new y.RawImage(mt,Je.dims[1],Je.dims[0],1);$e.push({score:ut.score,label:_e[ut.label_id],mask:vt})}}else if(st==="semantic"){const{segmentation:We,labels:Je}=H(ie,Re??lt)[0];for(const ut of Je){const mt=new Uint8ClampedArray(We.data.length);for(let kt=0;kt<We.data.length;++kt)We.data[kt]===ut&&(mt[kt]=255);const vt=new y.RawImage(mt,We.dims[1],We.dims[0],1);$e.push({score:null,label:_e[ut],mask:vt})}}else throw Error(`Subtask ${st} not supported.`);return $e}}class Pe extends se{constructor(le){super(le)}async _call(le,Te,{hypothesis_template:Ue="This is a photo of {}"}={}){const Ve=Array.isArray(le),Ne=await b(le),Re=Te.map(L=>Ue.replace("{}",L)),st=this.tokenizer(Re,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:dt}=await this.processor(Ne),ct=await this.model({...st,pixel_values:dt}),lt=this.model.config.model_type==="siglip"?L=>L.sigmoid().data:L=>(0,g.softmax)(L.data),ht=[];for(const L of ct.logits_per_image){const H=[...lt(L)].map((_e,$e)=>({score:_e,label:Te[$e]}));H.sort((_e,$e)=>$e.score-_e.score),ht.push(H)}return Ve?ht:ht[0]}}class tt extends se{constructor(le){super(le)}async _call(le,{threshold:Te=.9,percentage:Ue=!1}={}){const Ve=Array.isArray(le);if(Ve&&le.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ne=await b(le),Re=Ue?null:Ne.map(ie=>[ie.height,ie.width]),{pixel_values:st,pixel_mask:dt}=await this.processor(Ne),ct=await this.model({pixel_values:st,pixel_mask:dt}),lt=this.processor.image_processor.post_process_object_detection(ct,Te,Re),ht=this.model.config.id2label,L=lt.map(ie=>ie.boxes.map((H,_e)=>({score:ie.scores[_e],label:ht[ie.classes[_e]],box:K(H,!Ue)})));return Ve?L:L[0]}}class Ge extends se{constructor(le){super(le)}async _call(le,Te,{threshold:Ue=.1,top_k:Ve=null,percentage:Ne=!1}={}){const Re=Array.isArray(le),st=await b(le),dt=this.tokenizer(Te,{padding:!0,truncation:!0}),ct=await this.processor(st),lt=[];for(let ht=0;ht<st.length;++ht){const L=st[ht],ie=Ne?null:[[L.height,L.width]],H=ct.pixel_values[ht].unsqueeze_(0),_e=await this.model({...dt,pixel_values:H});let $e;if("post_process_grounded_object_detection"in this.processor){const We=this.processor.post_process_grounded_object_detection(_e,dt.input_ids,{box_threshold:Ue,text_threshold:Ue,target_sizes:ie})[0];$e=We.boxes.map((Je,ut)=>({score:We.scores[ut],label:We.labels[ut],box:K(Je,!Ne)}))}else{const We=this.processor.image_processor.post_process_object_detection(_e,Ue,ie,!0)[0];$e=We.boxes.map((Je,ut)=>({score:We.scores[ut],label:Te[We.classes[ut]],box:K(Je,!Ne)}))}$e.sort((We,Je)=>Je.score-We.score),Ve!==null&&($e=$e.slice(0,Ve)),lt.push($e)}return Re?lt:lt[0]}}class ye extends se{constructor(le){super(le)}async _call(le,Te,Ue={}){const Ve=(await b(le))[0],{pixel_values:Ne}=await this.processor(Ve),Re=`<s_docvqa><s_question>${Te}</s_question><s_answer>`,st=this.tokenizer(Re,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,dt=await this.model.generate({inputs:Ne,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:st,...Ue}),lt=this.tokenizer.batch_decode(dt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let ht=null;return lt&&lt.length>=2&&(ht=lt[1].trim()),[{answer:ht}]}}class J extends se{constructor(Te){super(Te);me(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=Te.vocoder??null}async _call(Te,{speaker_embeddings:Ue=null}={}){return this.processor?this._call_text_to_spectrogram(Te,{speaker_embeddings:Ue}):this._call_text_to_waveform(Te)}async _call_text_to_waveform(Te){const Ue=this.tokenizer(Te,{padding:!0,truncation:!0}),{waveform:Ve}=await this.model(Ue),Ne=this.model.config.sampling_rate;return new v.RawAudio(Ve.data,Ne)}async _call_text_to_spectrogram(Te,{speaker_embeddings:Ue}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await A.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Ue=="string"||Ue instanceof URL)&&(Ue=new Float32Array(await(await fetch(Ue)).arrayBuffer())),Ue instanceof Float32Array)Ue=new M.Tensor("float32",Ue,[1,Ue.length]);else if(!(Ue instanceof M.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Ve}=this.tokenizer(Te,{padding:!0,truncation:!0}),{waveform:Ne}=await this.model.generate_speech(Ve,Ue,{vocoder:this.vocoder}),Re=this.processor.feature_extractor.config.sampling_rate;return new v.RawAudio(Ne.data,Re)}}class de extends se{constructor(le){super(le)}async _call(le){const Te=await b(le),Ue=await this.processor(Te),Ve=await this.model(Ue),Ne=[];for(const Re of Ve.reconstruction){const st=Re.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ne.push(y.RawImage.fromTensor(st))}return Ne.length>1?Ne:Ne[0]}}class Ce extends se{constructor(le){super(le)}async _call(le){const Te=await b(le),Ue=await this.processor(Te),{predicted_depth:Ve}=await this.model(Ue),Ne=[];for(let Re=0;Re<Te.length;++Re){const st=Ve[Re],[dt,ct]=st.dims.slice(-2),[lt,ht]=Te[Re].size,L=(await(0,M.interpolate_4d)(st.view(1,1,dt,ct),{size:[ht,lt],mode:"bilinear"})).view(ht,lt),ie=L.min().item(),H=L.max().item(),_e=L.sub(ie).div_(H-ie).mul_(255).to("uint8").unsqueeze(0),$e=y.RawImage.fromTensor(_e);Ne.push({predicted_depth:L,depth:$e})}return Ne.length>1?Ne:Ne[0]}}const Be=Object.freeze({"text-classification":{tokenizer:f.AutoTokenizer,pipeline:ne,model:A.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:f.AutoTokenizer,pipeline:W,model:A.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:f.AutoTokenizer,pipeline:U,model:A.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:f.AutoTokenizer,pipeline:q,model:A.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:f.AutoTokenizer,pipeline:S,model:A.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:f.AutoTokenizer,pipeline:w,model:A.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:f.AutoTokenizer,pipeline:I,model:A.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:f.AutoTokenizer,pipeline:F,model:A.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:f.AutoTokenizer,pipeline:ae,model:A.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:we,model:A.AutoModelForAudioClassification,processor:j.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:f.AutoTokenizer,pipeline:re,model:A.AutoModel,processor:j.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:f.AutoTokenizer,pipeline:xe,model:[A.AutoModelForSpeechSeq2Seq,A.AutoModelForCTC],processor:j.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:f.AutoTokenizer,pipeline:J,model:[A.AutoModelForTextToWaveform,A.AutoModelForTextToSpectrogram],processor:[j.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:f.AutoTokenizer,pipeline:ce,model:A.AutoModelForVision2Seq,processor:j.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ke,model:A.AutoModelForImageClassification,processor:j.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Oe,model:[A.AutoModelForImageSegmentation,A.AutoModelForSemanticSegmentation,A.AutoModelForUniversalSegmentation],processor:j.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:f.AutoTokenizer,pipeline:Pe,model:A.AutoModel,processor:j.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:tt,model:A.AutoModelForObjectDetection,processor:j.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:f.AutoTokenizer,pipeline:Ge,model:A.AutoModelForZeroShotObjectDetection,processor:j.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:f.AutoTokenizer,pipeline:ye,model:A.AutoModelForDocumentQuestionAnswering,processor:j.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:de,model:A.AutoModelForImageToImage,processor:j.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Ce,model:A.AutoModelForDepthEstimation,processor:j.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:f.AutoTokenizer,pipeline:oe,model:A.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:j.AutoProcessor,pipeline:ve,model:[A.AutoModelForImageFeatureExtraction,A.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Ze=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function te(je,le=null,{progress_callback:Te=null,config:Ue=null,cache_dir:Ve=null,local_files_only:Ne=!1,revision:Re="main",device:st=null,dtype:dt=null,model_file_name:ct=null,session_options:lt={}}={}){je=Ze[je]??je;const ht=Be[je.split("_",1)[0]];if(!ht)throw Error(`Unsupported pipeline: ${je}. Must be one of [${Object.keys(Be)}]`);le||(le=ht.default.model,console.log(`No model specified. Using default model: "${le}".`));const L={progress_callback:Te,config:Ue,cache_dir:Ve,local_files_only:Ne,revision:Re,device:st,dtype:dt,model_file_name:ct,session_options:lt},ie=new Map([["tokenizer",ht.tokenizer],["model",ht.model],["processor",ht.processor]]),H=await Ke(ie,le,L);H.task=je,(0,R.dispatchCallback)(Te,{status:"ready",task:je,model:le});const _e=ht.pipeline;return new _e(H)}async function Ke(je,le,Te){const Ue=Object.create(null),Ve=[];for(const[Ne,Re]of je.entries()){if(!Re)continue;let st;Array.isArray(Re)?st=new Promise(async(dt,ct)=>{var ht,L;let lt;for(const ie of Re){if(ie===null){dt(null);return}try{dt(await ie.from_pretrained(le,Te));return}catch(H){if((ht=H.message)!=null&&ht.includes("Unsupported model type"))lt=H;else if((L=H.message)!=null&&L.includes("Could not locate file"))lt=H;else{ct(H);return}}}ct(lt)}):st=Re.from_pretrained(le,Te),Ue[Ne]=st,Ve.push(st)}await Promise.all(Ve);for(const[Ne,Re]of Object.entries(Ue))Ue[Ne]=await Re;return Ue}},"./src/tokenizers.js":(Ie,$,r)=>{r.r($),r.d($,{AlbertTokenizer:()=>Sr,AutoTokenizer:()=>as,BartTokenizer:()=>Ar,BertTokenizer:()=>Xr,BlenderbotSmallTokenizer:()=>Ln,BlenderbotTokenizer:()=>Dn,BloomTokenizer:()=>Er,CLIPTokenizer:()=>yn,CamembertTokenizer:()=>ot,CodeGenTokenizer:()=>wn,CodeLlamaTokenizer:()=>jr,CohereTokenizer:()=>vn,ConvBertTokenizer:()=>Br,DebertaTokenizer:()=>dr,DebertaV2Tokenizer:()=>Jr,DistilBertTokenizer:()=>ar,ElectraTokenizer:()=>Dt,EsmTokenizer:()=>Ur,FalconTokenizer:()=>An,GPT2Tokenizer:()=>Nr,GPTNeoXTokenizer:()=>On,GemmaTokenizer:()=>oo,Grok1Tokenizer:()=>Vr,HerbertTokenizer:()=>Ir,LlamaTokenizer:()=>fn,M2M100Tokenizer:()=>gn,MBart50Tokenizer:()=>lr,MBartTokenizer:()=>Ms,MPNetTokenizer:()=>In,MarianTokenizer:()=>zt,MgpstrTokenizer:()=>Rn,MobileBertTokenizer:()=>$r,NllbTokenizer:()=>ur,NougatTokenizer:()=>Wr,PreTrainedTokenizer:()=>Nt,Qwen2Tokenizer:()=>Fn,RoFormerTokenizer:()=>Rr,RobertaTokenizer:()=>Os,SiglipTokenizer:()=>Mn,SpeechT5Tokenizer:()=>zn,SqueezeBertTokenizer:()=>Yr,T5Tokenizer:()=>Vs,TokenizerModel:()=>ve,VitsTokenizer:()=>Bn,Wav2Vec2CTCTokenizer:()=>bn,WhisperTokenizer:()=>Zr,XLMRobertaTokenizer:()=>no,XLMTokenizer:()=>Tt,is_chinese_char:()=>q});var f=r("./src/utils/generic.js"),A=r("./src/utils/core.js"),j=r("./src/utils/hub.js"),X=r("./src/utils/maths.js"),R=r("./src/utils/tensor.js"),g=r("./src/utils/data-structures.js"),v=r("./node_modules/@huggingface/jinja/dist/index.js"),M=r("./src/models/whisper/common_whisper.js");async function y(Ee,P){const Q=await Promise.all([(0,j.getModelJSON)(Ee,"tokenizer.json",!0,P),(0,j.getModelJSON)(Ee,"tokenizer_config.json",!0,P)]);return P.legacy!==null&&(Q[1].legacy=P.legacy),Q}function b(Ee,P){const Q=[];let ue=0;for(const be of Ee.matchAll(P)){const Se=be[0];ue<be.index&&Q.push(Ee.slice(ue,be.index)),Se.length>0&&Q.push(Se),ue=be.index+Se.length}return ue<Ee.length&&Q.push(Ee.slice(ue)),Q}function O(Ee,P=!0){if(Ee.Regex!==void 0){let Q=Ee.Regex.replace(/\\([#&~])/g,"$1");for(const[ue,be]of ae)Q=Q.replaceAll(ue,be);return new RegExp(Q,"gu")}else if(Ee.String!==void 0){const Q=(0,A.escapeRegExp)(Ee.String);return new RegExp(P?Q:`(${Q})`,"gu")}else return console.warn("Unknown pattern type:",Ee),null}function K(Ee){return new Map(Object.entries(Ee))}function se(Ee){const P=Ee.dims;switch(P.length){case 1:return Ee.tolist();case 2:if(P[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return Ee.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${P.length}.`)}}function ne(Ee){return Ee.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function W(Ee){return Ee.replace(new RegExp("\\p{M}","gu"),"")}function U(Ee){return W(Ee.toLowerCase())}function q(Ee){return Ee>=19968&&Ee<=40959||Ee>=13312&&Ee<=19903||Ee>=131072&&Ee<=173791||Ee>=173824&&Ee<=177983||Ee>=177984&&Ee<=178207||Ee>=178208&&Ee<=183983||Ee>=63744&&Ee<=64255||Ee>=194560&&Ee<=195103}function I(Ee,P,Q){const ue=[];let be=0;for(;be<Ee.length;){if(ue.push(Ee[be]),(P.get(Ee[be])??Q)!==Q){++be;continue}for(;++be<Ee.length&&(P.get(Ee[be])??Q)===Q;)P.get(ue.at(-1))!==Q&&(ue[ue.length-1]+=Ee[be])}return ue}function S(Ee){return Ee.match(/\S+/g)||[]}const w="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",x=new RegExp(`^[${w}]+$`,"gu"),F=".,!?…。，、।۔،",ae=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${F}])]+`,` ?[^\\s${F}]+`]]);class oe{constructor(P){this.content=P.content,this.id=P.id,this.single_word=P.single_word??!1,this.lstrip=P.lstrip??!1,this.rstrip=P.rstrip??!1,this.special=P.special??!1,this.normalized=P.normalized??null}}class ve extends f.Callable{constructor(P){super(),this.config=P,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(P,...Q){switch(P.type){case"WordPiece":return new we(P);case"Unigram":return new re(P,...Q);case"BPE":return new ke(P);default:if(P.vocab)return Array.isArray(P.vocab)?new re(P,...Q):typeof P.vocab=="object"&&P.continuing_subword_prefix&&P.unk_token?new we(P):new Oe(P,...Q);throw new Error(`Unknown TokenizerModel type: ${P.type}`)}}_call(P){return P=this.encode(P),this.fuse_unk&&(P=I(P,this.tokens_to_ids,this.unk_token_id)),P}encode(P){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(P){return P.map(Q=>this.tokens_to_ids.get(Q)??this.unk_token_id)}convert_ids_to_tokens(P){return P.map(Q=>this.vocab[Q]??this.unk_token)}}class we extends ve{constructor(P){super(P),this.tokens_to_ids=K(P.vocab),this.unk_token_id=this.tokens_to_ids.get(P.unk_token),this.unk_token=P.unk_token,this.max_input_chars_per_word=P.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[Q,ue]of this.tokens_to_ids)this.vocab[ue]=Q}encode(P){const Q=[];for(const ue of P){const be=[...ue];if(be.length>this.max_input_chars_per_word){Q.push(this.unk_token);continue}let Se=!1,Qe=0;const pt=[];for(;Qe<be.length;){let gt=be.length,_t=null;for(;Qe<gt;){let xt=be.slice(Qe,gt).join("");if(Qe>0&&(xt=this.config.continuing_subword_prefix+xt),this.tokens_to_ids.has(xt)){_t=xt;break}--gt}if(_t===null){Se=!0;break}pt.push(_t),Qe=gt}Se?Q.push(this.unk_token):Q.push(...pt)}return Q}}class re extends ve{constructor(P,Q){super(P);const ue=P.vocab.length;this.vocab=new Array(ue),this.scores=new Array(ue);for(let be=0;be<ue;++be)[this.vocab[be],this.scores[be]]=P.vocab[be];this.unk_token_id=P.unk_id,this.unk_token=this.vocab[P.unk_id],this.tokens_to_ids=new Map(this.vocab.map((be,Se)=>[be,Se])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=Q.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,X.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new g.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(P){const Q=P.chars,ue=1;let be=0;for(;be<Q.length;){let Se=!1;const Qe=Q.slice(be).join(""),pt=this.trie.commonPrefixSearch(Qe);for(const gt of pt){const _t=this.tokens_to_ids.get(gt),xt=this.scores[_t],Kt=(0,A.len)(gt);P.insert(be,Kt,xt,_t),!Se&&Kt===ue&&(Se=!0)}Se||P.insert(be,ue,this.unk_score,this.unk_token_id),be+=ue}}tokenize(P){const Q=new g.TokenLattice(P,this.bos_token_id,this.eos_token_id);return this.populateNodes(Q),Q.tokens()}encode(P){const Q=[];for(const ue of P){const be=this.tokenize(ue);Q.push(...be)}return Q}}const xe=(()=>{const Ee=[...Array.from({length:94},(be,Se)=>Se+33),...Array.from({length:12},(be,Se)=>Se+161),...Array.from({length:82},(be,Se)=>Se+174)],P=Ee.slice();let Q=0;for(let be=0;be<256;++be)Ee.includes(be)||(Ee.push(be),P.push(256+Q),Q+=1);const ue=P.map(be=>String.fromCharCode(be));return Object.fromEntries(Ee.map((be,Se)=>[be,ue[Se]]))})(),ce=(0,A.reverseDictionary)(xe);class ke extends ve{constructor(P){super(P),this.tokens_to_ids=K(P.vocab),this.unk_token_id=this.tokens_to_ids.get(P.unk_token),this.unk_token=P.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ue,be]of this.tokens_to_ids)this.vocab[be]=ue;const Q=Array.isArray(P.merges[0]);this.merges=Q?P.merges:P.merges.map(ue=>ue.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ue,be)=>[JSON.stringify(ue),be])),this.end_of_word_suffix=P.end_of_word_suffix,this.continuing_subword_suffix=P.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(P){if(P.length===0)return[];const Q=this.cache.get(P);if(Q!==void 0)return Q;const ue=Array.from(P);this.end_of_word_suffix&&(ue[ue.length-1]+=this.end_of_word_suffix);let be=[];if(ue.length>1){const Se=new g.PriorityQueue((gt,_t)=>gt.score<_t.score);let Qe={token:ue[0],bias:0,prev:null,next:null},pt=Qe;for(let gt=1;gt<ue.length;++gt){const _t={bias:gt/ue.length,token:ue[gt],prev:pt,next:null};pt.next=_t,this._add_node(Se,pt),pt=_t}for(;!Se.isEmpty();){const gt=Se.pop();if(gt.deleted||!gt.next||gt.next.deleted)continue;if(gt.deleted=!0,gt.next.deleted=!0,gt.prev){const xt={...gt.prev};gt.prev.deleted=!0,gt.prev=xt,xt.prev?xt.prev.next=xt:Qe=xt}const _t={token:gt.token+gt.next.token,bias:gt.bias,prev:gt.prev,next:gt.next.next};_t.prev?(_t.prev.next=_t,this._add_node(Se,_t.prev)):Qe=_t,_t.next&&(_t.next.prev=_t,this._add_node(Se,_t))}for(let gt=Qe;gt!==null;gt=gt.next)be.push(gt.token)}else be=ue;if(this.continuing_subword_suffix)for(let Se=0;Se<be.length-1;++Se)be[Se]+=this.continuing_subword_suffix;return this.cache.set(P,be),be}_add_node(P,Q){const ue=this.bpe_ranks.get(JSON.stringify([Q.token,Q.next.token]));ue!==void 0&&(Q.score=ue+Q.bias,P.push(Q))}encode(P){const Q=[];for(const ue of P){if(this.ignore_merges&&this.tokens_to_ids.has(ue)){Q.push(ue);continue}const be=this.bpe(ue);for(const Se of be)if(this.tokens_to_ids.has(Se))Q.push(Se);else if(this.byte_fallback){const Qe=Array.from(this.text_encoder.encode(Se)).map(pt=>`<0x${pt.toString(16).toUpperCase().padStart(2,"0")}>`);Qe.every(pt=>this.tokens_to_ids.has(pt))?Q.push(...Qe):Q.push(this.unk_token)}else Q.push(this.unk_token)}return Q}}class Oe extends ve{constructor(P,Q){super(P),this.tokens_to_ids=K(Q.target_lang?P.vocab[Q.target_lang]:P.vocab),this.bos_token=Q.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=Q.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=Q.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=Q.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ue,be]of this.tokens_to_ids)this.vocab[be]=ue}encode(P){return P}}class Pe extends f.Callable{constructor(P){super(),this.config=P}static fromConfig(P){if(P===null)return null;switch(P.type){case"BertNormalizer":return new Ke(P);case"Precompiled":return new ys(P);case"Sequence":return new te(P);case"Replace":return new tt(P);case"NFC":return new Ge(P);case"NFKC":return new ye(P);case"NFKD":return new J(P);case"Strip":return new de(P);case"StripAccents":return new Ce(P);case"Lowercase":return new Be(P);case"Prepend":return new Ze(P);default:throw new Error(`Unknown Normalizer type: ${P.type}`)}}normalize(P){throw Error("normalize should be implemented in subclass.")}_call(P){return this.normalize(P)}}class tt extends Pe{normalize(P){const Q=O(this.config.pattern);return Q===null?P:P.replaceAll(Q,this.config.content)}}class Ge extends Pe{normalize(P){return P=P.normalize("NFC"),P}}class ye extends Pe{normalize(P){return P=P.normalize("NFKC"),P}}class J extends Pe{normalize(P){return P=P.normalize("NFKD"),P}}class de extends Pe{normalize(P){return this.config.strip_left&&this.config.strip_right?P=P.trim():(this.config.strip_left&&(P=P.trimStart()),this.config.strip_right&&(P=P.trimEnd())),P}}class Ce extends Pe{normalize(P){return P=W(P),P}}class Be extends Pe{normalize(P){return P=P.toLowerCase(),P}}class Ze extends Pe{normalize(P){return P=this.config.prepend+P,P}}class te extends Pe{constructor(P){super(P),this.normalizers=P.normalizers.map(Q=>Pe.fromConfig(Q))}normalize(P){return this.normalizers.reduce((Q,ue)=>ue.normalize(Q),P)}}class Ke extends Pe{_tokenize_chinese_chars(P){const Q=[];for(let ue=0;ue<P.length;++ue){const be=P[ue],Se=be.charCodeAt(0);q(Se)?(Q.push(" "),Q.push(be),Q.push(" ")):Q.push(be)}return Q.join("")}stripAccents(P){return P.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(P){switch(P){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(P)}}_clean_text(P){const Q=[];for(const ue of P){const be=ue.charCodeAt(0);be===0||be===65533||this._is_control(ue)||(/^\s$/.test(ue)?Q.push(" "):Q.push(ue))}return Q.join("")}normalize(P){return this.config.clean_text&&(P=this._clean_text(P)),this.config.handle_chinese_chars&&(P=this._tokenize_chinese_chars(P)),this.config.lowercase?(P=P.toLowerCase(),this.config.strip_accents!==!1&&(P=this.stripAccents(P))):this.config.strip_accents&&(P=this.stripAccents(P)),P}}class je extends f.Callable{static fromConfig(P){if(P===null)return null;switch(P.type){case"BertPreTokenizer":return new le(P);case"Sequence":return new Cs(P);case"Whitespace":return new Ds(P);case"WhitespaceSplit":return new sr(P);case"Metaspace":return new It(P);case"ByteLevel":return new Te(P);case"Split":return new Ue(P);case"Punctuation":return new Ve(P);case"Digits":return new Ne(P);case"Replace":return new kr(P);default:throw new Error(`Unknown PreTokenizer type: ${P.type}`)}}pre_tokenize_text(P,Q){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(P,Q){return(Array.isArray(P)?P.map(ue=>this.pre_tokenize_text(ue,Q)):this.pre_tokenize_text(P,Q)).flat()}_call(P,Q){return this.pre_tokenize(P,Q)}}class le extends je{constructor(P){super(),this.pattern=new RegExp(`[^\\s${w}]+|[${w}]`,"gu")}pre_tokenize_text(P,Q){return P.trim().match(this.pattern)||[]}}class Te extends je{constructor(P){super(),this.config=P,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=xe,this.text_encoder=new TextEncoder}pre_tokenize_text(P,Q){return this.add_prefix_space&&!P.startsWith(" ")&&(P=" "+P),(this.use_regex?P.match(this.pattern)||[]:[P]).map(be=>Array.from(this.text_encoder.encode(be),Se=>this.byte_encoder[Se]).join(""))}}class Ue extends je{constructor(P){super(),this.config=P,this.pattern=O(this.config.pattern,this.config.invert)}pre_tokenize_text(P,Q){var ue;return this.pattern===null?[]:this.config.invert?P.match(this.pattern)||[]:((ue=this.config.behavior)==null?void 0:ue.toLowerCase())==="removed"?P.split(this.pattern).filter(be=>be):b(P,this.pattern)}}class Ve extends je{constructor(P){super(),this.config=P,this.pattern=new RegExp(`[^${w}]+|[${w}]+`,"gu")}pre_tokenize_text(P,Q){return P.match(this.pattern)||[]}}class Ne extends je{constructor(P){super(),this.config=P;const Q=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(Q,"gu")}pre_tokenize_text(P,Q){return P.match(this.pattern)||[]}}class Re extends f.Callable{constructor(P){super(),this.config=P}static fromConfig(P){if(P===null)return null;switch(P.type){case"TemplateProcessing":return new ct(P);case"ByteLevel":return new lt(P);case"RobertaProcessing":return new dt(P);case"BertProcessing":return new st(P);case"Sequence":return new ht(P);default:throw new Error(`Unknown PostProcessor type: ${P.type}`)}}post_process(P,...Q){throw Error("post_process should be implemented in subclass.")}_call(P,...Q){return this.post_process(P,...Q)}}class st extends Re{constructor(P){super(P),this.cls=P.cls[0],this.sep=P.sep[0]}post_process(P,Q=null,{add_special_tokens:ue=!0}={}){ue&&(P=(0,A.mergeArrays)([this.cls],P,[this.sep]));let be=new Array(P.length).fill(0);if(Q!==null){const Se=ue&&this instanceof dt?[this.sep]:[],Qe=ue?[this.sep]:[];P=(0,A.mergeArrays)(P,Se,Q,Qe),be=(0,A.mergeArrays)(be,new Array(Q.length+Se.length+Qe.length).fill(1))}return{tokens:P,token_type_ids:be}}}class dt extends st{}class ct extends Re{constructor(P){super(P),this.single=P.single,this.pair=P.pair}post_process(P,Q=null,{add_special_tokens:ue=!0}={}){const be=Q===null?this.single:this.pair;let Se=[],Qe=[];for(const pt of be)"SpecialToken"in pt?ue&&(Se.push(pt.SpecialToken.id),Qe.push(pt.SpecialToken.type_id)):"Sequence"in pt&&(pt.Sequence.id==="A"?(Se=(0,A.mergeArrays)(Se,P),Qe=(0,A.mergeArrays)(Qe,new Array(P.length).fill(pt.Sequence.type_id))):pt.Sequence.id==="B"&&(Se=(0,A.mergeArrays)(Se,Q),Qe=(0,A.mergeArrays)(Qe,new Array(Q.length).fill(pt.Sequence.type_id))));return{tokens:Se,token_type_ids:Qe}}}class lt extends Re{post_process(P,Q=null){return Q&&(P=(0,A.mergeArrays)(P,Q)),{tokens:P}}}class ht extends Re{constructor(P){super(P),this.processors=P.processors.map(Q=>Re.fromConfig(Q))}post_process(P,Q=null,ue={}){let be;for(const Se of this.processors)if(Se instanceof lt)P=Se.post_process(P).tokens,Q&&(Q=Se.post_process(Q).tokens);else{const Qe=Se.post_process(P,Q,ue);P=Qe.tokens,be=Qe.token_type_ids}return{tokens:P,token_type_ids:be}}}class L extends f.Callable{constructor(P){super(),this.config=P,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=P.trim_offsets}static fromConfig(P){if(P===null)return null;switch(P.type){case"WordPiece":return new We(P);case"Metaspace":return new os(P);case"ByteLevel":return new Je(P);case"Replace":return new ie(P);case"ByteFallback":return new H(P);case"Fuse":return new _e(P);case"Strip":return new $e(P);case"Sequence":return new mt(P);case"CTC":return new ut(P);case"BPEDecoder":return new vt(P);default:throw new Error(`Unknown Decoder type: ${P.type}`)}}_call(P){return this.decode(P)}decode(P){return this.decode_chain(P).join("")}decode_chain(P){throw Error("`decode_chain` should be implemented in subclass.")}}class ie extends L{decode_chain(P){const Q=O(this.config.pattern);return Q===null?P:P.map(ue=>ue.replaceAll(Q,this.config.content))}}class H extends L{constructor(P){super(P),this.text_decoder=new TextDecoder}decode_chain(P){const Q=[];let ue=[];for(const be of P){let Se=null;if(be.length===6&&be.startsWith("<0x")&&be.endsWith(">")){const Qe=parseInt(be.slice(3,5),16);isNaN(Qe)||(Se=Qe)}if(Se!==null)ue.push(Se);else{if(ue.length>0){const Qe=this.text_decoder.decode(Uint8Array.from(ue));Q.push(Qe),ue=[]}Q.push(be)}}if(ue.length>0){const be=this.text_decoder.decode(Uint8Array.from(ue));Q.push(be),ue=[]}return Q}}class _e extends L{decode_chain(P){return[P.join("")]}}class $e extends L{constructor(P){super(P),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(P){return P.map(Q=>{let ue=0;for(let Se=0;Se<this.start&&Q[Se]===this.content;++Se){ue=Se+1;continue}let be=Q.length;for(let Se=0;Se<this.stop;++Se){const Qe=Q.length-Se-1;if(Q[Qe]===this.content){be=Qe;continue}else break}return Q.slice(ue,be)})}}class We extends L{constructor(P){super(P),this.cleanup=P.cleanup}decode_chain(P){return P.map((Q,ue)=>(ue!==0&&(Q.startsWith(this.config.prefix)?Q=Q.replace(this.config.prefix,""):Q=" "+Q),this.cleanup&&(Q=ne(Q)),Q))}}class Je extends L{constructor(P){super(P),this.byte_decoder=ce,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(P){const Q=P.join(""),ue=new Uint8Array([...Q].map(Se=>this.byte_decoder[Se]));return this.text_decoder.decode(ue)}decode_chain(P){const Q=[];let ue=[];for(const be of P)this.added_tokens.find(Se=>Se.content===be)!==void 0?(ue.length>0&&(Q.push(this.convert_tokens_to_string(ue)),ue=[]),Q.push(be)):ue.push(be);return ue.length>0&&Q.push(this.convert_tokens_to_string(ue)),Q}}class ut extends L{constructor(P){super(P),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(P){if(P.length===0)return"";const Q=[P[0]];for(let Se=1;Se<P.length;++Se)P[Se]!==Q.at(-1)&&Q.push(P[Se]);let be=Q.filter(Se=>Se!==this.pad_token).join("");return this.cleanup&&(be=ne(be).replaceAll(this.word_delimiter_token," ").trim()),be}decode_chain(P){return[this.convert_tokens_to_string(P)]}}class mt extends L{constructor(P){super(P),this.decoders=P.decoders.map(Q=>L.fromConfig(Q))}decode_chain(P){return this.decoders.reduce((Q,ue)=>ue.decode_chain(Q),P)}}class vt extends L{constructor(P){super(P),this.suffix=this.config.suffix}decode_chain(P){return P.map((Q,ue)=>Q.replaceAll(this.suffix,ue===P.length-1?"":" "))}}class kt extends L{decode_chain(P){let Q="";for(let ue=1;ue<P.length;ue+=2)Q+=P[ue];return[Q]}}class It extends je{constructor(P){super(),this.addPrefixSpace=P.add_prefix_space,this.replacement=P.replacement,this.strRep=P.str_rep||this.replacement,this.prepend_scheme=P.prepend_scheme??"always"}pre_tokenize_text(P,{section_index:Q=void 0}={}){let ue=P.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ue.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&Q===0)&&(ue=this.strRep+ue),[ue]}}class os extends L{constructor(P){super(P),this.addPrefixSpace=P.add_prefix_space,this.replacement=P.replacement}decode_chain(P){const Q=[];for(let ue=0;ue<P.length;++ue){let be=P[ue].replaceAll(this.replacement," ");this.addPrefixSpace&&ue==0&&be.startsWith(" ")&&(be=be.substring(1)),Q.push(be)}return Q}}class ys extends Pe{constructor(P){super(P),this.charsmap=P.precompiled_charsmap}normalize(P){return P=P.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),P=P.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),P.includes("～")?P=P.split("～").map(ue=>ue.normalize("NFKC")).join("～"):P=P.normalize("NFKC"),P}}class Cs extends je{constructor(P){super(),this.tokenizers=P.pretokenizers.map(Q=>je.fromConfig(Q))}pre_tokenize_text(P,Q){return this.tokenizers.reduce((ue,be)=>be.pre_tokenize(ue,Q),[P])}}class Ds extends je{constructor(P){super()}pre_tokenize_text(P,Q){return P.match(/\w+|[^\w\s]+/g)||[]}}class sr extends je{constructor(P){super()}pre_tokenize_text(P,Q){return S(P)}}class kr extends je{constructor(P){super(),this.config=P,this.pattern=O(this.config.pattern),this.content=this.config.content}pre_tokenize_text(P,Q){return this.pattern===null?[P]:[P.replaceAll(this.pattern,this.config.content)]}}const Qr=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Us(Ee,P,Q,ue){for(const be of Object.keys(Ee)){const Se=P-Ee[be].length,Qe=Q(be),pt=new Array(Se).fill(Qe);Ee[be]=ue==="right"?(0,A.mergeArrays)(Ee[be],pt):(0,A.mergeArrays)(pt,Ee[be])}}function Tr(Ee,P){for(const Q of Object.keys(Ee))Ee[Q].length=P}class Nt extends f.Callable{constructor(Q,ue){super();me(this,"return_token_type_ids",!1);me(this,"padding_side","right");this._tokenizer_config=ue,this.normalizer=Pe.fromConfig(Q.normalizer),this.pre_tokenizer=je.fromConfig(Q.pre_tokenizer),this.model=ve.fromConfig(Q.model,ue),this.post_processor=Re.fromConfig(Q.post_processor),this.decoder=L.fromConfig(Q.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const be of Q.added_tokens){const Se=new oe(be);this.added_tokens.push(Se),this.model.tokens_to_ids.set(Se.content,Se.id),this.model.vocab[Se.id]=Se.content,Se.special&&(this.special_tokens.push(Se.content),this.all_special_ids.push(Se.id))}if(this.additional_special_tokens=ue.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((be,Se)=>Se.content.length-be.content.length).map(be=>`${be.lstrip?"\\s*":""}(${(0,A.escapeRegExp)(be.content)})${be.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=ue.model_max_length,this.remove_space=ue.remove_space,this.clean_up_tokenization_spaces=ue.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=ue.do_lowercase_and_remove_accent??!1,ue.padding_side&&(this.padding_side=ue.padding_side),this.legacy=!1,this.chat_template=ue.chat_template??null,Array.isArray(this.chat_template)){const be=Object.create(null);for(const{name:Se,template:Qe}of this.chat_template){if(typeof Se!="string"||typeof Qe!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');be[Se]=Qe}this.chat_template=be}this._compiled_template_cache=new Map}getToken(...Q){for(const ue of Q){const be=this._tokenizer_config[ue];if(be)if(typeof be=="object"){if(be.__type==="AddedToken")return be.content;throw Error(`Unknown token: ${be}`)}else return be}return null}static async from_pretrained(Q,{progress_callback:ue=null,config:be=null,cache_dir:Se=null,local_files_only:Qe=!1,revision:pt="main",legacy:gt=null}={}){const _t=await y(Q,{progress_callback:ue,config:be,cache_dir:Se,local_files_only:Qe,revision:pt,legacy:gt});return new this(..._t)}_call(Q,{text_pair:ue=null,add_special_tokens:be=!0,padding:Se=!1,truncation:Qe=null,max_length:pt=null,return_tensor:gt=!0,return_token_type_ids:_t=null}={}){const xt=Array.isArray(Q);let Kt;if(xt){if(Q.length===0)throw Error("text array must be non-empty");if(ue!==null){if(Array.isArray(ue)){if(Q.length!==ue.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Kt=Q.map((us,Fs)=>this._encode_plus(us,{text_pair:ue[Fs],add_special_tokens:be,return_token_type_ids:_t}))}else Kt=Q.map(us=>this._encode_plus(us,{add_special_tokens:be,return_token_type_ids:_t}))}else{if(Q==null)throw Error("text may not be null or undefined");if(Array.isArray(ue))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Kt=[this._encode_plus(Q,{text_pair:ue,add_special_tokens:be,return_token_type_ids:_t})]}if(pt===null?Se==="max_length"?pt=this.model_max_length:pt=(0,X.max)(Kt.map(us=>us.input_ids.length))[0]:Qe||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),pt=Math.min(pt,this.model_max_length??1/0),Se||Qe)for(let us=0;us<Kt.length;++us)Kt[us].input_ids.length!==pt&&(Kt[us].input_ids.length>pt?Qe&&Tr(Kt[us],pt):Se&&Us(Kt[us],pt,Fs=>Fs==="input_ids"?this.pad_token_id:0,this.padding_side));const ms={};if(gt){if(!(Se&&Qe)&&Kt.some(Fs=>{var Bt;for(const rs of Object.keys(Fs))if(Fs[rs].length!==((Bt=Kt[0][rs])==null?void 0:Bt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const us=[Kt.length,Kt[0].input_ids.length];for(const Fs of Object.keys(Kt[0]))ms[Fs]=new R.Tensor("int64",BigInt64Array.from(Kt.flatMap(Bt=>Bt[Fs]).map(BigInt)),us)}else{for(const us of Object.keys(Kt[0]))ms[us]=Kt.map(Fs=>Fs[us]);if(!xt)for(const us of Object.keys(ms))ms[us]=ms[us][0]}return ms}_encode_text(Q){return Q===null?null:(this.added_tokens_regex?Q.split(this.added_tokens_regex).filter(Se=>Se):[Q]).map((Se,Qe)=>{if(this.added_tokens.find(gt=>gt.content===Se)!==void 0)return Se;{if(this.remove_space===!0&&(Se=Se.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Se=U(Se)),this.normalizer!==null&&(Se=this.normalizer(Se)),Se.length===0)return[];const gt=this.pre_tokenizer!==null?this.pre_tokenizer(Se,{section_index:Qe}):[Se];return this.model(gt)}}).flat()}_encode_plus(Q,{text_pair:ue=null,add_special_tokens:be=!0,return_token_type_ids:Se=null}={}){const{tokens:Qe,token_type_ids:pt}=this._tokenize_helper(Q,{pair:ue,add_special_tokens:be}),gt=this.model.convert_tokens_to_ids(Qe),_t={input_ids:gt,attention_mask:new Array(gt.length).fill(1)};return(Se??this.return_token_type_ids)&&pt&&(_t.token_type_ids=pt),_t}_tokenize_helper(Q,{pair:ue=null,add_special_tokens:be=!1}={}){const Se=this._encode_text(Q),Qe=this._encode_text(ue);return this.post_processor?this.post_processor(Se,Qe,{add_special_tokens:be}):{tokens:(0,A.mergeArrays)(Se??[],Qe??[])}}tokenize(Q,{pair:ue=null,add_special_tokens:be=!1}={}){return this._tokenize_helper(Q,{pair:ue,add_special_tokens:be}).tokens}encode(Q,{text_pair:ue=null,add_special_tokens:be=!0,return_token_type_ids:Se=null}={}){return this._encode_plus(Q,{text_pair:ue,add_special_tokens:be,return_token_type_ids:Se}).input_ids}batch_decode(Q,ue={}){return Q instanceof R.Tensor&&(Q=Q.tolist()),Q.map(be=>this.decode(be,ue))}decode(Q,ue={}){if(Q instanceof R.Tensor&&(Q=se(Q)),!Array.isArray(Q)||Q.length===0||!(0,A.isIntegralNumber)(Q[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(Q,ue)}decode_single(Q,{skip_special_tokens:ue=!1,clean_up_tokenization_spaces:be=null}){let Se=this.model.convert_ids_to_tokens(Q);ue&&(Se=Se.filter(pt=>!this.special_tokens.includes(pt)));let Qe=this.decoder?this.decoder(Se):Se.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Qe=Qe.replaceAll(this.decoder.end_of_word_suffix," "),ue&&(Qe=Qe.trim())),(be??this.clean_up_tokenization_spaces)&&(Qe=ne(Qe)),Qe}get_chat_template({chat_template:Q=null,tools:ue=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const be=this.chat_template;if(Q!==null&&Object.hasOwn(be,Q))Q=be[Q];else if(Q===null)if(ue!==null&&"tool_use"in be)Q=be.tool_use;else if("default"in be)Q=be.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(be).sort()}.`)}else if(Q===null)if(this.chat_template)Q=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return Q}apply_chat_template(Q,{tools:ue=null,documents:be=null,chat_template:Se=null,add_generation_prompt:Qe=!1,tokenize:pt=!0,padding:gt=!1,truncation:_t=!1,max_length:xt=null,return_tensor:Kt=!0,return_dict:ms=!1,tokenizer_kwargs:us={},...Fs}={}){if(Se=this.get_chat_template({chat_template:Se,tools:ue}),typeof Se!="string")throw Error(`chat_template must be a string, but got ${typeof Se}`);let Bt=this._compiled_template_cache.get(Se);Bt===void 0&&(Bt=new v.Template(Se),this._compiled_template_cache.set(Se,Bt));const rs=Object.create(null);for(const Ws of Qr){const ze=this.getToken(Ws);ze&&(rs[Ws]=ze)}const rr=Bt.render({messages:Q,add_generation_prompt:Qe,tools:ue,documents:be,...rs,...Fs});if(pt){const Ws=this._call(rr,{add_special_tokens:!1,padding:gt,truncation:_t,max_length:xt,return_tensor:Kt,...us});return ms?Ws:Ws.input_ids}return rr}}class Xr extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class Sr extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class $r extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class Yr extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class dr extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class Jr extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class Ir extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class Br extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class Rr extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class ar extends Nt{}class ot extends Nt{}class Tt extends Nt{constructor(Q,ue){super(Q,ue);me(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Dt extends Nt{constructor(){super(...arguments);me(this,"return_token_type_ids",!0)}}class Vs extends Nt{}class Nr extends Nt{}class Ar extends Nt{}class Ms extends Nt{constructor(P,Q){super(P,Q),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ue=>this.languageRegex.test(ue)),this.lang_to_token=ue=>ue}_build_translation_inputs(P,Q,ue){return mr(this,P,Q,ue)}}class lr extends Ms{}class Os extends Nt{}class Er extends Nt{}const es="▁";class fn extends Nt{constructor(Q,ue){super(Q,ue);me(this,"padding_side","left");this.legacy=ue.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new It({replacement:es,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(Q){if(Q===null)return null;if(this.legacy||Q.length===0)return super._encode_text(Q);let ue=super._encode_text(es+Q.replaceAll(es," "));return ue.length>1&&ue[0]===es&&this.special_tokens.includes(ue[1])&&(ue=ue.slice(1)),ue}}class jr extends Nt{}class no extends Nt{}class In extends Nt{}class An extends Nt{}class On extends Nt{}class Ur extends Nt{}class Fn extends Nt{}class oo extends Nt{}class Vr extends Nt{}function mr(Ee,P,Q,ue){if(!("language_codes"in Ee)||!Array.isArray(Ee.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in Ee)||!(Ee.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in Ee)||typeof Ee.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const be=ue.src_lang,Se=ue.tgt_lang;if(!Ee.language_codes.includes(Se))throw new Error(`Target language code "${Se}" is not valid. Must be one of: {${Ee.language_codes.join(", ")}}`);if(be!==void 0){if(!Ee.language_codes.includes(be))throw new Error(`Source language code "${be}" is not valid. Must be one of: {${Ee.language_codes.join(", ")}}`);for(const Qe of Ee.post_processor.config.single)if("SpecialToken"in Qe&&Ee.languageRegex.test(Qe.SpecialToken.id)){Qe.SpecialToken.id=Ee.lang_to_token(be);break}}return ue.forced_bos_token_id=Ee.model.convert_tokens_to_ids([Ee.lang_to_token(Se)])[0],Ee._call(P,Q)}class ur extends Nt{constructor(P,Q){super(P,Q),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ue=>this.languageRegex.test(ue)),this.lang_to_token=ue=>ue}_build_translation_inputs(P,Q,ue){return mr(this,P,Q,ue)}}class gn extends Nt{constructor(P,Q){super(P,Q),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ue=>this.languageRegex.test(ue)).map(ue=>ue.slice(2,-2)),this.lang_to_token=ue=>`__${ue}__`}_build_translation_inputs(P,Q,ue){return mr(this,P,Q,ue)}}class Zr extends Nt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(P,{return_timestamps:Q=!1,return_language:ue=!1,time_precision:be=null,force_full_sequences:Se=!0}={}){if(be===null)throw Error("Must specify time_precision");let Qe=null;const pt=Q==="word";function gt(){return{language:Qe,timestamp:[null,null],text:""}}const _t=[];let xt=gt(),Kt=0;const ms=this.timestamp_begin,Fs=ms+1500;let Bt=[],rs=[],rr=!1,Ws=null;const ze=new Set(this.all_special_ids);for(const ks of P){const Xs=ks.tokens,Ot=pt?ks.token_timestamps:null;let or=null,_r=ms;if("stride"in ks){const[yt,qt,Ls]=ks.stride;if(Kt-=qt,Ws=yt-Ls,qt&&(_r=qt/be+ms),Ls)for(let $s=Xs.length-1;$s>=0;--$s){const Gs=Number(Xs[$s]);if(Gs>=ms){if(or!==null&&(Gs-ms)*be<Ws)break;or=Gs}}}let _s=[],Ss=[];for(let yt=0;yt<Xs.length;++yt){const qt=Number(Xs[yt]);if(ze.has(qt)){const Ls=this.decode([qt]),$s=M.WHISPER_LANGUAGE_MAPPING.get(Ls.slice(2,-2));if($s!==void 0){if(Qe!==null&&$s!==Qe&&!Q){Bt.push(_s);const Gs=this.findLongestCommonSequence(Bt)[0],$t=this.decode(Gs);xt.text=$t,_t.push(xt),Bt=[],_s=[],xt=gt()}Qe=xt.language=$s}}else if(qt>=ms&&qt<=Fs){const Ls=(qt-ms)*be+Kt,$s=(0,X.round)(Ls,2);if(or!==null&&qt>=or)rr=!0;else if(rr||Bt.length>0&&qt<_r)rr=!1;else if(xt.timestamp[0]===null)xt.timestamp[0]=$s;else if($s!==xt.timestamp[0]){xt.timestamp[1]=$s,Bt.push(_s),pt&&rs.push(Ss);const[Gs,$t]=this.findLongestCommonSequence(Bt,rs),en=this.decode(Gs);xt.text=en,pt&&(xt.words=this.collateWordTimestamps(Gs,$t,Qe)),_t.push(xt),Bt=[],_s=[],rs=[],Ss=[],xt=gt()}}else if(_s.push(qt),pt){let Ls=(0,X.round)(Ot[yt]+Kt,2),$s;if(yt+1<Ot.length){$s=(0,X.round)(Ot[yt+1]+Kt,2);const Gs=this.decode([qt]);x.test(Gs)&&($s=(0,X.round)(Math.min(Ls+be,$s),2))}else $s=null;Ss.push([Ls,$s])}}if("stride"in ks){const[yt,qt,Ls]=ks.stride;Kt+=yt-Ls}_s.length>0?(Bt.push(_s),pt&&rs.push(Ss)):Bt.every(yt=>yt.length===0)&&(xt=gt(),Bt=[],_s=[],rs=[],Ss=[])}if(Bt.length>0){if(Se&&Q)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[ks,Xs]=this.findLongestCommonSequence(Bt,rs),Ot=this.decode(ks);xt.text=Ot,pt&&(xt.words=this.collateWordTimestamps(ks,Xs,Qe)),_t.push(xt)}let Js=Object.create(null);const Or=_t.map(ks=>ks.text).join("");if(Q||ue){for(let ks=0;ks<_t.length;++ks){const Xs=_t[ks];Q||delete Xs.timestamp,ue||delete Xs.language}if(pt){const ks=[];for(const Xs of _t)for(const Ot of Xs.words)ks.push(Ot);Js={chunks:ks}}else Js={chunks:_t}}return[Or,Js]}findLongestCommonSequence(P,Q=null){let ue=P[0],be=ue.length,Se=[];const Qe=Array.isArray(Q)&&Q.length>0;let pt=Qe?[]:null,gt=Qe?Q[0]:null;for(let _t=1;_t<P.length;++_t){const xt=P[_t];let Kt=0,ms=[be,be,0,0];const us=xt.length;for(let Js=1;Js<be+us;++Js){const Or=Math.max(0,be-Js),ks=Math.min(be,be+us-Js),Xs=ue.slice(Or,ks),Ot=Math.max(0,Js-be),or=Math.min(us,Js),_r=xt.slice(Ot,or);if(Xs.length!==_r.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let _s;Qe?_s=Xs.filter((qt,Ls)=>qt===_r[Ls]&&gt[Or+Ls]<=Q[_t][Ot+Ls]).length:_s=Xs.filter((qt,Ls)=>qt===_r[Ls]).length;const Ss=Js/1e4,yt=_s/Js+Ss;_s>1&&yt>Kt&&(Kt=yt,ms=[Or,ks,Ot,or])}const[Fs,Bt,rs,rr]=ms,Ws=Math.floor((Bt+Fs)/2),ze=Math.floor((rr+rs)/2);Se.push(...ue.slice(0,Ws)),ue=xt.slice(ze),be=ue.length,Qe&&(pt.push(...gt.slice(0,Ws)),gt=Q[_t].slice(ze))}return Se.push(...ue),Qe?(pt.push(...gt),[Se,pt]):[Se,[]]}collateWordTimestamps(P,Q,ue){const[be,Se,Qe]=this.combineTokensIntoWords(P,ue),pt=[];for(let gt=0;gt<be.length;++gt){const _t=Qe[gt];pt.push({text:be[gt],timestamp:[Q[_t.at(0)][0],Q[_t.at(-1)][1]]})}return pt}combineTokensIntoWords(P,Q,ue=`"'“¡¿([{-`,be=`"'.。,，!！?？:：”)]}、`){Q=Q??"english";let Se,Qe,pt;return["chinese","japanese","thai","lao","myanmar"].includes(Q)?[Se,Qe,pt]=this.splitTokensOnUnicode(P):[Se,Qe,pt]=this.splitTokensOnSpaces(P),this.mergePunctuations(Se,Qe,pt,ue,be)}decode(P,Q){let ue;return Q!=null&&Q.decode_with_timestamps?(P instanceof R.Tensor&&(P=se(P)),ue=this.decodeWithTimestamps(P,Q)):ue=super.decode(P,Q),ue}decodeWithTimestamps(P,Q){const ue=(Q==null?void 0:Q.time_precision)??.02,be=Array.from(this.all_special_ids).at(-1)+1;let Se=[[]];for(let Qe of P)if(Qe=Number(Qe),Qe>=be){const pt=((Qe-be)*ue).toFixed(2);Se.push(`<|${pt}|>`),Se.push([])}else Se[Se.length-1].push(Qe);return Se=Se.map(Qe=>typeof Qe=="string"?Qe:super.decode(Qe,Q)),Se.join("")}splitTokensOnUnicode(P){const Q=this.decode(P,{decode_with_timestamps:!0}),ue="�",be=[],Se=[],Qe=[];let pt=[],gt=[],_t=0;for(let xt=0;xt<P.length;++xt){const Kt=P[xt];pt.push(Kt),gt.push(xt);const ms=this.decode(pt,{decode_with_timestamps:!0});(!ms.includes(ue)||Q[_t+ms.indexOf(ue)]===ue)&&(be.push(ms),Se.push(pt),Qe.push(gt),pt=[],gt=[],_t+=ms.length)}return[be,Se,Qe]}splitTokensOnSpaces(P){const[Q,ue,be]=this.splitTokensOnUnicode(P),Se=[],Qe=[],pt=[],gt=new RegExp(`^[${w}]$`,"gu");for(let _t=0;_t<Q.length;++_t){const xt=Q[_t],Kt=ue[_t],ms=be[_t],us=Kt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Fs=xt.startsWith(" "),Bt=xt.trim(),rs=gt.test(Bt);if(us||Fs||rs||Se.length===0)Se.push(xt),Qe.push(Kt),pt.push(ms);else{const rr=Se.length-1;Se[rr]+=xt,Qe[rr].push(...Kt),pt[rr].push(...ms)}}return[Se,Qe,pt]}mergePunctuations(P,Q,ue,be,Se){const Qe=structuredClone(P),pt=structuredClone(Q),gt=structuredClone(ue);let _t=Qe.length-2,xt=Qe.length-1;for(;_t>=0;)Qe[_t].startsWith(" ")&&be.includes(Qe[_t].trim())?(Qe[xt]=Qe[_t]+Qe[xt],pt[xt]=(0,A.mergeArrays)(pt[_t],pt[xt]),gt[xt]=(0,A.mergeArrays)(gt[_t],gt[xt]),Qe[_t]="",pt[_t]=[],gt[_t]=[]):xt=_t,--_t;for(_t=0,xt=1;xt<Qe.length;)!Qe[_t].endsWith(" ")&&Se.includes(Qe[xt])?(Qe[_t]+=Qe[xt],pt[_t]=(0,A.mergeArrays)(pt[_t],pt[xt]),gt[_t]=(0,A.mergeArrays)(gt[_t],gt[xt]),Qe[xt]="",pt[xt]=[],gt[xt]=[]):_t=xt,++xt;return[Qe.filter(Kt=>Kt),pt.filter(Kt=>Kt.length>0),gt.filter(Kt=>Kt.length>0)]}}class wn extends Nt{}class yn extends Nt{}class Mn extends Nt{}class zt extends Nt{constructor(P,Q){super(P,Q),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ue=>this.languageRegex.test(ue)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(P){if(P===null)return null;const[Q,...ue]=P.trim().split(this.languageRegex);if(ue.length===0)return super._encode_text(Q);if(ue.length===2){const[be,Se]=ue;return this.supported_language_codes.includes(be)||console.warn(`Unsupported language code "${be}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,A.mergeArrays)([be],super._encode_text(Se))}}}class bn extends Nt{}class Dn extends Nt{}class Ln extends Nt{}class zn extends Nt{}class Wr extends Nt{}class Bn extends Nt{constructor(P,Q){super(P,Q),this.decoder=new kt({})}}class vn extends Nt{}class Rn extends Nt{}class as{static async from_pretrained(P,{progress_callback:Q=null,config:ue=null,cache_dir:be=null,local_files_only:Se=!1,revision:Qe="main",legacy:pt=null}={}){var ms;const[gt,_t]=await y(P,{progress_callback:Q,config:ue,cache_dir:be,local_files_only:Se,revision:Qe,legacy:pt}),xt=((ms=_t.tokenizer_class)==null?void 0:ms.replace(/Fast$/,""))??"PreTrainedTokenizer";let Kt=this.TOKENIZER_CLASS_MAPPING[xt];return Kt||(console.warn(`Unknown tokenizer class "${xt}", attempting to construct from base class.`),Kt=Nt),new Kt(gt,_t)}}me(as,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:Vs,DistilBertTokenizer:ar,CamembertTokenizer:ot,DebertaTokenizer:dr,DebertaV2Tokenizer:Jr,BertTokenizer:Xr,HerbertTokenizer:Ir,ConvBertTokenizer:Br,RoFormerTokenizer:Rr,XLMTokenizer:Tt,ElectraTokenizer:Dt,MobileBertTokenizer:$r,SqueezeBertTokenizer:Yr,AlbertTokenizer:Sr,GPT2Tokenizer:Nr,BartTokenizer:Ar,MBartTokenizer:Ms,MBart50Tokenizer:lr,RobertaTokenizer:Os,WhisperTokenizer:Zr,CodeGenTokenizer:wn,CLIPTokenizer:yn,SiglipTokenizer:Mn,MarianTokenizer:zt,BloomTokenizer:Er,NllbTokenizer:ur,M2M100Tokenizer:gn,LlamaTokenizer:fn,CodeLlamaTokenizer:jr,XLMRobertaTokenizer:no,MPNetTokenizer:In,FalconTokenizer:An,GPTNeoXTokenizer:On,EsmTokenizer:Ur,Wav2Vec2CTCTokenizer:bn,BlenderbotTokenizer:Dn,BlenderbotSmallTokenizer:Ln,SpeechT5Tokenizer:zn,NougatTokenizer:Wr,VitsTokenizer:Bn,Qwen2Tokenizer:Fn,GemmaTokenizer:oo,Grok1Tokenizer:Vr,CohereTokenizer:vn,MgpstrTokenizer:Rn,PreTrainedTokenizer:Nt})},"./src/utils/audio.js":(Ie,$,r)=>{r.r($),r.d($,{RawAudio:()=>we,hamming:()=>b,hanning:()=>y,mel_filter_bank:()=>q,read_audio:()=>v,spectrogram:()=>F,window_function:()=>ae});var f=r("./src/utils/hub.js"),A=r("./src/utils/maths.js"),j=r("./src/utils/core.js"),X=r("./src/env.js"),R=r("?7a2c"),g=r("./src/utils/tensor.js");async function v(re,xe){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const ce=await(await(0,f.getFile)(re)).arrayBuffer(),ke=new AudioContext({sampleRate:xe});typeof xe>"u"&&console.warn(`No sampling rate provided, using default of ${ke.sampleRate}Hz.`);const Oe=await ke.decodeAudioData(ce);let Pe;if(Oe.numberOfChannels===2){const tt=Math.sqrt(2),Ge=Oe.getChannelData(0),ye=Oe.getChannelData(1);Pe=new Float32Array(Ge.length);for(let J=0;J<Oe.length;++J)Pe[J]=tt*(Ge[J]+ye[J])/2}else Pe=Oe.getChannelData(0);return Pe}function M(re,xe){if(re<1)return new Float64Array;if(re===1)return new Float64Array([1]);const ce=1-xe,ke=2*Math.PI/(re-1),Oe=new Float64Array(re);for(let Pe=0;Pe<re;++Pe)Oe[Pe]=xe-ce*Math.cos(Pe*ke);return Oe}function y(re){return M(re,.5)}function b(re){return M(re,.54)}const O={htk:re=>2595*Math.log10(1+re/700),kaldi:re=>1127*Math.log(1+re/700),slaney:(re,xe=1e3,ce=15,ke=27/Math.log(6.4))=>re>=xe?ce+Math.log(re/xe)*ke:3*re/200};function K(re,xe="htk"){const ce=O[xe];if(!ce)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof re=="number"?ce(re):re.map(ke=>ce(ke))}const se={htk:re=>700*(10**(re/2595)-1),kaldi:re=>700*(Math.exp(re/1127)-1),slaney:(re,xe=1e3,ce=15,ke=Math.log(6.4)/27)=>re>=ce?xe*Math.exp(ke*(re-ce)):200*re/3};function ne(re,xe="htk"){const ce=se[xe];if(!ce)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof re=="number"?ce(re):re.map(ke=>ce(ke))}function W(re,xe){const ce=Float64Array.from({length:xe.length-1},(tt,Ge)=>xe[Ge+1]-xe[Ge]),ke=Array.from({length:re.length},()=>new Array(xe.length));for(let tt=0;tt<re.length;++tt){const Ge=ke[tt];for(let ye=0;ye<xe.length;++ye)Ge[ye]=xe[ye]-re[tt]}const Oe=xe.length-2,Pe=Array.from({length:Oe},()=>new Array(re.length));for(let tt=0;tt<re.length;++tt){const Ge=ke[tt];for(let ye=0;ye<Oe;++ye){const J=-Ge[ye]/ce[ye],de=Ge[ye+2]/ce[ye+1];Pe[ye][tt]=Math.max(0,Math.min(J,de))}}return Pe}function U(re,xe,ce){const ke=(xe-re)/(ce-1);return Float64Array.from({length:ce},(Oe,Pe)=>re+ke*Pe)}function q(re,xe,ce,ke,Oe,Pe=null,tt="htk",Ge=!1){if(Pe!==null&&Pe!=="slaney")throw new Error('norm must be one of null or "slaney"');const ye=K(ce,tt),J=K(ke,tt),de=U(ye,J,xe+2);let Ce=ne(de,tt),Be;if(Ge){const te=Oe/(re*2);Be=K(Float64Array.from({length:re},(Ke,je)=>je*te),tt),Ce=de}else Be=U(0,Math.floor(Oe/2),re);const Ze=W(Be,Ce);if(Pe!==null&&Pe==="slaney")for(let te=0;te<xe;++te){const Ke=Ze[te],je=2/(Ce[te+2]-Ce[te]);for(let le=0;le<re;++le)Ke[le]*=je}return Ze}function I(re,xe,ce){const ke=new re.constructor(re.length+xe+ce),Oe=re.length-1;for(let Pe=0;Pe<re.length;++Pe)ke[xe+Pe]=re[Pe];for(let Pe=1;Pe<=xe;++Pe)ke[xe-Pe]=re[(0,j.calculateReflectOffset)(Pe,Oe)];for(let Pe=1;Pe<=ce;++Pe)ke[Oe+xe+Pe]=re[(0,j.calculateReflectOffset)(Oe-Pe,Oe)];return ke}function S(re,xe,ce,ke,Oe){if(ce<=0)throw new Error("reference must be greater than zero");if(ke<=0)throw new Error("min_value must be greater than zero");ce=Math.max(ke,ce);const Pe=Math.log10(ce);for(let tt=0;tt<re.length;++tt)re[tt]=xe*Math.log10(Math.max(ke,re[tt])-Pe);if(Oe!==null){if(Oe<=0)throw new Error("db_range must be greater than zero");const tt=(0,A.max)(re)[0]-Oe;for(let Ge=0;Ge<re.length;++Ge)re[Ge]=Math.max(re[Ge],tt)}return re}function w(re,xe=1,ce=1e-5,ke=null){return S(re,20,xe,ce,ke)}function x(re,xe=1,ce=1e-10,ke=null){return S(re,10,xe,ce,ke)}async function F(re,xe,ce,ke,{fft_length:Oe=null,power:Pe=1,center:tt=!0,pad_mode:Ge="reflect",onesided:ye=!0,preemphasis:J=null,mel_filters:de=null,mel_floor:Ce=1e-10,log_mel:Be=null,reference:Ze=1,min_value:te=1e-10,db_range:Ke=null,remove_dc_offset:je=null,min_num_frames:le=null,max_num_frames:Te=null,do_pad:Ue=!0,transpose:Ve=!1}={}){const Ne=xe.length;if(Oe===null&&(Oe=ce),ce>Oe)throw Error(`frame_length (${ce}) may not be larger than fft_length (${Oe})`);if(Ne!==ce)throw new Error(`Length of the window (${Ne}) must equal frame_length (${ce})`);if(ke<=0)throw new Error("hop_length must be greater than zero");if(Pe===null&&de!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(tt){if(Ge!=="reflect")throw new Error(`pad_mode="${Ge}" not implemented yet.`);const We=Math.floor((Oe-1)/2)+1;re=I(re,We,We)}let Re=Math.floor(1+Math.floor((re.length-ce)/ke));le!==null&&Re<le&&(Re=le);const st=ye?Math.floor(Oe/2)+1:Oe;let dt=Re,ct=Re;Te!==null&&(Te>Re?Ue&&(ct=Te):ct=dt=Te);const lt=new A.FFT(Oe),ht=new Float64Array(Oe),L=new Float64Array(lt.outputBufferSize),ie=new Float32Array(st*ct);for(let We=0;We<dt;++We){const Je=We*ke,ut=Math.min(re.length-Je,ce);ut!==ce&&ht.fill(0,0,ce);for(let mt=0;mt<ut;++mt)ht[mt]=re[Je+mt];if(je){let mt=0;for(let kt=0;kt<ut;++kt)mt+=ht[kt];const vt=mt/ut;for(let kt=0;kt<ut;++kt)ht[kt]-=vt}if(J!==null){for(let mt=ut-1;mt>=1;--mt)ht[mt]-=J*ht[mt-1];ht[0]*=1-J}for(let mt=0;mt<xe.length;++mt)ht[mt]*=xe[mt];lt.realTransform(L,ht);for(let mt=0;mt<st;++mt){const vt=mt<<1;ie[mt*ct+We]=L[vt]**2+L[vt+1]**2}}if(Pe!==null&&Pe!==2){const We=2/Pe;for(let Je=0;Je<ie.length;++Je)ie[Je]**=We}const H=de.length;let _e=await(0,g.matmul)(new g.Tensor("float32",de.flat(),[H,st]),new g.Tensor("float32",ie,[st,ct]));Ve&&(_e=_e.transpose(1,0));const $e=_e.data;for(let We=0;We<$e.length;++We)$e[We]=Math.max(Ce,$e[We]);if(Pe!==null&&Be!==null){const We=Math.min($e.length,dt*H);switch(Be){case"log":for(let Je=0;Je<We;++Je)$e[Je]=Math.log($e[Je]);break;case"log10":for(let Je=0;Je<We;++Je)$e[Je]=Math.log10($e[Je]);break;case"dB":if(Pe===1)w($e,Ze,te,Ke);else if(Pe===2)x($e,Ze,te,Ke);else throw new Error(`Cannot use log_mel option '${Be}' with power ${Pe}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Be}'`)}}return _e}function ae(re,xe,{periodic:ce=!0,frame_length:ke=null,center:Oe=!0}={}){const Pe=ce?re+1:re;let tt;switch(xe){case"boxcar":tt=new Float64Array(Pe).fill(1);break;case"hann":case"hann_window":tt=y(Pe);break;case"hamming":tt=b(Pe);break;case"povey":tt=y(Pe).map(Ge=>Math.pow(Ge,.85));break;default:throw new Error(`Unknown window type ${xe}.`)}if(ce&&(tt=tt.subarray(0,re)),ke===null)return tt;if(re>ke)throw new Error(`Length of the window (${re}) may not be larger than frame_length (${ke})`);return tt}function oe(re,xe){let ce=44;const ke=new ArrayBuffer(ce+re.length*4),Oe=new DataView(ke);ve(Oe,0,"RIFF"),Oe.setUint32(4,36+re.length*4,!0),ve(Oe,8,"WAVE"),ve(Oe,12,"fmt "),Oe.setUint32(16,16,!0),Oe.setUint16(20,3,!0),Oe.setUint16(22,1,!0),Oe.setUint32(24,xe,!0),Oe.setUint32(28,xe*4,!0),Oe.setUint16(32,4,!0),Oe.setUint16(34,32,!0),ve(Oe,36,"data"),Oe.setUint32(40,re.length*4,!0);for(let Pe=0;Pe<re.length;++Pe,ce+=4)Oe.setFloat32(ce,re[Pe],!0);return ke}function ve(re,xe,ce){for(let ke=0;ke<ce.length;++ke)re.setUint8(xe+ke,ce.charCodeAt(ke))}class we{constructor(xe,ce){this.audio=xe,this.sampling_rate=ce}toWav(){return oe(this.audio,this.sampling_rate)}toBlob(){const xe=this.toWav();return new Blob([xe],{type:"audio/wav"})}async save(xe){let ce;if(X.apis.IS_BROWSER_ENV){if(X.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");ce=j.saveBlob}else if(X.apis.IS_FS_AVAILABLE)ce=async(ke,Oe)=>{let Pe=await Oe.arrayBuffer();R.writeFileSync(ke,Buffer.from(Pe))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await ce(xe,this.toBlob())}}},"./src/utils/constants.js":(Ie,$,r)=>{r.r($),r.d($,{CHAT_TEMPLATE_NAME:()=>g,CONFIG_NAME:()=>A,FEATURE_EXTRACTOR_NAME:()=>j,GENERATION_CONFIG_NAME:()=>v,GITHUB_ISSUE_URL:()=>f,IMAGE_PROCESSOR_NAME:()=>X,PROCESSOR_NAME:()=>R});const f="https://github.com/huggingface/transformers.js/issues/new/choose",A="config.json",j="preprocessor_config.json",X=j,R="processor_config.json",g="chat_template.json",v="generation_config.json"},"./src/utils/core.js":(Ie,$,r)=>{r.r($),r.d($,{calculateDimensions:()=>v,calculateReflectOffset:()=>O,count:()=>W,dispatchCallback:()=>f,escapeRegExp:()=>j,isIntegralNumber:()=>R,isNullishDimension:()=>g,isTypedArray:()=>X,len:()=>ne,mergeArrays:()=>y,pick:()=>se,pop:()=>M,product:()=>b,reverseDictionary:()=>A,saveBlob:()=>K});function f(U,q){U&&U(q)}function A(U){return Object.fromEntries(Object.entries(U).map(([q,I])=>[I,q]))}function j(U){return U.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function X(U){var q,I,S;return((S=(I=(q=U==null?void 0:U.prototype)==null?void 0:q.__proto__)==null?void 0:I.constructor)==null?void 0:S.name)==="TypedArray"}function R(U){return Number.isInteger(U)||typeof U=="bigint"}function g(U){return U==null||U===-1}function v(U){const q=[];let I=U;for(;Array.isArray(I);)q.push(I.length),I=I[0];return q}function M(U,q,I=void 0){const S=U[q];if(S!==void 0)return delete U[q],S;if(I===void 0)throw Error(`Key ${q} does not exist in object.`);return I}function y(...U){return Array.prototype.concat.apply([],U)}function b(...U){return U.reduce((q,I)=>q.flatMap(S=>I.map(w=>[S,w])))}function O(U,q){return Math.abs((U+q)%(2*q)-q)}function K(U,q){const I=URL.createObjectURL(q),S=document.createElement("a");S.href=I,S.download=U,S.click(),S.remove(),URL.revokeObjectURL(I)}function se(U,q){return Object.assign({},...q.map(I=>{if(U[I]!==void 0)return{[I]:U[I]}}))}function ne(U){let q=0;for(const I of U)++q;return q}function W(U,q){let I=0;for(const S of U)S===q&&++I;return I}},"./src/utils/data-structures.js":(Ie,$,r)=>{r.r($),r.d($,{CharTrie:()=>A,PriorityQueue:()=>f,TokenLattice:()=>X});class f{constructor(v=(y,b)=>y>b,M=1/0){this._heap=[],this._comparator=v,this._maxSize=M}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...v){return this.extend(v)}extend(v){for(const M of v)if(this.size<this._maxSize)this._heap.push(M),this._siftUp();else{const y=this._smallest();this._comparator(M,this._heap[y])&&(this._heap[y]=M,this._siftUpFrom(y))}return this.size}pop(){const v=this.peek(),M=this.size-1;return M>0&&this._swap(0,M),this._heap.pop(),this._siftDown(),v}replace(v){const M=this.peek();return this._heap[0]=v,this._siftDown(),M}_parent(v){return(v+1>>>1)-1}_left(v){return(v<<1)+1}_right(v){return v+1<<1}_greater(v,M){return this._comparator(this._heap[v],this._heap[M])}_swap(v,M){const y=this._heap[v];this._heap[v]=this._heap[M],this._heap[M]=y}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(v){for(;v>0&&this._greater(v,this._parent(v));)this._swap(v,this._parent(v)),v=this._parent(v)}_siftDown(){let v=0;for(;this._left(v)<this.size&&this._greater(this._left(v),v)||this._right(v)<this.size&&this._greater(this._right(v),v);){const M=this._right(v)<this.size&&this._greater(this._right(v),this._left(v))?this._right(v):this._left(v);this._swap(v,M),v=M}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class A{constructor(){this.root=j.default()}extend(v){for(const M of v)this.push(M)}push(v){let M=this.root;for(const y of v){let b=M.children.get(y);b===void 0&&(b=j.default(),M.children.set(y,b)),M=b}M.isLeaf=!0}*commonPrefixSearch(v){let M=this.root;if(M===void 0)return;let y="";for(const b of v){if(y+=b,M=M.children.get(b),M===void 0)return;M.isLeaf&&(yield y)}}}class j{constructor(v,M){this.isLeaf=v,this.children=M}static default(){return new j(!1,new Map)}}class X{constructor(v,M,y){this.chars=Array.from(v),this.len=this.chars.length,this.bosTokenId=M,this.eosTokenId=y,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const b=new R(this.bosTokenId,0,0,0,0),O=new R(this.eosTokenId,1,this.len,0,0);this.nodes.push(b.clone()),this.nodes.push(O.clone()),this.beginNodes[this.len].push(O),this.endNodes[0].push(b)}insert(v,M,y,b){const O=this.nodes.length,K=new R(b,O,v,M,y);this.beginNodes[v].push(K),this.endNodes[v+M].push(K),this.nodes.push(K)}viterbi(){const v=this.len;let M=0;for(;M<=v;){if(this.beginNodes[M].length==0)return[];for(let se of this.beginNodes[M]){se.prev=null;let ne=0,W=null;for(let U of this.endNodes[M]){const q=U.backtraceScore+se.score;(W===null||q>ne)&&(W=U.clone(),ne=q)}if(W!==null)se.prev=W,se.backtraceScore=ne;else return[]}++M}const y=[],O=this.beginNodes[v][0].prev;if(O===null)return[];let K=O.clone();for(;K.prev!==null;)y.push(K.clone()),K=K.clone().prev.clone();return y.reverse(),y}piece(v){return this.chars.slice(v.pos,v.pos+v.length).join("")}tokens(){return this.viterbi().map(M=>this.piece(M))}tokenIds(){return this.viterbi().map(M=>M.tokenId)}}class R{constructor(v,M,y,b,O){this.tokenId=v,this.nodeId=M,this.pos=y,this.length=b,this.score=O,this.prev=null,this.backtraceScore=0}clone(){const v=new R(this.tokenId,this.nodeId,this.pos,this.length,this.score);return v.prev=this.prev,v.backtraceScore=this.backtraceScore,v}}},"./src/utils/devices.js":(Ie,$,r)=>{r.r($),r.d($,{DEVICE_TYPES:()=>f});const f=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(Ie,$,r)=>{r.r($),r.d($,{DATA_TYPES:()=>X,DEFAULT_DEVICE_DTYPE_MAPPING:()=>R,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>g,isWebGpuFp16Supported:()=>j});var f=r("./src/env.js"),A=r("./src/utils/devices.js");const j=function(){let v;return async function(){if(v===void 0)if(!f.apis.IS_WEBGPU_AVAILABLE)v=!1;else try{v=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{v=!1}return v}}(),X=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),R=Object.freeze({[A.DEVICE_TYPES.wasm]:X.q8}),g=Object.freeze({[X.fp32]:"",[X.fp16]:"_fp16",[X.int8]:"_int8",[X.uint8]:"_uint8",[X.q8]:"_quantized",[X.q4]:"_q4",[X.q4f16]:"_q4f16",[X.bnb4]:"_bnb4"})},"./src/utils/generic.js":(Ie,$,r)=>{r.r($),r.d($,{Callable:()=>f});const f=class{constructor(){let A=function(...j){return A._call(...j)};return Object.setPrototypeOf(A,new.target.prototype)}_call(...A){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(Ie,$,r)=>{r.r($),r.d($,{getFile:()=>M,getModelFile:()=>se,getModelJSON:()=>ne});var f=r("?7a2c"),A=r("?a42a"),j=r("./src/env.js"),X=r("./src/utils/core.js");const R={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class g{constructor(I){if(this.filePath=I,this.headers=new Headers,this.exists=f.existsSync(I),this.exists){this.status=200,this.statusText="OK";let S=f.statSync(I);this.headers.set("content-length",S.size.toString()),this.updateContentType();let w=this;this.body=new ReadableStream({start(x){w.arrayBuffer().then(F=>{x.enqueue(new Uint8Array(F)),x.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const I=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",R[I]??"application/octet-stream")}clone(){let I=new g(this.filePath);return I.exists=this.exists,I.status=this.status,I.statusText=this.statusText,I.headers=new Headers(this.headers),I}async arrayBuffer(){return(await f.promises.readFile(this.filePath)).buffer}async blob(){const I=await f.promises.readFile(this.filePath);return new Blob([I],{type:this.headers.get("content-type")})}async text(){return await f.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function v(q,I=null,S=null){let w;try{w=new URL(q)}catch{return!1}return!(I&&!I.includes(w.protocol)||S&&!S.includes(w.hostname))}async function M(q){var I;if(j.env.useFS&&!v(q,["http:","https:","blob:"]))return new g(q);if(typeof process<"u"&&((I=process==null?void 0:process.release)==null?void 0:I.name)==="node"){const S=!!(Sn!=null&&Sn.TESTING_REMOTELY),w=j.env.version,x=new Headers;if(x.set("User-Agent",`transformers.js/${w}; is_ci/${S};`),v(q,["http:","https:"],["huggingface.co","hf.co"])){const ae=(Sn==null?void 0:Sn.HF_TOKEN)??(Sn==null?void 0:Sn.HF_ACCESS_TOKEN);ae&&x.set("Authorization",`Bearer ${ae}`)}return fetch(q,{headers:x})}else return fetch(q)}const y={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function b(q,I,S){if(!S)return null;const w=y[q]??`Error (${q}) occurred while trying to load file`;throw Error(`${w}: "${I}".`)}class O{constructor(I){this.path=I}async match(I){let S=A.join(this.path,I),w=new g(S);if(w.exists)return w}async put(I,S){const w=Buffer.from(await S.arrayBuffer());let x=A.join(this.path,I);try{await f.promises.mkdir(A.dirname(x),{recursive:!0}),await f.promises.writeFile(x,w)}catch(F){console.warn("An error occurred while writing the file to cache:",F)}}}async function K(q,...I){for(let S of I)try{let w=await q.match(S);if(w)return w}catch{continue}}async function se(q,I,S=!0,w={}){if(!j.env.allowLocalModels){if(w.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!j.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,X.dispatchCallback)(w.progress_callback,{status:"initiate",name:q,file:I});let x;if(!x&&j.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{x=await caches.open("transformers-cache")}catch(tt){console.warn("An error occurred while opening the browser cache:",tt)}}if(!x&&j.env.useFSCache&&(x=new O(w.cache_dir??j.env.cacheDir)),!x&&j.env.useCustomCache){if(!j.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!j.env.customCache.match||!j.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");x=j.env.customCache}const F=w.revision??"main";let ae=U(q,I),oe=U(j.env.localModelPath,ae),ve=U(j.env.remoteHost,j.env.remotePathTemplate.replaceAll("{model}",q).replaceAll("{revision}",encodeURIComponent(F)),I),we=F==="main"?ae:U(q,F,I),re,xe=x instanceof O?we:ve,ce=!1,ke;x&&(ke=await K(x,oe,xe));const Oe=ke!==void 0;if(ke===void 0){if(j.env.allowLocalModels)if(v(ae,["http:","https:"])){if(w.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${ae}.`);if(!j.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${ae}.`)}else try{ke=await M(oe),re=oe}catch(Ge){console.warn(`Unable to load from local path "${oe}": "${Ge}"`)}if(ke===void 0||ke.status===404){if(w.local_files_only||!j.env.allowRemoteModels){if(S)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${oe}".`);return null}if(ke=await M(ve),ke.status!==200)return b(ke.status,ve,S);re=xe}ce=x&&typeof Response<"u"&&ke instanceof Response&&ke.status===200}(0,X.dispatchCallback)(w.progress_callback,{status:"download",name:q,file:I});let Pe;return w.progress_callback?Oe&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Pe=new Uint8Array(await ke.arrayBuffer()),(0,X.dispatchCallback)(w.progress_callback,{status:"progress",name:q,file:I,progress:100,loaded:Pe.length,total:Pe.length})):Pe=await W(ke,tt=>{(0,X.dispatchCallback)(w.progress_callback,{status:"progress",name:q,file:I,...tt})}):Pe=new Uint8Array(await ke.arrayBuffer()),ce&&re&&await x.match(re)===void 0&&await x.put(re,new Response(Pe,{headers:ke.headers})).catch(tt=>{console.warn(`Unable to add response to browser cache: ${tt}.`)}),(0,X.dispatchCallback)(w.progress_callback,{status:"done",name:q,file:I}),Pe}async function ne(q,I,S=!0,w={}){let x=await se(q,I,S,w);if(x===null)return{};let ae=new TextDecoder("utf-8").decode(x);return JSON.parse(ae)}async function W(q,I){const S=q.headers.get("Content-Length");S===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let w=parseInt(S??"0"),x=new Uint8Array(w),F=0;const ae=q.body.getReader();async function oe(){const{done:ve,value:we}=await ae.read();if(ve)return;let re=F+we.length;if(re>w){w=re;let ce=new Uint8Array(w);ce.set(x),x=ce}x.set(we,F),F=re;const xe=F/w*100;return I({progress:xe,loaded:F,total:w}),oe()}return await oe(),x}function U(...q){return q=q.map((I,S)=>(S&&(I=I.replace(new RegExp("^/"),"")),S!==q.length-1&&(I=I.replace(new RegExp("/$"),"")),I)),q.join("/")}},"./src/utils/image.js":(Ie,$,r)=>{r.r($),r.d($,{RawImage:()=>K,load_image:()=>se});var f=r("./src/utils/core.js"),A=r("./src/utils/hub.js"),j=r("./src/env.js"),X=r("./src/utils/tensor.js"),R=r("?2b25");let g,v,M;const y=j.apis.IS_BROWSER_ENV||j.apis.IS_WEBWORKER_ENV;if(y)g=(ne,W)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(ne,W)},M=self.createImageBitmap,v=self.ImageData;else if(R)M=async ne=>{const U=(await ne.metadata()).channels,{data:q,info:I}=await ne.rotate().raw().toBuffer({resolveWithObject:!0}),S=new K(new Uint8ClampedArray(q),I.width,I.height,I.channels);return U!==void 0&&U!==I.channels&&S.convert(U),S};else throw new Error("Unable to load image processing library.");const b={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},O=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class K{constructor(W,U,q,I){this.data=W,this.width=U,this.height=q,this.channels=I}get size(){return[this.width,this.height]}static async read(W){if(W instanceof K)return W;if(typeof W=="string"||W instanceof URL)return await this.fromURL(W);throw new Error(`Unsupported input type: ${typeof W}`)}static fromCanvas(W){if(!y)throw new Error("fromCanvas() is only supported in browser environments.");const q=W.getContext("2d").getImageData(0,0,W.width,W.height).data;return new K(q,W.width,W.height,4)}static async fromURL(W){const U=await(0,A.getFile)(W);if(U.status!==200)throw new Error(`Unable to read image from "${W}" (${U.status} ${U.statusText})`);const q=await U.blob();return this.fromBlob(q)}static async fromBlob(W){if(y){const U=await M(W),q=g(U.width,U.height).getContext("2d");return q.drawImage(U,0,0),new this(q.getImageData(0,0,U.width,U.height).data,U.width,U.height,4)}else{const U=R(await W.arrayBuffer());return await M(U)}}static fromTensor(W,U="CHW"){if(W.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${W.dims.length} dimensions.`);if(U==="CHW")W=W.transpose(1,2,0);else if(U!=="HWC")throw new Error(`Unsupported channel format: ${U}`);if(!(W.data instanceof Uint8ClampedArray||W.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${W.type}`);switch(W.dims[2]){case 1:case 2:case 3:case 4:return new K(W.data,W.dims[1],W.dims[0],W.dims[2]);default:throw new Error(`Unsupported number of channels: ${W.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const W=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let U=0,q=0;U<this.data.length;U+=this.channels){const I=this.data[U],S=this.data[U+1],w=this.data[U+2];W[q++]=Math.round(.2989*I+.587*S+.114*w)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(W,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const W=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let U=0,q=0;U<this.data.length;++U)W[q++]=this.data[U],W[q++]=this.data[U],W[q++]=this.data[U];break;case 4:for(let U=0,q=0;U<this.data.length;U+=4)W[q++]=this.data[U],W[q++]=this.data[U+1],W[q++]=this.data[U+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(W,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const W=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let U=0,q=0;U<this.data.length;++U)W[q++]=this.data[U],W[q++]=this.data[U],W[q++]=this.data[U],W[q++]=255;break;case 3:for(let U=0,q=0;U<this.data.length;U+=3)W[q++]=this.data[U],W[q++]=this.data[U+1],W[q++]=this.data[U+2],W[q++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(W,this.width,this.height,4)}putAlpha(W){if(W.width!==this.width||W.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${W.width}x${W.height}`);if(W.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${W.channels}`);const U=this.data,q=W.data,I=this.width*this.height;if(this.channels===3){const S=new Uint8ClampedArray(I*4);for(let w=0,x=0,F=0;w<I;++w)S[F++]=U[x++],S[F++]=U[x++],S[F++]=U[x++],S[F++]=q[w];return this._update(S,this.width,this.height,4)}else if(this.channels===4){for(let S=0;S<I;++S)U[4*S+3]=q[S];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(W,U,{resample:q=2}={}){if(this.width===W&&this.height===U)return this;let I=b[q]??q;const S=(0,f.isNullishDimension)(W),w=(0,f.isNullishDimension)(U);if(S&&w)return this;if(S?W=U/this.height*this.width:w&&(U=W/this.width*this.height),y){const x=this.channels,F=this.toCanvas(),ae=g(W,U).getContext("2d");return ae.drawImage(F,0,0,W,U),new K(ae.getImageData(0,0,W,U).data,W,U,4).convert(x)}else{let x=this.toSharp();switch(I){case"box":case"hamming":(I==="box"||I==="hamming")&&(console.warn(`Resampling method ${I} is not yet supported. Using bilinear instead.`),I="bilinear");case"nearest":case"bilinear":case"bicubic":x=x.affine([W/this.width,0,0,U/this.height],{interpolator:I});break;case"lanczos":x=x.resize({width:W,height:U,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${I} is not supported.`)}return await M(x)}}async pad([W,U,q,I]){if(W=Math.max(W,0),U=Math.max(U,0),q=Math.max(q,0),I=Math.max(I,0),W===0&&U===0&&q===0&&I===0)return this;if(y){const S=this.channels,w=this.toCanvas(),x=this.width+W+U,F=this.height+q+I,ae=g(x,F).getContext("2d");return ae.drawImage(w,0,0,this.width,this.height,W,q,this.width,this.height),new K(ae.getImageData(0,0,x,F).data,x,F,4).convert(S)}else{const S=this.toSharp().extend({left:W,right:U,top:q,bottom:I});return await M(S)}}async crop([W,U,q,I]){if(W=Math.max(W,0),U=Math.max(U,0),q=Math.min(q,this.width-1),I=Math.min(I,this.height-1),W===0&&U===0&&q===this.width-1&&I===this.height-1)return this;const S=q-W+1,w=I-U+1;if(y){const x=this.channels,F=this.toCanvas(),ae=g(S,w).getContext("2d");return ae.drawImage(F,W,U,S,w,0,0,S,w),new K(ae.getImageData(0,0,S,w).data,S,w,4).convert(x)}else{const x=this.toSharp().extract({left:W,top:U,width:S,height:w});return await M(x)}}async center_crop(W,U){if(this.width===W&&this.height===U)return this;const q=(this.width-W)/2,I=(this.height-U)/2;if(y){const S=this.channels,w=this.toCanvas(),x=g(W,U).getContext("2d");let F=0,ae=0,oe=0,ve=0;return q>=0?F=q:oe=-q,I>=0?ae=I:ve=-I,x.drawImage(w,F,ae,W,U,oe,ve,W,U),new K(x.getImageData(0,0,W,U).data,W,U,4).convert(S)}else{let S=this.toSharp();if(q>=0&&I>=0)S=S.extract({left:Math.floor(q),top:Math.floor(I),width:W,height:U});else if(q<=0&&I<=0){const w=Math.floor(-I),x=Math.floor(-q);S=S.extend({top:w,left:x,right:W-this.width-x,bottom:U-this.height-w})}else{let w=[0,0],x=0;I<0?(w[0]=Math.floor(-I),w[1]=U-this.height-w[0]):x=Math.floor(I);let F=[0,0],ae=0;q<0?(F[0]=Math.floor(-q),F[1]=W-this.width-F[0]):ae=Math.floor(q),S=S.extend({top:w[0],bottom:w[1],left:F[0],right:F[1]}).extract({left:ae,top:x,width:W,height:U})}return await M(S)}}async toBlob(W="image/png",U=1){if(!y)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:W,quality:U})}toTensor(W="CHW"){let U=new X.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(W!=="HWC")if(W==="CHW")U=U.permute(2,0,1);else throw new Error(`Unsupported channel format: ${W}`);return U}toCanvas(){if(!y)throw new Error("toCanvas() is only supported in browser environments.");const W=this.clone().rgba(),U=g(W.width,W.height),q=new v(W.data,W.width,W.height);return U.getContext("2d").putImageData(q,0,0),U}split(){const{data:W,width:U,height:q,channels:I}=this,S=W.constructor,w=W.length/I,x=Array.from({length:I},()=>new S(w));for(let F=0;F<w;++F){const ae=I*F;for(let oe=0;oe<I;++oe)x[oe][F]=W[ae+oe]}return x.map(F=>new K(F,U,q,1))}_update(W,U,q,I=null){return this.data=W,this.width=U,this.height=q,I!==null&&(this.channels=I),this}clone(){return new K(this.data.slice(),this.width,this.height,this.channels)}convert(W){if(this.channels===W)return this;switch(W){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(W){if(y){if(j.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const U=W.split(".").pop().toLowerCase(),q=O.get(U)??"image/png",I=await this.toBlob(q);(0,f.saveBlob)(W,I)}else{if(j.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(W);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(y)throw new Error("toSharp() is only supported in server-side environments.");return R(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const se=K.read.bind(K)},"./src/utils/maths.js":(Ie,$,r)=>{r.r($),r.d($,{FFT:()=>se,bankers_round:()=>U,cos_sim:()=>g,dot:()=>R,dynamic_time_warping:()=>q,interpolate_data:()=>f,log_softmax:()=>X,magnitude:()=>v,max:()=>y,medianFilter:()=>ne,min:()=>M,permute_data:()=>A,round:()=>W,softmax:()=>j});function f(I,[S,w,x],[F,ae],oe="bilinear",ve=!1){const we=ae/x,re=F/w,xe=new I.constructor(F*ae*S),ce=w*x,ke=F*ae;for(let Oe=0;Oe<F;++Oe)for(let Pe=0;Pe<ae;++Pe){const tt=Oe*ae+Pe,Ge=(Pe+.5)/we-.5,ye=(Oe+.5)/re-.5;let J=Math.floor(Ge),de=Math.floor(ye);const Ce=Math.min(J+1,x-1),Be=Math.min(de+1,w-1);J=Math.max(J,0),de=Math.max(de,0);const Ze=Ge-J,te=ye-de,Ke=(1-Ze)*(1-te),je=Ze*(1-te),le=(1-Ze)*te,Te=Ze*te,Ue=de*x,Ve=Be*x,Ne=Ue+J,Re=Ue+Ce,st=Ve+J,dt=Ve+Ce;for(let ct=0;ct<S;++ct){const lt=ct*ce;xe[ct*ke+tt]=Ke*I[lt+Ne]+je*I[lt+Re]+le*I[lt+st]+Te*I[lt+dt]}}return xe}function A(I,S,w){const x=new Array(w.length),F=new Array(w.length);for(let ve=w.length-1,we=1;ve>=0;--ve)F[ve]=we,x[ve]=S[w[ve]],we*=x[ve];const ae=w.map((ve,we)=>F[w.indexOf(we)]),oe=new I.constructor(I.length);for(let ve=0;ve<I.length;++ve){let we=0;for(let re=S.length-1,xe=ve;re>=0;--re)we+=xe%S[re]*ae[re],xe=Math.floor(xe/S[re]);oe[we]=I[ve]}return[oe,x]}function j(I){const S=y(I)[0],w=I.map(ae=>Math.exp(ae-S)),x=w.reduce((ae,oe)=>ae+oe,0);return w.map(ae=>ae/x)}function X(I){const S=y(I)[0];let w=0;for(let ae=0;ae<I.length;++ae)w+=Math.exp(I[ae]-S);const x=Math.log(w);return I.map(ae=>ae-S-x)}function R(I,S){let w=0;for(let x=0;x<I.length;++x)w+=I[x]*S[x];return w}function g(I,S){const w=R(I,S),x=v(I),F=v(S);return w/(x*F)}function v(I){return Math.sqrt(I.reduce((S,w)=>S+w*w,0))}function M(I){if(I.length===0)throw Error("Array must not be empty");let S=I[0],w=0;for(let x=1;x<I.length;++x)I[x]<S&&(S=I[x],w=x);return[S,w]}function y(I){if(I.length===0)throw Error("Array must not be empty");let S=I[0],w=0;for(let x=1;x<I.length;++x)I[x]>S&&(S=I[x],w=x);return[S,w]}function b(I){return I>0&&(I&I-1)===0}class O{constructor(S){if(this.size=S|0,this.size<=1||!b(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=S<<1,this.table=new Float64Array(this.size*2);for(let x=0;x<this.table.length;x+=2){const F=Math.PI*x/this.size;this.table[x]=Math.cos(F),this.table[x+1]=-Math.sin(F)}let w=0;for(let x=1;this.size>x;x<<=1)++w;this._width=w%2===0?w-1:w,this._bitrev=new Int32Array(1<<this._width);for(let x=0;x<this._bitrev.length;++x){this._bitrev[x]=0;for(let F=0;F<this._width;F+=2){const ae=this._width-F-2;this._bitrev[x]|=(x>>>F&3)<<ae}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(S,w){const x=w||new Array(S.length>>>1);for(let F=0;F<S.length;F+=2)x[F>>>1]=S[F];return x}toComplexArray(S,w){const x=w||this.createComplexArray();for(let F=0;F<x.length;F+=2)x[F]=S[F>>>1],x[F+1]=0;return x}transform(S,w){if(S===w)throw new Error("Input and output buffers must be different");this._transform4(S,w,1)}realTransform(S,w){if(S===w)throw new Error("Input and output buffers must be different");this._realTransform4(S,w,1)}inverseTransform(S,w){if(S===w)throw new Error("Input and output buffers must be different");this._transform4(S,w,-1);for(let x=0;x<S.length;++x)S[x]/=this.size}_transform4(S,w,x){const F=this._csize;let oe=1<<this._width,ve=F/oe<<1,we,re;const xe=this._bitrev;if(ve===4)for(we=0,re=0;we<F;we+=ve,++re){const ke=xe[re];this._singleTransform2(w,S,we,ke,oe)}else for(we=0,re=0;we<F;we+=ve,++re){const ke=xe[re];this._singleTransform4(w,S,we,ke,oe,x)}const ce=this.table;for(oe>>=2;oe>=2;oe>>=2){ve=F/oe<<1;const ke=ve>>>2;for(we=0;we<F;we+=ve){const Oe=we+ke-1;for(let Pe=we,tt=0;Pe<Oe;Pe+=2,tt+=oe){const Ge=Pe,ye=Ge+ke,J=ye+ke,de=J+ke,Ce=S[Ge],Be=S[Ge+1],Ze=S[ye],te=S[ye+1],Ke=S[J],je=S[J+1],le=S[de],Te=S[de+1],Ue=ce[tt],Ve=x*ce[tt+1],Ne=Ze*Ue-te*Ve,Re=Ze*Ve+te*Ue,st=ce[2*tt],dt=x*ce[2*tt+1],ct=Ke*st-je*dt,lt=Ke*dt+je*st,ht=ce[3*tt],L=x*ce[3*tt+1],ie=le*ht-Te*L,H=le*L+Te*ht,_e=Ce+ct,$e=Be+lt,We=Ce-ct,Je=Be-lt,ut=Ne+ie,mt=Re+H,vt=x*(Ne-ie),kt=x*(Re-H);S[Ge]=_e+ut,S[Ge+1]=$e+mt,S[ye]=We+kt,S[ye+1]=Je-vt,S[J]=_e-ut,S[J+1]=$e-mt,S[de]=We-kt,S[de+1]=Je+vt}}}}_singleTransform2(S,w,x,F,ae){const oe=S[F],ve=S[F+1],we=S[F+ae],re=S[F+ae+1];w[x]=oe+we,w[x+1]=ve+re,w[x+2]=oe-we,w[x+3]=ve-re}_singleTransform4(S,w,x,F,ae,oe){const ve=ae*2,we=ae*3,re=S[F],xe=S[F+1],ce=S[F+ae],ke=S[F+ae+1],Oe=S[F+ve],Pe=S[F+ve+1],tt=S[F+we],Ge=S[F+we+1],ye=re+Oe,J=xe+Pe,de=re-Oe,Ce=xe-Pe,Be=ce+tt,Ze=ke+Ge,te=oe*(ce-tt),Ke=oe*(ke-Ge);w[x]=ye+Be,w[x+1]=J+Ze,w[x+2]=de+Ke,w[x+3]=Ce-te,w[x+4]=ye-Be,w[x+5]=J-Ze,w[x+6]=de-Ke,w[x+7]=Ce+te}_realTransform4(S,w,x){const F=this._csize;let oe=1<<this._width,ve=F/oe<<1,we,re;const xe=this._bitrev;if(ve===4)for(we=0,re=0;we<F;we+=ve,++re){const Oe=xe[re];this._singleRealTransform2(w,S,we,Oe>>>1,oe>>>1)}else for(we=0,re=0;we<F;we+=ve,++re){const Oe=xe[re];this._singleRealTransform4(w,S,we,Oe>>>1,oe>>>1,x)}const ce=this.table;for(oe>>=2;oe>=2;oe>>=2){ve=F/oe<<1;const Oe=ve>>>1,Pe=Oe>>>1,tt=Pe>>>1;for(we=0;we<F;we+=ve)for(let Ge=0,ye=0;Ge<=tt;Ge+=2,ye+=oe){const J=we+Ge,de=J+Pe,Ce=de+Pe,Be=Ce+Pe,Ze=S[J],te=S[J+1],Ke=S[de],je=S[de+1],le=S[Ce],Te=S[Ce+1],Ue=S[Be],Ve=S[Be+1],Ne=Ze,Re=te,st=ce[ye],dt=x*ce[ye+1],ct=Ke*st-je*dt,lt=Ke*dt+je*st,ht=ce[2*ye],L=x*ce[2*ye+1],ie=le*ht-Te*L,H=le*L+Te*ht,_e=ce[3*ye],$e=x*ce[3*ye+1],We=Ue*_e-Ve*$e,Je=Ue*$e+Ve*_e,ut=Ne+ie,mt=Re+H,vt=Ne-ie,kt=Re-H,It=ct+We,os=lt+Je,ys=x*(ct-We),Cs=x*(lt-Je);if(S[J]=ut+It,S[J+1]=mt+os,S[de]=vt+Cs,S[de+1]=kt-ys,Ge===0){S[Ce]=ut-It,S[Ce+1]=mt-os;continue}if(Ge===tt)continue;const Ds=we+Pe-Ge,sr=we+Oe-Ge;S[Ds]=vt-x*Cs,S[Ds+1]=-kt-x*ys,S[sr]=ut-x*It,S[sr+1]=-mt+x*os}}const ke=F>>>1;for(let Oe=2;Oe<ke;Oe+=2)S[F-Oe]=S[Oe],S[F-Oe+1]=-S[Oe+1]}_singleRealTransform2(S,w,x,F,ae){const oe=S[F],ve=S[F+ae];w[x]=oe+ve,w[x+1]=0,w[x+2]=oe-ve,w[x+3]=0}_singleRealTransform4(S,w,x,F,ae,oe){const ve=ae*2,we=ae*3,re=S[F],xe=S[F+ae],ce=S[F+ve],ke=S[F+we],Oe=re+ce,Pe=re-ce,tt=xe+ke,Ge=oe*(xe-ke);w[x]=Oe+tt,w[x+1]=0,w[x+2]=Pe,w[x+3]=-Ge,w[x+4]=Oe-tt,w[x+5]=0,w[x+6]=Pe,w[x+7]=Ge}}class K{constructor(S){const w=2*(S-1),x=2*(2*S-1),F=2**Math.ceil(Math.log2(x));this.bufferSize=F,this._a=w;const ae=new Float64Array(x),oe=new Float64Array(F);this._chirpBuffer=new Float64Array(F),this._buffer1=new Float64Array(F),this._buffer2=new Float64Array(F),this._outBuffer1=new Float64Array(F),this._outBuffer2=new Float64Array(F);const ve=-2*Math.PI/S,we=Math.cos(ve),re=Math.sin(ve);for(let xe=0;xe<x>>1;++xe){const ce=(xe+1-S)**2/2,ke=Math.sqrt(we**2+re**2)**ce,Oe=ce*Math.atan2(re,we),Pe=2*xe;ae[Pe]=ke*Math.cos(Oe),ae[Pe+1]=ke*Math.sin(Oe),oe[Pe]=ae[Pe],oe[Pe+1]=-ae[Pe+1]}this._slicedChirpBuffer=ae.subarray(w,x),this._f=new O(F>>1),this._f.transform(this._chirpBuffer,oe)}_transform(S,w,x){const F=this._buffer1,ae=this._buffer2,oe=this._outBuffer1,ve=this._outBuffer2,we=this._chirpBuffer,re=this._slicedChirpBuffer,xe=this._a;if(x)for(let ce=0;ce<re.length;ce+=2){const ke=ce+1,Oe=ce>>1,Pe=w[Oe];F[ce]=Pe*re[ce],F[ke]=Pe*re[ke]}else for(let ce=0;ce<re.length;ce+=2){const ke=ce+1;F[ce]=w[ce]*re[ce]-w[ke]*re[ke],F[ke]=w[ce]*re[ke]+w[ke]*re[ce]}this._f.transform(oe,F);for(let ce=0;ce<we.length;ce+=2){const ke=ce+1;ae[ce]=oe[ce]*we[ce]-oe[ke]*we[ke],ae[ke]=oe[ce]*we[ke]+oe[ke]*we[ce]}this._f.inverseTransform(ve,ae);for(let ce=0;ce<ve.length;ce+=2){const ke=ve[ce+xe],Oe=ve[ce+xe+1],Pe=re[ce],tt=re[ce+1];S[ce]=ke*Pe-Oe*tt,S[ce+1]=ke*tt+Oe*Pe}}transform(S,w){this._transform(S,w,!1)}realTransform(S,w){this._transform(S,w,!0)}}class se{constructor(S){this.fft_length=S,this.isPowerOfTwo=b(S),this.isPowerOfTwo?(this.fft=new O(S),this.outputBufferSize=2*S):(this.fft=new K(S),this.outputBufferSize=this.fft.bufferSize)}realTransform(S,w){this.fft.realTransform(S,w)}transform(S,w){this.fft.transform(S,w)}}function ne(I,S){if(S%2===0||S<=0)throw new Error("Window size must be a positive odd number");const w=new I.constructor(I.length),x=new I.constructor(S),F=Math.floor(S/2);for(let ae=0;ae<I.length;++ae){let oe=0;for(let ve=-F;ve<=F;++ve){let we=ae+ve;we<0?we=Math.abs(we):we>=I.length&&(we=2*(I.length-1)-we),x[oe++]=I[we]}x.sort(),w[ae]=x[F]}return w}function W(I,S){const w=Math.pow(10,S);return Math.round(I*w)/w}function U(I){const S=Math.round(I);return Math.abs(I)%1===.5?S%2===0?S:S-1:S}function q(I){const S=I.length,w=I[0].length,x=[S+1,w+1],F=Array.from({length:x[0]},()=>Array(x[1]).fill(1/0));F[0][0]=0;const ae=Array.from({length:x[0]},()=>Array(x[1]).fill(-1));for(let xe=1;xe<x[1];++xe)for(let ce=1;ce<x[0];++ce){const ke=F[ce-1][xe-1],Oe=F[ce-1][xe],Pe=F[ce][xe-1];let tt,Ge;ke<Oe&&ke<Pe?(tt=ke,Ge=0):Oe<ke&&Oe<Pe?(tt=Oe,Ge=1):(tt=Pe,Ge=2),F[ce][xe]=I[ce-1][xe-1]+tt,ae[ce][xe]=Ge}for(let xe=0;xe<x[1];++xe)ae[0][xe]=2;for(let xe=0;xe<x[0];++xe)ae[xe][0]=1;let oe=S,ve=w,we=[],re=[];for(;oe>0||ve>0;)switch(we.push(oe-1),re.push(ve-1),ae[oe][ve]){case 0:--oe,--ve;break;case 1:--oe;break;case 2:--ve;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${oe}, ${ve}]. Please file a bug report.`)}return we.reverse(),re.reverse(),[we,re]}},"./src/utils/tensor.js":(Ie,$,r)=>{r.r($),r.d($,{Tensor:()=>R,cat:()=>w,full:()=>re,full_like:()=>xe,interpolate:()=>M,interpolate_4d:()=>y,layer_norm:()=>U,matmul:()=>b,mean:()=>oe,mean_pooling:()=>W,ones:()=>ce,ones_like:()=>ke,permute:()=>v,quantize_embeddings:()=>Ge,rand:()=>tt,rfft:()=>O,slice:()=>ne,stack:()=>x,std_mean:()=>ae,topk:()=>K,zeros:()=>Oe,zeros_like:()=>Pe});var f=r("./src/utils/maths.js"),A=r("./src/backends/onnx.js"),j=r("./src/ops/registry.js");const X=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class R{constructor(...J){me(this,"ort_tensor");return(0,A.isONNXTensor)(J[0])?this.ort_tensor=J[0]:this.ort_tensor=new A.Tensor(J[0],J[1],J[2]),new Proxy(this,{get:(de,Ce)=>{if(typeof Ce=="string"){let Be=Number(Ce);if(Number.isInteger(Be))return de._getitem(Be)}return de[Ce]},set:(de,Ce,Be)=>de[Ce]=Be})}get dims(){return this.ort_tensor.dims}set dims(J){this.ort_tensor.dims=J}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[J,...de]=this.dims;if(de.length>0){const Ce=de.reduce((Be,Ze)=>Be*Ze);for(let Be=0;Be<J;++Be)yield this._subarray(Be,Ce,de)}else yield*this.data}_getitem(J){const[de,...Ce]=this.dims;if(J=S(J,de),Ce.length>0){const Be=Ce.reduce((Ze,te)=>Ze*te);return this._subarray(J,Be,Ce)}else return new R(this.type,[this.data[J]],Ce)}indexOf(J){const de=this.data;for(let Ce=0;Ce<de.length;++Ce)if(de[Ce]==J)return Ce;return-1}_subarray(J,de,Ce){const Be=J*de,Ze=(J+1)*de,te="subarray"in this.data?this.data.subarray(Be,Ze):this.data.slice(Be,Ze);return new R(this.type,te,Ce)}item(){const J=this.data;if(J.length!==1)throw new Error(`a Tensor with ${J.length} elements cannot be converted to Scalar`);return J[0]}tolist(){return g(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const J=this.data;for(let de=0;de<J.length;++de)J[de]=1/(1+Math.exp(-J[de]));return this}map(J){return this.clone().map_(J)}map_(J){const de=this.data;for(let Ce=0;Ce<de.length;++Ce)de[Ce]=J(de[Ce],Ce,de);return this}mul(J){return this.clone().mul_(J)}mul_(J){const de=this.data;for(let Ce=0;Ce<de.length;++Ce)de[Ce]*=J;return this}div(J){return this.clone().div_(J)}div_(J){const de=this.data;for(let Ce=0;Ce<de.length;++Ce)de[Ce]/=J;return this}add(J){return this.clone().add_(J)}add_(J){const de=this.data;for(let Ce=0;Ce<de.length;++Ce)de[Ce]+=J;return this}sub(J){return this.clone().sub_(J)}sub_(J){const de=this.data;for(let Ce=0;Ce<de.length;++Ce)de[Ce]-=J;return this}clone(){return new R(this.type,this.data.slice(),this.dims.slice())}slice(...J){const de=[],Ce=[];for(let le=0;le<this.dims.length;++le){let Te=J[le];if(Te==null)Ce.push([0,this.dims[le]]),de.push(this.dims[le]);else if(typeof Te=="number")Te=S(Te,this.dims[le],le),Ce.push([Te,Te+1]);else if(Array.isArray(Te)&&Te.length===2){let[Ue,Ve]=Te;if(Ue=Ue===null?0:S(Ue,this.dims[le],le,!1),Ve=Ve===null?this.dims[le]:S(Ve,this.dims[le],le,!1),Ue>Ve)throw new Error(`Invalid slice: ${Te}`);const Ne=[Math.max(Ue,0),Math.min(Ve,this.dims[le])];Ce.push(Ne),de.push(Ne[1]-Ne[0])}else throw new Error(`Invalid slice: ${Te}`)}const Be=Ce.map(([le,Te])=>Te-le),Ze=Be.reduce((le,Te)=>le*Te),te=this.data,Ke=new te.constructor(Ze),je=this.stride();for(let le=0;le<Ze;++le){let Te=0;for(let Ue=Be.length-1,Ve=le;Ue>=0;--Ue){const Ne=Be[Ue];Te+=(Ve%Ne+Ce[Ue][0])*je[Ue],Ve=Math.floor(Ve/Ne)}Ke[le]=te[Te]}return new R(this.type,Ke,de)}permute(...J){return v(this,J)}transpose(...J){return this.permute(...J)}sum(J=null,de=!1){return this.norm(1,J,de)}norm(J="fro",de=null,Ce=!1){if(J==="fro")J=2;else if(typeof J=="string")throw Error(`Unsupported norm: ${J}`);const Be=this.data,Ze=(le,Te)=>le+Te**J;if(de===null){const le=Be.reduce(Ze,0)**(1/J);return new R(this.type,[le],[])}const[te,Ke,je]=F(Ze,this,de,Ce);if(J!==1)for(let le=0;le<Ke.length;++le)Ke[le]=Ke[le]**(1/J);return new R(te,Ke,je)}normalize_(J=2,de=1){de=S(de,this.dims.length);const Ce=this.norm(J,de,!0),Be=this.data,Ze=Ce.data;for(let te=0;te<Be.length;++te){let Ke=0;for(let je=this.dims.length-1,le=te,Te=1;je>=0;--je){const Ue=this.dims[je];if(je!==de){const Ve=le%Ue;Ke+=Ve*Te,Te*=this.dims[je]}le=Math.floor(le/Ue)}Be[te]/=Ze[Ke]}return this}normalize(J=2,de=1){return this.clone().normalize_(J,de)}stride(){return ve(this.dims)}squeeze(J=null){return new R(this.type,this.data,q(this.dims,J))}squeeze_(J=null){return this.dims=q(this.dims,J),this}unsqueeze(J=null){return new R(this.type,this.data,I(this.dims,J))}unsqueeze_(J=null){return this.dims=I(this.dims,J),this}flatten_(J=0,de=-1){de=(de+this.dims.length)%this.dims.length;let Ce=this.dims.slice(0,J),Be=this.dims.slice(J,de+1),Ze=this.dims.slice(de+1);return this.dims=[...Ce,Be.reduce((te,Ke)=>te*Ke,1),...Ze],this}flatten(J=0,de=-1){return this.clone().flatten_(J,de)}view(...J){let de=-1;for(let Be=0;Be<J.length;++Be)if(J[Be]===-1){if(de!==-1)throw new Error("Only one dimension can be inferred");de=Be}const Ce=this.data;if(de!==-1){const Be=J.reduce((Ze,te,Ke)=>Ke!==de?Ze*te:Ze,1);J[de]=Ce.length/Be}return new R(this.type,Ce,J)}neg_(){const J=this.data;for(let de=0;de<J.length;++de)J[de]=-J[de];return this}neg(){return this.clone().neg_()}gt(J){const de=new Uint8Array(this.data.length),Ce=this.data;for(let Be=0;Be<Ce.length;++Be)de[Be]=Ce[Be]>J?1:0;return new R("bool",de,this.dims)}lt(J){const de=new Uint8Array(this.data.length),Ce=this.data;for(let Be=0;Be<Ce.length;++Be)de[Be]=Ce[Be]<J?1:0;return new R("bool",de,this.dims)}clamp_(J,de){const Ce=this.data;for(let Be=0;Be<Ce.length;++Be)Ce[Be]=Math.min(Math.max(Ce[Be],J),de);return this}clamp(J,de){return this.clone().clamp_(J,de)}round_(){const J=this.data;for(let de=0;de<J.length;++de)J[de]=Math.round(J[de]);return this}round(){return this.clone().round_()}mean(J=null,de=!1){return oe(this,J,de)}min(J=null,de=!1){if(J===null){const te=(0,f.min)(this.data)[0];return new R(this.type,[te],[])}const[Ce,Be,Ze]=F((te,Ke)=>Math.min(te,Ke),this,J,de,1/0);return new R(Ce,Be,Ze)}max(J=null,de=!1){if(J===null){const te=(0,f.max)(this.data)[0];return new R(this.type,[te],[])}const[Ce,Be,Ze]=F((te,Ke)=>Math.max(te,Ke),this,J,de,-1/0);return new R(Ce,Be,Ze)}argmin(J=null,de=!1){if(J!==null)throw new Error("`dim !== null` not yet implemented.");const Ce=(0,f.min)(this.data)[1];return new R("int64",[BigInt(Ce)],[])}argmax(J=null,de=!1){if(J!==null)throw new Error("`dim !== null` not yet implemented.");const Ce=(0,f.max)(this.data)[1];return new R("int64",[BigInt(Ce)],[])}to(J){if(this.type===J)return this;if(!X.hasOwnProperty(J))throw new Error(`Unsupported type: ${J}`);let de;const Ce=["int64","uint64"].includes(this.type),Be=["int64","uint64"].includes(J);return Ce&&!Be?de=Number:!Ce&&Be&&(de=BigInt),new R(J,X[J].from(this.data,de),this.dims)}}function g(ye,J){const de=ye.length,Ce=J.reduce((Ze,te)=>Ze*te);if(de!==Ce)throw Error(`cannot reshape array of size ${de} into shape (${J})`);let Be=ye;for(let Ze=J.length-1;Ze>=0;Ze--)Be=Be.reduce((te,Ke)=>{let je=te[te.length-1];return je.length<J[Ze]?je.push(Ke):te.push([Ke]),te},[[]]);return Be[0]}function v(ye,J){const[de,Ce]=(0,f.permute_data)(ye.data,ye.dims,J);return new R(ye.type,de,Ce)}function M(ye,[J,de],Ce="bilinear",Be=!1){const Ze=ye.dims.at(-3)??1,te=ye.dims.at(-2),Ke=ye.dims.at(-1);let je=(0,f.interpolate_data)(ye.data,[Ze,te,Ke],[J,de],Ce,Be);return new R(ye.type,je,[Ze,J,de])}async function y(ye,{size:J=null,mode:de="bilinear"}={}){if(ye.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!J)throw new Error("`interpolate_4d` requires a `size` argument.");let Ce;if(J.length===2)Ce=[...ye.dims.slice(0,2),...J];else if(J.length===3)Ce=[ye.dims[0],...J];else if(J.length===4)Ce=J;else throw new Error("`size` must be of length 2, 3, or 4.");let Be;if(de==="nearest")Be=await j.TensorOpRegistry.nearest_interpolate_4d;else if(de==="bilinear")Be=await j.TensorOpRegistry.bilinear_interpolate_4d;else if(de==="bicubic")Be=await j.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${de}`);const Ze=new R("int64",new BigInt64Array(Ce.map(BigInt)),[Ce.length]);return await Be({x:ye,s:Ze})}async function b(ye,J){return await(await j.TensorOpRegistry.matmul)({a:ye,b:J})}async function O(ye,J){return await(await j.TensorOpRegistry.rfft)({x:ye,a:J})}async function K(ye,J){const de=await j.TensorOpRegistry.top_k;return J==null?J=ye.dims.at(-1):J=Math.min(J,ye.dims.at(-1)),await de({x:ye,k:new R("int64",[BigInt(J)],[1])})}const se=ye=>new R("int64",ye,[ye.length]);async function ne(ye,J,de,Ce,Be){return await(await j.TensorOpRegistry.slice)({x:ye,s:se(J),e:se(de),a:se(Ce),t:se(Be??new Array(Ce.length).fill(1))})}function W(ye,J){const de=ye.data,Ce=J.data,Be=[ye.dims[0],ye.dims[2]],Ze=new de.constructor(Be[0]*Be[1]),[te,Ke,je]=ye.dims;let le=0;for(let Te=0;Te<te;++Te){const Ue=Te*je*Ke;for(let Ve=0;Ve<je;++Ve){let Ne=0,Re=0;const st=Te*Ke,dt=Ue+Ve;for(let lt=0;lt<Ke;++lt){const ht=Number(Ce[st+lt]);Re+=ht,Ne+=de[dt+lt*je]*ht}const ct=Ne/Re;Ze[le++]=ct}}return new R(ye.type,Ze,Be)}function U(ye,J,{eps:de=1e-5}={}){if(ye.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Ce,Be]=ye.dims;if(J.length!==1&&J[0]!==Be)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[Ze,te]=ae(ye,1,0,!0),Ke=Ze.data,je=te.data,le=ye.data,Te=new le.constructor(le.length);for(let Ue=0;Ue<Ce;++Ue){const Ve=Ue*Be;for(let Ne=0;Ne<Be;++Ne){const Re=Ve+Ne;Te[Re]=(le[Re]-je[Ue])/(Ke[Ue]+de)}}return new R(ye.type,Te,ye.dims)}function q(ye,J){return ye=ye.slice(),J===null?ye=ye.filter(de=>de!==1):typeof J=="number"?ye[J]===1&&ye.splice(J,1):Array.isArray(J)&&(ye=ye.filter((de,Ce)=>de!==1||!J.includes(Ce))),ye}function I(ye,J){return J=S(J,ye.length+1),ye=ye.slice(),ye.splice(J,0,1),ye}function S(ye,J,de=null,Ce=!0){if(Ce&&(ye<-J||ye>=J))throw new Error(`IndexError: index ${ye} is out of bounds for dimension${de===null?"":" "+de} with size ${J}`);return ye<0&&(ye=(ye%J+J)%J),ye}function w(ye,J=0){J=S(J,ye[0].dims.length);const de=ye[0].dims.slice();de[J]=ye.reduce((te,Ke)=>te+Ke.dims[J],0);const Ce=de.reduce((te,Ke)=>te*Ke,1),Be=new ye[0].data.constructor(Ce),Ze=ye[0].type;if(J===0){let te=0;for(const Ke of ye){const je=Ke.data;Be.set(je,te),te+=je.length}}else{let te=0;for(let Ke=0;Ke<ye.length;++Ke){const{data:je,dims:le}=ye[Ke];for(let Te=0;Te<je.length;++Te){let Ue=0;for(let Ve=le.length-1,Ne=Te,Re=1;Ve>=0;--Ve){const st=le[Ve];let dt=Ne%st;Ve===J&&(dt+=te),Ue+=dt*Re,Re*=de[Ve],Ne=Math.floor(Ne/st)}Be[Ue]=je[Te]}te+=le[J]}}return new R(Ze,Be,de)}function x(ye,J=0){return w(ye.map(de=>de.unsqueeze(J)),J)}function F(ye,J,de=null,Ce=!1,Be=null){const Ze=J.data,te=J.dims;de=S(de,te.length);const Ke=te.slice();Ke[de]=1;const je=new Ze.constructor(Ze.length/te[de]);Be!==null&&je.fill(Be);for(let le=0;le<Ze.length;++le){let Te=0;for(let Ue=te.length-1,Ve=le,Ne=1;Ue>=0;--Ue){const Re=te[Ue];if(Ue!==de){const st=Ve%Re;Te+=st*Ne,Ne*=Ke[Ue]}Ve=Math.floor(Ve/Re)}je[Te]=ye(je[Te],Ze[le],le,Te)}return Ce||Ke.splice(de,1),[J.type,je,Ke]}function ae(ye,J=null,de=1,Ce=!1){const Be=ye.data,Ze=ye.dims;if(J===null){const Ne=Be.reduce((ct,lt)=>ct+lt,0)/Be.length,Re=Math.sqrt(Be.reduce((ct,lt)=>ct+(lt-Ne)**2,0)/(Be.length-de)),st=new R(ye.type,[Ne],[]);return[new R(ye.type,[Re],[]),st]}J=S(J,Ze.length);const te=oe(ye,J,Ce),Ke=te.data,[je,le,Te]=F((Ve,Ne,Re,st)=>Ve+(Ne-Ke[st])**2,ye,J,Ce);for(let Ve=0;Ve<le.length;++Ve)le[Ve]=Math.sqrt(le[Ve]/(Ze[J]-de));return[new R(je,le,Te),te]}function oe(ye,J=null,de=!1){const Ce=ye.dims,Be=ye.data;if(J===null){const je=Be.reduce((le,Te)=>le+Te,0);return new R(ye.type,[je/Be.length],[])}J=S(J,Ce.length);const[Ze,te,Ke]=F((je,le)=>je+le,ye,J,de);if(Ce[J]!==1)for(let je=0;je<te.length;++je)te[je]/=Ce[J];return new R(Ze,te,Ke)}function ve(ye){const J=new Array(ye.length);for(let de=ye.length-1,Ce=1;de>=0;--de)J[de]=Ce,Ce*=ye[de];return J}function we(ye,J,de,Ce){const Be=ye.reduce((Ze,te)=>Ze*te,1);return new R(de,new Ce(Be).fill(J),ye)}function re(ye,J){let de,Ce;if(typeof J=="number")de="float32",Ce=Float32Array;else if(typeof J=="bigint")de="int64",Ce=BigInt64Array;else if(typeof J=="boolean")de="bool",Ce=Uint8Array;else throw new Error(`Unsupported data type: ${typeof J}`);return we(ye,J,de,Ce)}function xe(ye,J){return re(ye.dims,J)}function ce(ye){return we(ye,1n,"int64",BigInt64Array)}function ke(ye){return ce(ye.dims)}function Oe(ye){return we(ye,0n,"int64",BigInt64Array)}function Pe(ye){return Oe(ye.dims)}function tt(ye){const J=ye.reduce((de,Ce)=>de*Ce,1);return new R("float32",Float32Array.from({length:J},()=>Math.random()),ye)}function Ge(ye,J){if(ye.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(ye.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(J))throw new Error("The precision must be either 'binary' or 'ubinary'");const de=J==="binary",Ce=de?"int8":"uint8",Be=de?Int8Array:Uint8Array,Ze=ye.data,te=new Be(Ze.length/8);for(let Ke=0;Ke<Ze.length;++Ke){const je=Ze[Ke]>0?1:0,le=Math.floor(Ke/8),Te=Ke%8;te[le]|=je<<7-Te,de&&Te===0&&(te[le]-=128)}return new R(Ce,te,[ye.dims[0],ye.dims[1]/8])}}},n_={};function ws(Ie){var $=n_[Ie];if($!==void 0)return $.exports;var r=n_[Ie]={exports:{}};return i_[Ie](r,r.exports,ws),r.exports}ws.m=i_;(()=>{var Ie=Object.getPrototypeOf?r=>Object.getPrototypeOf(r):r=>r.__proto__,$;ws.t=function(r,f){if(f&1&&(r=this(r)),f&8||typeof r=="object"&&r&&(f&4&&r.__esModule||f&16&&typeof r.then=="function"))return r;var A=Object.create(null);ws.r(A);var j={};$=$||[null,Ie({}),Ie([]),Ie(Ie)];for(var X=f&2&&r;typeof X=="object"&&!~$.indexOf(X);X=Ie(X))Object.getOwnPropertyNames(X).forEach(R=>j[R]=()=>r[R]);return j.default=()=>r,ws.d(A,j),A}})();ws.d=(Ie,$)=>{for(var r in $)ws.o($,r)&&!ws.o(Ie,r)&&Object.defineProperty(Ie,r,{enumerable:!0,get:$[r]})};ws.o=(Ie,$)=>Object.prototype.hasOwnProperty.call(Ie,$);ws.r=Ie=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(Ie,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Ie,"__esModule",{value:!0})};(()=>{var Ie;if(typeof import.meta.url=="string"&&(Ie=import.meta.url),!Ie)throw new Error("Automatic publicPath is not supported in this browser");Ie=Ie.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),ws.p=Ie})();ws.b=new URL(import.meta.url);var c={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/ws.r(c),ws.d(c,{ASTFeatureExtractor:()=>M.ASTFeatureExtractor,ASTForAudioClassification:()=>r.ASTForAudioClassification,ASTModel:()=>r.ASTModel,ASTPreTrainedModel:()=>r.ASTPreTrainedModel,AlbertForMaskedLM:()=>r.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>r.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>r.AlbertForSequenceClassification,AlbertModel:()=>r.AlbertModel,AlbertPreTrainedModel:()=>r.AlbertPreTrainedModel,AlbertTokenizer:()=>f.AlbertTokenizer,AudioClassificationPipeline:()=>$.AudioClassificationPipeline,AutoConfig:()=>A.AutoConfig,AutoFeatureExtractor:()=>y.AutoFeatureExtractor,AutoImageProcessor:()=>K.AutoImageProcessor,AutoModel:()=>r.AutoModel,AutoModelForAudioClassification:()=>r.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>r.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>r.AutoModelForCTC,AutoModelForCausalLM:()=>r.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>r.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>r.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>r.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>r.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>r.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>r.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>r.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>r.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>r.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>r.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>r.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>r.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>r.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>r.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>r.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>r.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>r.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>r.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>r.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>r.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>r.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>r.AutoModelForVision2Seq,AutoModelForXVector:()=>r.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>r.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>W.AutoProcessor,AutoTokenizer:()=>f.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>$.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>r.BartForConditionalGeneration,BartForSequenceClassification:()=>r.BartForSequenceClassification,BartModel:()=>r.BartModel,BartPretrainedModel:()=>r.BartPretrainedModel,BartTokenizer:()=>f.BartTokenizer,BaseModelOutput:()=>r.BaseModelOutput,BaseStreamer:()=>U.BaseStreamer,BeitFeatureExtractor:()=>O.BeitFeatureExtractor,BeitForImageClassification:()=>r.BeitForImageClassification,BeitModel:()=>r.BeitModel,BeitPreTrainedModel:()=>r.BeitPreTrainedModel,BertForMaskedLM:()=>r.BertForMaskedLM,BertForQuestionAnswering:()=>r.BertForQuestionAnswering,BertForSequenceClassification:()=>r.BertForSequenceClassification,BertForTokenClassification:()=>r.BertForTokenClassification,BertModel:()=>r.BertModel,BertPreTrainedModel:()=>r.BertPreTrainedModel,BertTokenizer:()=>f.BertTokenizer,BitImageProcessor:()=>O.BitImageProcessor,BlenderbotForConditionalGeneration:()=>r.BlenderbotForConditionalGeneration,BlenderbotModel:()=>r.BlenderbotModel,BlenderbotPreTrainedModel:()=>r.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>r.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>r.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>r.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>f.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>f.BlenderbotTokenizer,BloomForCausalLM:()=>r.BloomForCausalLM,BloomModel:()=>r.BloomModel,BloomPreTrainedModel:()=>r.BloomPreTrainedModel,BloomTokenizer:()=>f.BloomTokenizer,CLIPFeatureExtractor:()=>O.CLIPFeatureExtractor,CLIPImageProcessor:()=>O.CLIPImageProcessor,CLIPModel:()=>r.CLIPModel,CLIPPreTrainedModel:()=>r.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>r.CLIPSegForImageSegmentation,CLIPSegModel:()=>r.CLIPSegModel,CLIPSegPreTrainedModel:()=>r.CLIPSegPreTrainedModel,CLIPTextModel:()=>r.CLIPTextModel,CLIPTextModelWithProjection:()=>r.CLIPTextModelWithProjection,CLIPTokenizer:()=>f.CLIPTokenizer,CLIPVisionModel:()=>r.CLIPVisionModel,CLIPVisionModelWithProjection:()=>r.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>r.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>r.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>r.CamembertForSequenceClassification,CamembertForTokenClassification:()=>r.CamembertForTokenClassification,CamembertModel:()=>r.CamembertModel,CamembertPreTrainedModel:()=>r.CamembertPreTrainedModel,CamembertTokenizer:()=>f.CamembertTokenizer,CausalLMOutput:()=>r.CausalLMOutput,CausalLMOutputWithPast:()=>r.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>O.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>r.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>r.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>r.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>M.ClapFeatureExtractor,ClapModel:()=>r.ClapModel,ClapPreTrainedModel:()=>r.ClapPreTrainedModel,ClapTextModelWithProjection:()=>r.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>I.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>r.CodeGenForCausalLM,CodeGenModel:()=>r.CodeGenModel,CodeGenPreTrainedModel:()=>r.CodeGenPreTrainedModel,CodeGenTokenizer:()=>f.CodeGenTokenizer,CodeLlamaTokenizer:()=>f.CodeLlamaTokenizer,CohereForCausalLM:()=>r.CohereForCausalLM,CohereModel:()=>r.CohereModel,CoherePreTrainedModel:()=>r.CoherePreTrainedModel,CohereTokenizer:()=>f.CohereTokenizer,ConvBertForMaskedLM:()=>r.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>r.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>r.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>r.ConvBertForTokenClassification,ConvBertModel:()=>r.ConvBertModel,ConvBertPreTrainedModel:()=>r.ConvBertPreTrainedModel,ConvBertTokenizer:()=>f.ConvBertTokenizer,ConvNextFeatureExtractor:()=>O.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>r.ConvNextForImageClassification,ConvNextImageProcessor:()=>O.ConvNextImageProcessor,ConvNextModel:()=>r.ConvNextModel,ConvNextPreTrainedModel:()=>r.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>r.ConvNextV2ForImageClassification,ConvNextV2Model:()=>r.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>r.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>O.DPTFeatureExtractor,DPTForDepthEstimation:()=>r.DPTForDepthEstimation,DPTImageProcessor:()=>O.DPTImageProcessor,DPTModel:()=>r.DPTModel,DPTPreTrainedModel:()=>r.DPTPreTrainedModel,DebertaForMaskedLM:()=>r.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>r.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>r.DebertaForSequenceClassification,DebertaForTokenClassification:()=>r.DebertaForTokenClassification,DebertaModel:()=>r.DebertaModel,DebertaPreTrainedModel:()=>r.DebertaPreTrainedModel,DebertaTokenizer:()=>f.DebertaTokenizer,DebertaV2ForMaskedLM:()=>r.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>r.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>r.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>r.DebertaV2ForTokenClassification,DebertaV2Model:()=>r.DebertaV2Model,DebertaV2PreTrainedModel:()=>r.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>f.DebertaV2Tokenizer,DecisionTransformerModel:()=>r.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>r.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>O.DeiTFeatureExtractor,DeiTForImageClassification:()=>r.DeiTForImageClassification,DeiTImageProcessor:()=>O.DeiTImageProcessor,DeiTModel:()=>r.DeiTModel,DeiTPreTrainedModel:()=>r.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>r.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>r.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>$.DepthEstimationPipeline,DepthProForDepthEstimation:()=>r.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>r.DepthProPreTrainedModel,DetrFeatureExtractor:()=>O.DetrFeatureExtractor,DetrForObjectDetection:()=>r.DetrForObjectDetection,DetrForSegmentation:()=>r.DetrForSegmentation,DetrImageProcessor:()=>O.DetrImageProcessor,DetrModel:()=>r.DetrModel,DetrObjectDetectionOutput:()=>r.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>r.DetrPreTrainedModel,DetrSegmentationOutput:()=>r.DetrSegmentationOutput,Dinov2ForImageClassification:()=>r.Dinov2ForImageClassification,Dinov2Model:()=>r.Dinov2Model,Dinov2PreTrainedModel:()=>r.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>r.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>r.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>r.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>r.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>r.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>r.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>r.DistilBertForTokenClassification,DistilBertModel:()=>r.DistilBertModel,DistilBertPreTrainedModel:()=>r.DistilBertPreTrainedModel,DistilBertTokenizer:()=>f.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>$.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>O.DonutFeatureExtractor,DonutImageProcessor:()=>O.DonutImageProcessor,DonutSwinModel:()=>r.DonutSwinModel,DonutSwinPreTrainedModel:()=>r.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>r.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>O.EfficientNetImageProcessor,EfficientNetModel:()=>r.EfficientNetModel,EfficientNetPreTrainedModel:()=>r.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>r.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>r.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>r.ElectraForSequenceClassification,ElectraForTokenClassification:()=>r.ElectraForTokenClassification,ElectraModel:()=>r.ElectraModel,ElectraPreTrainedModel:()=>r.ElectraPreTrainedModel,ElectraTokenizer:()=>f.ElectraTokenizer,EosTokenCriteria:()=>q.EosTokenCriteria,EsmForMaskedLM:()=>r.EsmForMaskedLM,EsmForSequenceClassification:()=>r.EsmForSequenceClassification,EsmForTokenClassification:()=>r.EsmForTokenClassification,EsmModel:()=>r.EsmModel,EsmPreTrainedModel:()=>r.EsmPreTrainedModel,EsmTokenizer:()=>f.EsmTokenizer,ExaoneForCausalLM:()=>r.ExaoneForCausalLM,ExaoneModel:()=>r.ExaoneModel,ExaonePreTrainedModel:()=>r.ExaonePreTrainedModel,FFT:()=>g.FFT,FalconForCausalLM:()=>r.FalconForCausalLM,FalconModel:()=>r.FalconModel,FalconPreTrainedModel:()=>r.FalconPreTrainedModel,FalconTokenizer:()=>f.FalconTokenizer,FastViTForImageClassification:()=>r.FastViTForImageClassification,FastViTModel:()=>r.FastViTModel,FastViTPreTrainedModel:()=>r.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>$.FeatureExtractionPipeline,FeatureExtractor:()=>v.FeatureExtractor,FillMaskPipeline:()=>$.FillMaskPipeline,Florence2ForConditionalGeneration:()=>r.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>r.Florence2PreTrainedModel,Florence2Processor:()=>ne.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>I.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>I.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>O.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>r.GLPNForDepthEstimation,GLPNModel:()=>r.GLPNModel,GLPNPreTrainedModel:()=>r.GLPNPreTrainedModel,GPT2LMHeadModel:()=>r.GPT2LMHeadModel,GPT2Model:()=>r.GPT2Model,GPT2PreTrainedModel:()=>r.GPT2PreTrainedModel,GPT2Tokenizer:()=>f.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>r.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>r.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>r.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>r.GPTJForCausalLM,GPTJModel:()=>r.GPTJModel,GPTJPreTrainedModel:()=>r.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>r.GPTNeoForCausalLM,GPTNeoModel:()=>r.GPTNeoModel,GPTNeoPreTrainedModel:()=>r.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>r.GPTNeoXForCausalLM,GPTNeoXModel:()=>r.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>r.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>f.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>r.Gemma2ForCausalLM,Gemma2Model:()=>r.Gemma2Model,Gemma2PreTrainedModel:()=>r.Gemma2PreTrainedModel,GemmaForCausalLM:()=>r.GemmaForCausalLM,GemmaModel:()=>r.GemmaModel,GemmaPreTrainedModel:()=>r.GemmaPreTrainedModel,GemmaTokenizer:()=>f.GemmaTokenizer,GlmForCausalLM:()=>r.GlmForCausalLM,GlmModel:()=>r.GlmModel,GlmPreTrainedModel:()=>r.GlmPreTrainedModel,GraniteForCausalLM:()=>r.GraniteForCausalLM,GraniteModel:()=>r.GraniteModel,GranitePreTrainedModel:()=>r.GranitePreTrainedModel,Grok1Tokenizer:()=>f.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>r.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>O.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>r.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>ne.GroundingDinoProcessor,GroupViTModel:()=>r.GroupViTModel,GroupViTPreTrainedModel:()=>r.GroupViTPreTrainedModel,HeliumForCausalLM:()=>r.HeliumForCausalLM,HeliumModel:()=>r.HeliumModel,HeliumPreTrainedModel:()=>r.HeliumPreTrainedModel,HerbertTokenizer:()=>f.HerbertTokenizer,HieraForImageClassification:()=>r.HieraForImageClassification,HieraModel:()=>r.HieraModel,HieraPreTrainedModel:()=>r.HieraPreTrainedModel,HubertForCTC:()=>r.HubertForCTC,HubertForSequenceClassification:()=>r.HubertForSequenceClassification,HubertModel:()=>r.HubertModel,HubertPreTrainedModel:()=>r.HubertPreTrainedModel,IJepaForImageClassification:()=>r.IJepaForImageClassification,IJepaModel:()=>r.IJepaModel,IJepaPreTrainedModel:()=>r.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>r.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>O.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>r.Idefics3PreTrainedModel,Idefics3Processor:()=>ne.Idefics3Processor,ImageClassificationPipeline:()=>$.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>$.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>M.ImageFeatureExtractor,ImageMattingOutput:()=>r.ImageMattingOutput,ImageProcessor:()=>b.ImageProcessor,ImageSegmentationPipeline:()=>$.ImageSegmentationPipeline,ImageToImagePipeline:()=>$.ImageToImagePipeline,ImageToTextPipeline:()=>$.ImageToTextPipeline,InterruptableStoppingCriteria:()=>q.InterruptableStoppingCriteria,JAISLMHeadModel:()=>r.JAISLMHeadModel,JAISModel:()=>r.JAISModel,JAISPreTrainedModel:()=>r.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>O.JinaCLIPImageProcessor,JinaCLIPModel:()=>r.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>r.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>ne.JinaCLIPProcessor,JinaCLIPTextModel:()=>r.JinaCLIPTextModel,JinaCLIPVisionModel:()=>r.JinaCLIPVisionModel,LlamaForCausalLM:()=>r.LlamaForCausalLM,LlamaModel:()=>r.LlamaModel,LlamaPreTrainedModel:()=>r.LlamaPreTrainedModel,LlamaTokenizer:()=>f.LlamaTokenizer,LlavaForConditionalGeneration:()=>r.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>r.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>O.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>r.LlavaPreTrainedModel,LogitsProcessor:()=>I.LogitsProcessor,LogitsProcessorList:()=>I.LogitsProcessorList,LogitsWarper:()=>I.LogitsWarper,LongT5ForConditionalGeneration:()=>r.LongT5ForConditionalGeneration,LongT5Model:()=>r.LongT5Model,LongT5PreTrainedModel:()=>r.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>r.M2M100ForConditionalGeneration,M2M100Model:()=>r.M2M100Model,M2M100PreTrainedModel:()=>r.M2M100PreTrainedModel,M2M100Tokenizer:()=>f.M2M100Tokenizer,MBart50Tokenizer:()=>f.MBart50Tokenizer,MBartForCausalLM:()=>r.MBartForCausalLM,MBartForConditionalGeneration:()=>r.MBartForConditionalGeneration,MBartForSequenceClassification:()=>r.MBartForSequenceClassification,MBartModel:()=>r.MBartModel,MBartPreTrainedModel:()=>r.MBartPreTrainedModel,MBartTokenizer:()=>f.MBartTokenizer,MPNetForMaskedLM:()=>r.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>r.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>r.MPNetForSequenceClassification,MPNetForTokenClassification:()=>r.MPNetForTokenClassification,MPNetModel:()=>r.MPNetModel,MPNetPreTrainedModel:()=>r.MPNetPreTrainedModel,MPNetTokenizer:()=>f.MPNetTokenizer,MT5ForConditionalGeneration:()=>r.MT5ForConditionalGeneration,MT5Model:()=>r.MT5Model,MT5PreTrainedModel:()=>r.MT5PreTrainedModel,MarianMTModel:()=>r.MarianMTModel,MarianModel:()=>r.MarianModel,MarianPreTrainedModel:()=>r.MarianPreTrainedModel,MarianTokenizer:()=>f.MarianTokenizer,Mask2FormerImageProcessor:()=>O.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>O.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>r.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>O.MaskFormerImageProcessor,MaskFormerModel:()=>r.MaskFormerModel,MaskFormerPreTrainedModel:()=>r.MaskFormerPreTrainedModel,MaskedLMOutput:()=>r.MaskedLMOutput,MaxLengthCriteria:()=>q.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>r.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>r.MgpstrModelOutput,MgpstrPreTrainedModel:()=>r.MgpstrPreTrainedModel,MgpstrProcessor:()=>ne.MgpstrProcessor,MgpstrTokenizer:()=>f.MgpstrTokenizer,MinLengthLogitsProcessor:()=>I.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>I.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>r.MistralForCausalLM,MistralModel:()=>r.MistralModel,MistralPreTrainedModel:()=>r.MistralPreTrainedModel,MobileBertForMaskedLM:()=>r.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>r.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>r.MobileBertForSequenceClassification,MobileBertModel:()=>r.MobileBertModel,MobileBertPreTrainedModel:()=>r.MobileBertPreTrainedModel,MobileBertTokenizer:()=>f.MobileBertTokenizer,MobileLLMForCausalLM:()=>r.MobileLLMForCausalLM,MobileLLMModel:()=>r.MobileLLMModel,MobileLLMPreTrainedModel:()=>r.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>O.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>r.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>O.MobileNetV1ImageProcessor,MobileNetV1Model:()=>r.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>r.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>O.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>r.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>O.MobileNetV2ImageProcessor,MobileNetV2Model:()=>r.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>r.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>O.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>r.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>O.MobileNetV3ImageProcessor,MobileNetV3Model:()=>r.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>r.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>O.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>r.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>O.MobileNetV4ImageProcessor,MobileNetV4Model:()=>r.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>r.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>O.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>r.MobileViTForImageClassification,MobileViTImageProcessor:()=>O.MobileViTImageProcessor,MobileViTModel:()=>r.MobileViTModel,MobileViTPreTrainedModel:()=>r.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>r.MobileViTV2ForImageClassification,MobileViTV2Model:()=>r.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>r.MobileViTV2PreTrainedModel,ModelOutput:()=>r.ModelOutput,ModernBertForMaskedLM:()=>r.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>r.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>r.ModernBertForTokenClassification,ModernBertModel:()=>r.ModernBertModel,ModernBertPreTrainedModel:()=>r.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>r.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>M.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>r.MoonshineForConditionalGeneration,MoonshineModel:()=>r.MoonshineModel,MoonshinePreTrainedModel:()=>r.MoonshinePreTrainedModel,MoonshineProcessor:()=>ne.MoonshineProcessor,MptForCausalLM:()=>r.MptForCausalLM,MptModel:()=>r.MptModel,MptPreTrainedModel:()=>r.MptPreTrainedModel,MultiModalityCausalLM:()=>r.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>r.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>r.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>r.MusicgenForConditionalGeneration,MusicgenModel:()=>r.MusicgenModel,MusicgenPreTrainedModel:()=>r.MusicgenPreTrainedModel,NllbTokenizer:()=>f.NllbTokenizer,NoBadWordsLogitsProcessor:()=>I.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>I.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>r.NomicBertModel,NomicBertPreTrainedModel:()=>r.NomicBertPreTrainedModel,NougatImageProcessor:()=>O.NougatImageProcessor,NougatTokenizer:()=>f.NougatTokenizer,OPTForCausalLM:()=>r.OPTForCausalLM,OPTModel:()=>r.OPTModel,OPTPreTrainedModel:()=>r.OPTPreTrainedModel,ObjectDetectionPipeline:()=>$.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>r.Olmo2ForCausalLM,Olmo2Model:()=>r.Olmo2Model,Olmo2PreTrainedModel:()=>r.Olmo2PreTrainedModel,OlmoForCausalLM:()=>r.OlmoForCausalLM,OlmoModel:()=>r.OlmoModel,OlmoPreTrainedModel:()=>r.OlmoPreTrainedModel,OpenELMForCausalLM:()=>r.OpenELMForCausalLM,OpenELMModel:()=>r.OpenELMModel,OpenELMPreTrainedModel:()=>r.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>O.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>r.OwlViTForObjectDetection,OwlViTImageProcessor:()=>O.OwlViTImageProcessor,OwlViTModel:()=>r.OwlViTModel,OwlViTPreTrainedModel:()=>r.OwlViTPreTrainedModel,OwlViTProcessor:()=>ne.OwlViTProcessor,Owlv2ForObjectDetection:()=>r.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>O.Owlv2ImageProcessor,Owlv2Model:()=>r.Owlv2Model,Owlv2PreTrainedModel:()=>r.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>r.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>r.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>ne.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>r.PatchTSMixerForPrediction,PatchTSMixerModel:()=>r.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>r.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>r.PatchTSTForPrediction,PatchTSTModel:()=>r.PatchTSTModel,PatchTSTPreTrainedModel:()=>r.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>r.Phi3ForCausalLM,Phi3Model:()=>r.Phi3Model,Phi3PreTrainedModel:()=>r.Phi3PreTrainedModel,Phi3VForCausalLM:()=>r.Phi3VForCausalLM,Phi3VImageProcessor:()=>O.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>r.Phi3VPreTrainedModel,Phi3VProcessor:()=>ne.Phi3VProcessor,PhiForCausalLM:()=>r.PhiForCausalLM,PhiModel:()=>r.PhiModel,PhiPreTrainedModel:()=>r.PhiPreTrainedModel,Pipeline:()=>$.Pipeline,PreTrainedModel:()=>r.PreTrainedModel,PreTrainedTokenizer:()=>f.PreTrainedTokenizer,PretrainedConfig:()=>A.PretrainedConfig,PretrainedMixin:()=>r.PretrainedMixin,Processor:()=>se.Processor,PvtForImageClassification:()=>r.PvtForImageClassification,PvtImageProcessor:()=>O.PvtImageProcessor,PvtModel:()=>r.PvtModel,PvtPreTrainedModel:()=>r.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>M.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>r.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>r.PyAnnoteModel,PyAnnotePreTrainedModel:()=>r.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>ne.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>r.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>$.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>r.Qwen2ForCausalLM,Qwen2Model:()=>r.Qwen2Model,Qwen2PreTrainedModel:()=>r.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>f.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>r.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>O.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>r.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>ne.Qwen2VLProcessor,RTDetrForObjectDetection:()=>r.RTDetrForObjectDetection,RTDetrImageProcessor:()=>O.RTDetrImageProcessor,RTDetrModel:()=>r.RTDetrModel,RTDetrObjectDetectionOutput:()=>r.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>r.RTDetrPreTrainedModel,RawAudio:()=>j.RawAudio,RawImage:()=>X.RawImage,RepetitionPenaltyLogitsProcessor:()=>I.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>r.ResNetForImageClassification,ResNetModel:()=>r.ResNetModel,ResNetPreTrainedModel:()=>r.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>r.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>r.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>r.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>r.RoFormerForTokenClassification,RoFormerModel:()=>r.RoFormerModel,RoFormerPreTrainedModel:()=>r.RoFormerPreTrainedModel,RoFormerTokenizer:()=>f.RoFormerTokenizer,RobertaForMaskedLM:()=>r.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>r.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>r.RobertaForSequenceClassification,RobertaForTokenClassification:()=>r.RobertaForTokenClassification,RobertaModel:()=>r.RobertaModel,RobertaPreTrainedModel:()=>r.RobertaPreTrainedModel,RobertaTokenizer:()=>f.RobertaTokenizer,SamImageProcessor:()=>O.SamImageProcessor,SamImageSegmentationOutput:()=>r.SamImageSegmentationOutput,SamModel:()=>r.SamModel,SamPreTrainedModel:()=>r.SamPreTrainedModel,SamProcessor:()=>ne.SamProcessor,SapiensForDepthEstimation:()=>r.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>r.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>r.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>r.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>M.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>O.SegformerFeatureExtractor,SegformerForImageClassification:()=>r.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>r.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>O.SegformerImageProcessor,SegformerModel:()=>r.SegformerModel,SegformerPreTrainedModel:()=>r.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>r.Seq2SeqLMOutput,SequenceClassifierOutput:()=>r.SequenceClassifierOutput,SiglipImageProcessor:()=>O.SiglipImageProcessor,SiglipModel:()=>r.SiglipModel,SiglipPreTrainedModel:()=>r.SiglipPreTrainedModel,SiglipTextModel:()=>r.SiglipTextModel,SiglipTokenizer:()=>f.SiglipTokenizer,SiglipVisionModel:()=>r.SiglipVisionModel,SpeechT5FeatureExtractor:()=>M.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>r.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>r.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>r.SpeechT5HifiGan,SpeechT5Model:()=>r.SpeechT5Model,SpeechT5PreTrainedModel:()=>r.SpeechT5PreTrainedModel,SpeechT5Processor:()=>ne.SpeechT5Processor,SpeechT5Tokenizer:()=>f.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>r.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>r.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>r.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>r.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>r.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>f.SqueezeBertTokenizer,StableLmForCausalLM:()=>r.StableLmForCausalLM,StableLmModel:()=>r.StableLmModel,StableLmPreTrainedModel:()=>r.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>r.Starcoder2ForCausalLM,Starcoder2Model:()=>r.Starcoder2Model,Starcoder2PreTrainedModel:()=>r.Starcoder2PreTrainedModel,StoppingCriteria:()=>q.StoppingCriteria,StoppingCriteriaList:()=>q.StoppingCriteriaList,StyleTextToSpeech2Model:()=>r.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>r.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>$.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>I.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>r.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>O.Swin2SRImageProcessor,Swin2SRModel:()=>r.Swin2SRModel,Swin2SRPreTrainedModel:()=>r.Swin2SRPreTrainedModel,SwinForImageClassification:()=>r.SwinForImageClassification,SwinModel:()=>r.SwinModel,SwinPreTrainedModel:()=>r.SwinPreTrainedModel,T5ForConditionalGeneration:()=>r.T5ForConditionalGeneration,T5Model:()=>r.T5Model,T5PreTrainedModel:()=>r.T5PreTrainedModel,T5Tokenizer:()=>f.T5Tokenizer,TableTransformerForObjectDetection:()=>r.TableTransformerForObjectDetection,TableTransformerModel:()=>r.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>r.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>r.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>I.TemperatureLogitsWarper,Tensor:()=>R.Tensor,Text2TextGenerationPipeline:()=>$.Text2TextGenerationPipeline,TextClassificationPipeline:()=>$.TextClassificationPipeline,TextGenerationPipeline:()=>$.TextGenerationPipeline,TextStreamer:()=>U.TextStreamer,TextToAudioPipeline:()=>$.TextToAudioPipeline,TokenClassificationPipeline:()=>$.TokenClassificationPipeline,TokenClassifierOutput:()=>r.TokenClassifierOutput,TokenizerModel:()=>f.TokenizerModel,TopKLogitsWarper:()=>I.TopKLogitsWarper,TopPLogitsWarper:()=>I.TopPLogitsWarper,TrOCRForCausalLM:()=>r.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>r.TrOCRPreTrainedModel,TranslationPipeline:()=>$.TranslationPipeline,UniSpeechForCTC:()=>r.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>r.UniSpeechForSequenceClassification,UniSpeechModel:()=>r.UniSpeechModel,UniSpeechPreTrainedModel:()=>r.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>r.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>r.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>r.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>r.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>r.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>ne.VLChatProcessor,VLMImageProcessor:()=>O.VLMImageProcessor,ViTFeatureExtractor:()=>O.ViTFeatureExtractor,ViTForImageClassification:()=>r.ViTForImageClassification,ViTImageProcessor:()=>O.ViTImageProcessor,ViTMAEModel:()=>r.ViTMAEModel,ViTMAEPreTrainedModel:()=>r.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>r.ViTMSNForImageClassification,ViTMSNModel:()=>r.ViTMSNModel,ViTMSNPreTrainedModel:()=>r.ViTMSNPreTrainedModel,ViTModel:()=>r.ViTModel,ViTPreTrainedModel:()=>r.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>r.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>r.VitMatteForImageMatting,VitMatteImageProcessor:()=>O.VitMatteImageProcessor,VitMattePreTrainedModel:()=>r.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>r.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>O.VitPoseImageProcessor,VitPosePreTrainedModel:()=>r.VitPosePreTrainedModel,VitsModel:()=>r.VitsModel,VitsModelOutput:()=>r.VitsModelOutput,VitsPreTrainedModel:()=>r.VitsPreTrainedModel,VitsTokenizer:()=>f.VitsTokenizer,Wav2Vec2BertForCTC:()=>r.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>r.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>r.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>r.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>f.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>M.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>r.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>r.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>r.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>r.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>r.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>ne.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>ne.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>r.WavLMForAudioFrameClassification,WavLMForCTC:()=>r.WavLMForCTC,WavLMForSequenceClassification:()=>r.WavLMForSequenceClassification,WavLMForXVector:()=>r.WavLMForXVector,WavLMModel:()=>r.WavLMModel,WavLMPreTrainedModel:()=>r.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>M.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>r.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>r.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>M.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>r.WhisperForConditionalGeneration,WhisperModel:()=>r.WhisperModel,WhisperPreTrainedModel:()=>r.WhisperPreTrainedModel,WhisperProcessor:()=>ne.WhisperProcessor,WhisperTextStreamer:()=>U.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>I.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>f.WhisperTokenizer,XLMForQuestionAnswering:()=>r.XLMForQuestionAnswering,XLMForSequenceClassification:()=>r.XLMForSequenceClassification,XLMForTokenClassification:()=>r.XLMForTokenClassification,XLMModel:()=>r.XLMModel,XLMPreTrainedModel:()=>r.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>r.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>r.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>r.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>r.XLMRobertaForTokenClassification,XLMRobertaModel:()=>r.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>r.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>f.XLMRobertaTokenizer,XLMTokenizer:()=>f.XLMTokenizer,XLMWithLMHeadModel:()=>r.XLMWithLMHeadModel,XVectorOutput:()=>r.XVectorOutput,YolosFeatureExtractor:()=>O.YolosFeatureExtractor,YolosForObjectDetection:()=>r.YolosForObjectDetection,YolosImageProcessor:()=>O.YolosImageProcessor,YolosModel:()=>r.YolosModel,YolosObjectDetectionOutput:()=>r.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>r.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>$.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>$.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>$.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>$.ZeroShotObjectDetectionPipeline,bankers_round:()=>g.bankers_round,cat:()=>R.cat,cos_sim:()=>g.cos_sim,dot:()=>g.dot,dynamic_time_warping:()=>g.dynamic_time_warping,env:()=>Ie.env,full:()=>R.full,full_like:()=>R.full_like,getKeyValueShapes:()=>A.getKeyValueShapes,hamming:()=>j.hamming,hanning:()=>j.hanning,interpolate:()=>R.interpolate,interpolate_4d:()=>R.interpolate_4d,interpolate_data:()=>g.interpolate_data,is_chinese_char:()=>f.is_chinese_char,layer_norm:()=>R.layer_norm,load_image:()=>X.load_image,log_softmax:()=>g.log_softmax,magnitude:()=>g.magnitude,matmul:()=>R.matmul,max:()=>g.max,mean:()=>R.mean,mean_pooling:()=>R.mean_pooling,medianFilter:()=>g.medianFilter,mel_filter_bank:()=>j.mel_filter_bank,min:()=>g.min,ones:()=>R.ones,ones_like:()=>R.ones_like,permute:()=>R.permute,permute_data:()=>g.permute_data,pipeline:()=>$.pipeline,quantize_embeddings:()=>R.quantize_embeddings,rand:()=>R.rand,read_audio:()=>j.read_audio,rfft:()=>R.rfft,round:()=>g.round,slice:()=>R.slice,softmax:()=>g.softmax,spectrogram:()=>j.spectrogram,stack:()=>R.stack,std_mean:()=>R.std_mean,topk:()=>R.topk,window_function:()=>j.window_function,zeros:()=>R.zeros,zeros_like:()=>R.zeros_like});var Ie=ws("./src/env.js"),$=ws("./src/pipelines.js"),r=ws("./src/models.js"),f=ws("./src/tokenizers.js"),A=ws("./src/configs.js"),j=ws("./src/utils/audio.js"),X=ws("./src/utils/image.js"),R=ws("./src/utils/tensor.js"),g=ws("./src/utils/maths.js"),v=ws("./src/base/feature_extraction_utils.js"),M=ws("./src/models/feature_extractors.js"),y=ws("./src/models/auto/feature_extraction_auto.js"),b=ws("./src/base/image_processors_utils.js"),O=ws("./src/models/image_processors.js"),K=ws("./src/models/auto/image_processing_auto.js"),se=ws("./src/base/processing_utils.js"),ne=ws("./src/models/processors.js"),W=ws("./src/models/auto/processing_auto.js"),U=ws("./src/generation/streamers.js"),q=ws("./src/generation/stopping_criteria.js"),I=ws("./src/generation/logits_process.js")})();c.ASTFeatureExtractor;c.ASTForAudioClassification;c.ASTModel;c.ASTPreTrainedModel;c.AlbertForMaskedLM;c.AlbertForQuestionAnswering;c.AlbertForSequenceClassification;c.AlbertModel;c.AlbertPreTrainedModel;c.AlbertTokenizer;c.AudioClassificationPipeline;c.AutoConfig;c.AutoFeatureExtractor;c.AutoImageProcessor;c.AutoModel;c.AutoModelForAudioClassification;c.AutoModelForAudioFrameClassification;c.AutoModelForCTC;c.AutoModelForCausalLM;c.AutoModelForDepthEstimation;c.AutoModelForDocumentQuestionAnswering;c.AutoModelForImageClassification;c.AutoModelForImageFeatureExtraction;c.AutoModelForImageMatting;c.AutoModelForImageSegmentation;c.AutoModelForImageToImage;c.AutoModelForMaskGeneration;c.AutoModelForMaskedLM;c.AutoModelForNormalEstimation;c.AutoModelForObjectDetection;c.AutoModelForPoseEstimation;c.AutoModelForQuestionAnswering;c.AutoModelForSemanticSegmentation;c.AutoModelForSeq2SeqLM;c.AutoModelForSequenceClassification;c.AutoModelForSpeechSeq2Seq;c.AutoModelForTextToSpectrogram;c.AutoModelForTextToWaveform;c.AutoModelForTokenClassification;c.AutoModelForUniversalSegmentation;c.AutoModelForVision2Seq;c.AutoModelForXVector;c.AutoModelForZeroShotObjectDetection;var Lf=c.AutoProcessor,zf=c.AutoTokenizer;c.AutomaticSpeechRecognitionPipeline;c.BartForConditionalGeneration;c.BartForSequenceClassification;c.BartModel;c.BartPretrainedModel;c.BartTokenizer;c.BaseModelOutput;c.BaseStreamer;c.BeitFeatureExtractor;c.BeitForImageClassification;c.BeitModel;c.BeitPreTrainedModel;c.BertForMaskedLM;c.BertForQuestionAnswering;c.BertForSequenceClassification;c.BertForTokenClassification;c.BertModel;c.BertPreTrainedModel;c.BertTokenizer;c.BitImageProcessor;c.BlenderbotForConditionalGeneration;c.BlenderbotModel;c.BlenderbotPreTrainedModel;c.BlenderbotSmallForConditionalGeneration;c.BlenderbotSmallModel;c.BlenderbotSmallPreTrainedModel;c.BlenderbotSmallTokenizer;c.BlenderbotTokenizer;c.BloomForCausalLM;c.BloomModel;c.BloomPreTrainedModel;c.BloomTokenizer;c.CLIPFeatureExtractor;c.CLIPImageProcessor;c.CLIPModel;c.CLIPPreTrainedModel;c.CLIPSegForImageSegmentation;c.CLIPSegModel;c.CLIPSegPreTrainedModel;c.CLIPTextModel;c.CLIPTextModelWithProjection;c.CLIPTokenizer;c.CLIPVisionModel;c.CLIPVisionModelWithProjection;c.CamembertForMaskedLM;c.CamembertForQuestionAnswering;c.CamembertForSequenceClassification;c.CamembertForTokenClassification;c.CamembertModel;c.CamembertPreTrainedModel;c.CamembertTokenizer;c.CausalLMOutput;c.CausalLMOutputWithPast;c.ChineseCLIPFeatureExtractor;c.ChineseCLIPModel;c.ChineseCLIPPreTrainedModel;c.ClapAudioModelWithProjection;c.ClapFeatureExtractor;c.ClapModel;c.ClapPreTrainedModel;c.ClapTextModelWithProjection;c.ClassifierFreeGuidanceLogitsProcessor;c.CodeGenForCausalLM;c.CodeGenModel;c.CodeGenPreTrainedModel;c.CodeGenTokenizer;c.CodeLlamaTokenizer;c.CohereForCausalLM;c.CohereModel;c.CoherePreTrainedModel;c.CohereTokenizer;c.ConvBertForMaskedLM;c.ConvBertForQuestionAnswering;c.ConvBertForSequenceClassification;c.ConvBertForTokenClassification;c.ConvBertModel;c.ConvBertPreTrainedModel;c.ConvBertTokenizer;c.ConvNextFeatureExtractor;c.ConvNextForImageClassification;c.ConvNextImageProcessor;c.ConvNextModel;c.ConvNextPreTrainedModel;c.ConvNextV2ForImageClassification;c.ConvNextV2Model;c.ConvNextV2PreTrainedModel;c.DPTFeatureExtractor;c.DPTForDepthEstimation;c.DPTImageProcessor;c.DPTModel;c.DPTPreTrainedModel;c.DebertaForMaskedLM;c.DebertaForQuestionAnswering;c.DebertaForSequenceClassification;c.DebertaForTokenClassification;c.DebertaModel;c.DebertaPreTrainedModel;c.DebertaTokenizer;c.DebertaV2ForMaskedLM;c.DebertaV2ForQuestionAnswering;c.DebertaV2ForSequenceClassification;c.DebertaV2ForTokenClassification;c.DebertaV2Model;c.DebertaV2PreTrainedModel;c.DebertaV2Tokenizer;c.DecisionTransformerModel;c.DecisionTransformerPreTrainedModel;c.DeiTFeatureExtractor;c.DeiTForImageClassification;c.DeiTImageProcessor;c.DeiTModel;c.DeiTPreTrainedModel;c.DepthAnythingForDepthEstimation;c.DepthAnythingPreTrainedModel;c.DepthEstimationPipeline;c.DepthProForDepthEstimation;c.DepthProPreTrainedModel;c.DetrFeatureExtractor;c.DetrForObjectDetection;c.DetrForSegmentation;c.DetrImageProcessor;c.DetrModel;c.DetrObjectDetectionOutput;c.DetrPreTrainedModel;c.DetrSegmentationOutput;c.Dinov2ForImageClassification;c.Dinov2Model;c.Dinov2PreTrainedModel;c.Dinov2WithRegistersForImageClassification;c.Dinov2WithRegistersModel;c.Dinov2WithRegistersPreTrainedModel;c.DistilBertForMaskedLM;c.DistilBertForQuestionAnswering;c.DistilBertForSequenceClassification;c.DistilBertForTokenClassification;c.DistilBertModel;c.DistilBertPreTrainedModel;c.DistilBertTokenizer;c.DocumentQuestionAnsweringPipeline;c.DonutFeatureExtractor;c.DonutImageProcessor;c.DonutSwinModel;c.DonutSwinPreTrainedModel;c.EfficientNetForImageClassification;c.EfficientNetImageProcessor;c.EfficientNetModel;c.EfficientNetPreTrainedModel;c.ElectraForMaskedLM;c.ElectraForQuestionAnswering;c.ElectraForSequenceClassification;c.ElectraForTokenClassification;c.ElectraModel;c.ElectraPreTrainedModel;c.ElectraTokenizer;c.EosTokenCriteria;c.EsmForMaskedLM;c.EsmForSequenceClassification;c.EsmForTokenClassification;c.EsmModel;c.EsmPreTrainedModel;c.EsmTokenizer;c.ExaoneForCausalLM;c.ExaoneModel;c.ExaonePreTrainedModel;c.FFT;c.FalconForCausalLM;c.FalconModel;c.FalconPreTrainedModel;c.FalconTokenizer;c.FastViTForImageClassification;c.FastViTModel;c.FastViTPreTrainedModel;c.FeatureExtractionPipeline;c.FeatureExtractor;c.FillMaskPipeline;c.Florence2ForConditionalGeneration;c.Florence2PreTrainedModel;c.Florence2Processor;c.ForcedBOSTokenLogitsProcessor;c.ForcedEOSTokenLogitsProcessor;c.GLPNFeatureExtractor;c.GLPNForDepthEstimation;c.GLPNModel;c.GLPNPreTrainedModel;c.GPT2LMHeadModel;c.GPT2Model;c.GPT2PreTrainedModel;c.GPT2Tokenizer;c.GPTBigCodeForCausalLM;c.GPTBigCodeModel;c.GPTBigCodePreTrainedModel;c.GPTJForCausalLM;c.GPTJModel;c.GPTJPreTrainedModel;c.GPTNeoForCausalLM;c.GPTNeoModel;c.GPTNeoPreTrainedModel;c.GPTNeoXForCausalLM;c.GPTNeoXModel;c.GPTNeoXPreTrainedModel;c.GPTNeoXTokenizer;c.Gemma2ForCausalLM;c.Gemma2Model;c.Gemma2PreTrainedModel;c.GemmaForCausalLM;c.GemmaModel;c.GemmaPreTrainedModel;c.GemmaTokenizer;c.GlmForCausalLM;c.GlmModel;c.GlmPreTrainedModel;c.GraniteForCausalLM;c.GraniteModel;c.GranitePreTrainedModel;c.Grok1Tokenizer;c.GroundingDinoForObjectDetection;c.GroundingDinoImageProcessor;c.GroundingDinoPreTrainedModel;c.GroundingDinoProcessor;c.GroupViTModel;c.GroupViTPreTrainedModel;c.HeliumForCausalLM;c.HeliumModel;c.HeliumPreTrainedModel;c.HerbertTokenizer;c.HieraForImageClassification;c.HieraModel;c.HieraPreTrainedModel;c.HubertForCTC;c.HubertForSequenceClassification;c.HubertModel;c.HubertPreTrainedModel;c.IJepaForImageClassification;c.IJepaModel;c.IJepaPreTrainedModel;c.Idefics3ForConditionalGeneration;c.Idefics3ImageProcessor;c.Idefics3PreTrainedModel;c.Idefics3Processor;c.ImageClassificationPipeline;c.ImageFeatureExtractionPipeline;c.ImageFeatureExtractor;c.ImageMattingOutput;c.ImageProcessor;c.ImageSegmentationPipeline;c.ImageToImagePipeline;c.ImageToTextPipeline;c.InterruptableStoppingCriteria;c.JAISLMHeadModel;c.JAISModel;c.JAISPreTrainedModel;c.JinaCLIPImageProcessor;c.JinaCLIPModel;c.JinaCLIPPreTrainedModel;c.JinaCLIPProcessor;c.JinaCLIPTextModel;c.JinaCLIPVisionModel;c.LlamaForCausalLM;c.LlamaModel;c.LlamaPreTrainedModel;c.LlamaTokenizer;c.LlavaForConditionalGeneration;c.LlavaOnevisionForConditionalGeneration;c.LlavaOnevisionImageProcessor;c.LlavaPreTrainedModel;c.LogitsProcessor;c.LogitsProcessorList;c.LogitsWarper;c.LongT5ForConditionalGeneration;c.LongT5Model;c.LongT5PreTrainedModel;c.M2M100ForConditionalGeneration;c.M2M100Model;c.M2M100PreTrainedModel;c.M2M100Tokenizer;c.MBart50Tokenizer;c.MBartForCausalLM;c.MBartForConditionalGeneration;c.MBartForSequenceClassification;c.MBartModel;c.MBartPreTrainedModel;c.MBartTokenizer;c.MPNetForMaskedLM;c.MPNetForQuestionAnswering;c.MPNetForSequenceClassification;c.MPNetForTokenClassification;c.MPNetModel;c.MPNetPreTrainedModel;c.MPNetTokenizer;c.MT5ForConditionalGeneration;c.MT5Model;c.MT5PreTrainedModel;c.MarianMTModel;c.MarianModel;c.MarianPreTrainedModel;c.MarianTokenizer;c.Mask2FormerImageProcessor;c.MaskFormerFeatureExtractor;c.MaskFormerForInstanceSegmentation;c.MaskFormerImageProcessor;c.MaskFormerModel;c.MaskFormerPreTrainedModel;c.MaskedLMOutput;c.MaxLengthCriteria;c.MgpstrForSceneTextRecognition;c.MgpstrModelOutput;c.MgpstrPreTrainedModel;c.MgpstrProcessor;c.MgpstrTokenizer;c.MinLengthLogitsProcessor;c.MinNewTokensLengthLogitsProcessor;c.MistralForCausalLM;c.MistralModel;c.MistralPreTrainedModel;c.MobileBertForMaskedLM;c.MobileBertForQuestionAnswering;c.MobileBertForSequenceClassification;c.MobileBertModel;c.MobileBertPreTrainedModel;c.MobileBertTokenizer;c.MobileLLMForCausalLM;c.MobileLLMModel;c.MobileLLMPreTrainedModel;c.MobileNetV1FeatureExtractor;c.MobileNetV1ForImageClassification;c.MobileNetV1ImageProcessor;c.MobileNetV1Model;c.MobileNetV1PreTrainedModel;c.MobileNetV2FeatureExtractor;c.MobileNetV2ForImageClassification;c.MobileNetV2ImageProcessor;c.MobileNetV2Model;c.MobileNetV2PreTrainedModel;c.MobileNetV3FeatureExtractor;c.MobileNetV3ForImageClassification;c.MobileNetV3ImageProcessor;c.MobileNetV3Model;c.MobileNetV3PreTrainedModel;c.MobileNetV4FeatureExtractor;c.MobileNetV4ForImageClassification;c.MobileNetV4ImageProcessor;c.MobileNetV4Model;c.MobileNetV4PreTrainedModel;c.MobileViTFeatureExtractor;c.MobileViTForImageClassification;c.MobileViTImageProcessor;c.MobileViTModel;c.MobileViTPreTrainedModel;c.MobileViTV2ForImageClassification;c.MobileViTV2Model;c.MobileViTV2PreTrainedModel;c.ModelOutput;c.ModernBertForMaskedLM;c.ModernBertForSequenceClassification;c.ModernBertForTokenClassification;c.ModernBertModel;c.ModernBertPreTrainedModel;c.Moondream1ForConditionalGeneration;c.MoonshineFeatureExtractor;c.MoonshineForConditionalGeneration;c.MoonshineModel;c.MoonshinePreTrainedModel;c.MoonshineProcessor;c.MptForCausalLM;c.MptModel;c.MptPreTrainedModel;c.MultiModalityCausalLM;c.MultiModalityPreTrainedModel;c.MusicgenForCausalLM;c.MusicgenForConditionalGeneration;c.MusicgenModel;c.MusicgenPreTrainedModel;c.NllbTokenizer;c.NoBadWordsLogitsProcessor;c.NoRepeatNGramLogitsProcessor;c.NomicBertModel;c.NomicBertPreTrainedModel;c.NougatImageProcessor;c.NougatTokenizer;c.OPTForCausalLM;c.OPTModel;c.OPTPreTrainedModel;c.ObjectDetectionPipeline;c.Olmo2ForCausalLM;c.Olmo2Model;c.Olmo2PreTrainedModel;c.OlmoForCausalLM;c.OlmoModel;c.OlmoPreTrainedModel;c.OpenELMForCausalLM;c.OpenELMModel;c.OpenELMPreTrainedModel;c.OwlViTFeatureExtractor;c.OwlViTForObjectDetection;c.OwlViTImageProcessor;c.OwlViTModel;c.OwlViTPreTrainedModel;c.OwlViTProcessor;c.Owlv2ForObjectDetection;c.Owlv2ImageProcessor;c.Owlv2Model;c.Owlv2PreTrainedModel;c.PaliGemmaForConditionalGeneration;c.PaliGemmaPreTrainedModel;c.PaliGemmaProcessor;c.PatchTSMixerForPrediction;c.PatchTSMixerModel;c.PatchTSMixerPreTrainedModel;c.PatchTSTForPrediction;c.PatchTSTModel;c.PatchTSTPreTrainedModel;c.Phi3ForCausalLM;c.Phi3Model;c.Phi3PreTrainedModel;c.Phi3VForCausalLM;c.Phi3VImageProcessor;c.Phi3VPreTrainedModel;c.Phi3VProcessor;c.PhiForCausalLM;c.PhiModel;c.PhiPreTrainedModel;c.Pipeline;c.PreTrainedModel;c.PreTrainedTokenizer;c.PretrainedConfig;c.PretrainedMixin;c.Processor;c.PvtForImageClassification;c.PvtImageProcessor;c.PvtModel;c.PvtPreTrainedModel;c.PyAnnoteFeatureExtractor;c.PyAnnoteForAudioFrameClassification;c.PyAnnoteModel;c.PyAnnotePreTrainedModel;c.PyAnnoteProcessor;c.QuestionAnsweringModelOutput;c.QuestionAnsweringPipeline;c.Qwen2ForCausalLM;c.Qwen2Model;c.Qwen2PreTrainedModel;c.Qwen2Tokenizer;c.Qwen2VLForConditionalGeneration;c.Qwen2VLImageProcessor;c.Qwen2VLPreTrainedModel;c.Qwen2VLProcessor;c.RTDetrForObjectDetection;c.RTDetrImageProcessor;c.RTDetrModel;c.RTDetrObjectDetectionOutput;c.RTDetrPreTrainedModel;c.RawAudio;c.RawImage;c.RepetitionPenaltyLogitsProcessor;c.ResNetForImageClassification;c.ResNetModel;c.ResNetPreTrainedModel;c.RoFormerForMaskedLM;c.RoFormerForQuestionAnswering;c.RoFormerForSequenceClassification;c.RoFormerForTokenClassification;c.RoFormerModel;c.RoFormerPreTrainedModel;c.RoFormerTokenizer;c.RobertaForMaskedLM;c.RobertaForQuestionAnswering;c.RobertaForSequenceClassification;c.RobertaForTokenClassification;c.RobertaModel;c.RobertaPreTrainedModel;c.RobertaTokenizer;c.SamImageProcessor;c.SamImageSegmentationOutput;c.SamModel;c.SamPreTrainedModel;c.SamProcessor;c.SapiensForDepthEstimation;c.SapiensForNormalEstimation;c.SapiensForSemanticSegmentation;c.SapiensPreTrainedModel;c.SeamlessM4TFeatureExtractor;c.SegformerFeatureExtractor;c.SegformerForImageClassification;c.SegformerForSemanticSegmentation;c.SegformerImageProcessor;c.SegformerModel;c.SegformerPreTrainedModel;c.Seq2SeqLMOutput;c.SequenceClassifierOutput;c.SiglipImageProcessor;c.SiglipModel;c.SiglipPreTrainedModel;c.SiglipTextModel;c.SiglipTokenizer;c.SiglipVisionModel;c.SpeechT5FeatureExtractor;c.SpeechT5ForSpeechToText;c.SpeechT5ForTextToSpeech;c.SpeechT5HifiGan;c.SpeechT5Model;c.SpeechT5PreTrainedModel;c.SpeechT5Processor;c.SpeechT5Tokenizer;c.SqueezeBertForMaskedLM;c.SqueezeBertForQuestionAnswering;c.SqueezeBertForSequenceClassification;c.SqueezeBertModel;c.SqueezeBertPreTrainedModel;c.SqueezeBertTokenizer;c.StableLmForCausalLM;c.StableLmModel;c.StableLmPreTrainedModel;c.Starcoder2ForCausalLM;c.Starcoder2Model;c.Starcoder2PreTrainedModel;c.StoppingCriteria;c.StoppingCriteriaList;c.StyleTextToSpeech2Model;c.StyleTextToSpeech2PreTrainedModel;c.SummarizationPipeline;c.SuppressTokensAtBeginLogitsProcessor;c.Swin2SRForImageSuperResolution;c.Swin2SRImageProcessor;c.Swin2SRModel;c.Swin2SRPreTrainedModel;c.SwinForImageClassification;c.SwinModel;c.SwinPreTrainedModel;c.T5ForConditionalGeneration;c.T5Model;c.T5PreTrainedModel;c.T5Tokenizer;c.TableTransformerForObjectDetection;c.TableTransformerModel;c.TableTransformerObjectDetectionOutput;c.TableTransformerPreTrainedModel;c.TemperatureLogitsWarper;c.Tensor;c.Text2TextGenerationPipeline;c.TextClassificationPipeline;c.TextGenerationPipeline;var Bf=c.TextStreamer;c.TextToAudioPipeline;c.TokenClassificationPipeline;c.TokenClassifierOutput;c.TokenizerModel;c.TopKLogitsWarper;c.TopPLogitsWarper;c.TrOCRForCausalLM;c.TrOCRPreTrainedModel;c.TranslationPipeline;c.UniSpeechForCTC;c.UniSpeechForSequenceClassification;c.UniSpeechModel;c.UniSpeechPreTrainedModel;c.UniSpeechSatForAudioFrameClassification;c.UniSpeechSatForCTC;c.UniSpeechSatForSequenceClassification;c.UniSpeechSatModel;c.UniSpeechSatPreTrainedModel;c.VLChatProcessor;c.VLMImageProcessor;c.ViTFeatureExtractor;c.ViTForImageClassification;c.ViTImageProcessor;c.ViTMAEModel;c.ViTMAEPreTrainedModel;c.ViTMSNForImageClassification;c.ViTMSNModel;c.ViTMSNPreTrainedModel;c.ViTModel;c.ViTPreTrainedModel;c.VisionEncoderDecoderModel;c.VitMatteForImageMatting;c.VitMatteImageProcessor;c.VitMattePreTrainedModel;c.VitPoseForPoseEstimation;c.VitPoseImageProcessor;c.VitPosePreTrainedModel;c.VitsModel;c.VitsModelOutput;c.VitsPreTrainedModel;c.VitsTokenizer;c.Wav2Vec2BertForCTC;c.Wav2Vec2BertForSequenceClassification;c.Wav2Vec2BertModel;c.Wav2Vec2BertPreTrainedModel;c.Wav2Vec2CTCTokenizer;c.Wav2Vec2FeatureExtractor;c.Wav2Vec2ForAudioFrameClassification;c.Wav2Vec2ForCTC;c.Wav2Vec2ForSequenceClassification;c.Wav2Vec2Model;c.Wav2Vec2PreTrainedModel;c.Wav2Vec2Processor;c.Wav2Vec2ProcessorWithLM;c.WavLMForAudioFrameClassification;c.WavLMForCTC;c.WavLMForSequenceClassification;c.WavLMForXVector;c.WavLMModel;c.WavLMPreTrainedModel;c.WeSpeakerFeatureExtractor;c.WeSpeakerResNetModel;c.WeSpeakerResNetPreTrainedModel;c.WhisperFeatureExtractor;var Rf=c.WhisperForConditionalGeneration;c.WhisperModel;c.WhisperPreTrainedModel;c.WhisperProcessor;c.WhisperTextStreamer;c.WhisperTimeStampLogitsProcessor;c.WhisperTokenizer;c.XLMForQuestionAnswering;c.XLMForSequenceClassification;c.XLMForTokenClassification;c.XLMModel;c.XLMPreTrainedModel;c.XLMRobertaForMaskedLM;c.XLMRobertaForQuestionAnswering;c.XLMRobertaForSequenceClassification;c.XLMRobertaForTokenClassification;c.XLMRobertaModel;c.XLMRobertaPreTrainedModel;c.XLMRobertaTokenizer;c.XLMTokenizer;c.XLMWithLMHeadModel;c.XVectorOutput;c.YolosFeatureExtractor;c.YolosForObjectDetection;c.YolosImageProcessor;c.YolosModel;c.YolosObjectDetectionOutput;c.YolosPreTrainedModel;c.ZeroShotAudioClassificationPipeline;c.ZeroShotClassificationPipeline;c.ZeroShotImageClassificationPipeline;c.ZeroShotObjectDetectionPipeline;c.bankers_round;c.cat;c.cos_sim;c.dot;c.dynamic_time_warping;c.env;var Nf=c.full;c.full_like;c.getKeyValueShapes;c.hamming;c.hanning;c.interpolate;c.interpolate_4d;c.interpolate_data;c.is_chinese_char;c.layer_norm;c.load_image;c.log_softmax;c.magnitude;c.matmul;c.max;c.mean;c.mean_pooling;c.medianFilter;c.mel_filter_bank;c.min;c.ones;c.ones_like;c.permute;c.permute_data;c.pipeline;c.quantize_embeddings;c.rand;c.read_audio;c.rfft;c.round;c.slice;c.softmax;c.spectrogram;c.stack;c.std_mean;c.topk;c.window_function;c.zeros;c.zeros_like;const jf=64,$n=class $n{static async getInstance($=null){return this.model_id="onnx-community/whisper-large-v3-turbo",$n.tokenizer??($n.tokenizer=zf.from_pretrained(this.model_id,{progress_callback:$})),this.processor??(this.processor=Lf.from_pretrained(this.model_id,{progress_callback:$})),this.model??(this.model=Rf.from_pretrained(this.model_id,{dtype:{encoder_model:"fp16",decoder_model_merged:"q4"},device:"webgpu",progress_callback:$})),Promise.all([this.tokenizer,this.processor,this.model])}};me($n,"model_id",null),me($n,"tokenizer",null),me($n,"processor",null),me($n,"model",null);let Gp=$n,Vp=!1;async function Uf(Ie,$){if(Vp)return;if(Vp=!0,!Ie){console.debug("No audio data provided."),Vp=!1;return}console.debug("processWhisperMessage",Ie,$);const[r,f,A]=await Gp.getInstance(b=>{b.status==="progress"&&Math.ceil(b.progress*100)%10===0&&(console.debug(`Model loading: ${b.progress}%`),chrome.runtime.sendMessage({type:"whisper-progress",data:b}))});let j,X=0;const R=b=>{j??(j=performance.now()),X++>0&&X/(performance.now()-j)*1e3,console.debug("callback_func/output",b)},g=new Bf(r,{skip_prompt:!0,skip_special_tokens:!0,callback_function:R}),v=await f(Ie),M=await A.generate({...v,max_new_tokens:jf,language:$,streamer:g}),y=r.batch_decode(M,{skip_special_tokens:!0});return console.debug("outputText",y),Vp=!1,y}async function Vf(Ie){const[$,r,f]=await Gp.getInstance(A=>{console.debug("data",A),A.status==="progress"&&Math.ceil(A.progress*100)%10===0&&(console.debug(`Model loading: ${A.progress}%`),Ie(A.progress))});await f.generate({input_features:Nf([1,128,3e3],0),max_new_tokens:1})}const zc=Df();chrome.action.onClicked.addListener(async Ie=>{if(Ie.id===void 0){console.debug("Tab ID is undefined");return}console.debug("Tab ID:",Ie.id),(await chrome.runtime.getContexts({})).find(f=>f.contextType==="OFFSCREEN_DOCUMENT")||(console.debug("creating offscreenDocument"),await chrome.offscreen.createDocument({url:"offscreen.html",reasons:[chrome.offscreen.Reason.USER_MEDIA],justification:"Recording from chrome.tabCapture API"})),chrome.runtime.onMessage.addListener(async f=>{if(console.debug("Received message",f),f.type==="offscreen-ready"&&(console.debug("Received offscreen-ready message"),chrome.tabCapture.getMediaStreamId({targetTabId:Ie.id},A=>{if(!A){console.error("service-worker: Failed to get stream ID");return}console.debug("Stream ID:",A),chrome.runtime.sendMessage({type:"start-recording",target:"offscreen",streamId:A}),console.debug("Sent start-recording message")})),f.type==="initialize-transcription-model"&&(console.debug("Received initialize-transcription-model message"),await o_()),f.type==="transcription-message"){console.debug("Received transcripton message",f);const A=zc.get(xh);if(A!=="ready"&&A!=="loading"){console.debug("Model is not ready",A),await o_();return}if(A==="loading"){console.debug("Model is loading");return}const{serializedAudio:j,language:X}=f.data,R=new Float32Array(JSON.parse(j));console.debug("audio, language",R,X);const g=await Uf(R,X);chrome.runtime.sendMessage({type:"transcript",data:{transcripted:g.join(`
`)}})}}),console.debug("tab info:",Ie),console.debug("tab url",Ie.url)});async function o_(){zc.set(xh,"loading"),zc.set(r_,0),chrome.runtime.sendMessage({type:"model-status",data:{status:"loading",progress:0}}),await Vf(Ie=>{zc.set(r_,Ie),chrome.runtime.sendMessage({type:"model-status",data:{status:"loading",progress:Ie}})}),zc.set(xh,"ready"),chrome.runtime.sendMessage({type:"model-status",data:{status:"ready"}})}
